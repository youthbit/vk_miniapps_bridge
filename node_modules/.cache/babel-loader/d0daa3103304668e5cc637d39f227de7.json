{"ast":null,"code":"import { warnOnce } from '../../lib/warnOnce';\nimport { imageBaseSizes } from './types';\nimport { getBadgeIconSizeByImageBaseSize, getFallbackIconSizeByImageBaseSize, getOverlayIconSizeByImageBaseSize } from './helpers';\n/**\n * Пример,\n *\n * Icon28User -> 28\n * Icon12Circle1 -> 12\n * Icon12Circle2 -> 12\n */\n\nfunction parseIconSizeByDisplayName(displayName) {\n  if (typeof displayName !== 'string') {\n    return null;\n  }\n\n  var rawSize = displayName.replace(/\\d+$/g, '') // удаляем цифры в конце\n  .replace(/\\D/g, ''); // удаляем всё, что не является числом\n\n  var size = Number(rawSize);\n  return size > 0 ? size : null;\n}\n\nfunction parseIconSizeByWidthProp(width) {\n  if (typeof width !== 'string' && typeof width !== 'number') {\n    return null;\n  }\n\n  var size = Number(width);\n  return size > 0 ? size : null;\n}\n\nfunction getElementDisplayName(element) {\n  var _element$type$display;\n\n  return (_element$type$display = element.type.displayName) !== null && _element$type$display !== void 0 ? _element$type$display : null;\n}\n\nfunction getElementWidthProp(element) {\n  var _element$props$width;\n\n  return (_element$props$width = element.props.width) !== null && _element$props$width !== void 0 ? _element$props$width : null;\n}\n\nfunction getIconSizeByElement(element) {\n  var sizeByDisplayName = parseIconSizeByDisplayName(getElementDisplayName(element));\n  var sizeByWidth = parseIconSizeByWidthProp(getElementWidthProp(element));\n  return sizeByWidth ? sizeByWidth : sizeByDisplayName;\n}\n\nfunction validateIconComponentSizeByImageSize(imageSize, iconProp, selectorFn, logger) {\n  var iconSize = getIconSizeByElement(iconProp.value);\n\n  if (iconSize === null) {\n    return;\n  }\n\n  var result = selectorFn(imageSize);\n\n  if (result === iconSize || result === selectorFn.MAX_SIZE && iconSize >= result) {\n    return;\n  }\n\n  var iconName = getElementDisplayName(iconProp.value);\n  var propMessage = iconName ? \"\".concat(iconProp.name, \"={<\").concat(iconName, \" />}\") : iconProp.name;\n  logger(\"\\u0420\\u0430\\u0437\\u043C\\u0435\\u0440 `\".concat(propMessage, \"` \\u043D\\u0435 \\u0441\\u043E\\u043E\\u0442\\u0432\\u0435\\u0442\\u0441\\u0442\\u0432\\u0443\\u0435\\u0442 \\u0434\\u0438\\u0437\\u0430\\u0439\\u043D-\\u0441\\u0438\\u0441\\u0442\\u0435\\u043C\\u0435. \\u0414\\u043B\\u044F `size={\").concat(imageSize, \"}` \\u0440\\u0430\\u0437\\u043C\\u0435\\u0440 \\u0438\\u043A\\u043E\\u043D\\u043A\\u0438 \\u0434\\u043B\\u044F `\").concat(iconProp.name, \"` \\u0434\\u043E\\u043B\\u0436\\u0435\\u043D \\u0441\\u043E\\u043E\\u0442\\u0432\\u0435\\u0442\\u0441\\u0442\\u0432\\u043E\\u0432\\u0430\\u0442\\u044C <Icon\").concat(result, \"<name> />. \\u0415\\u0441\\u043B\\u0438 \\u0442\\u0430\\u043A\\u043E\\u0433\\u043E \\u0440\\u0430\\u0437\\u043C\\u0435\\u0440\\u0430 \\u043D\\u0435\\u0442, \\u0442\\u043E \\u0438\\u0441\\u043F\\u043E\\u043B\\u044C\\u0437\\u0443\\u0439\\u0442\\u0435 <\").concat(iconName, \" width={\").concat(result, \"} height={\").concat(result, \"} />\"), 'log');\n}\n\nvar warnImageBase = warnOnce('ImageBase');\nexport function validateFallbackIcon(imageSize, iconProp) {\n  return validateIconComponentSizeByImageSize(imageSize, iconProp, getFallbackIconSizeByImageBaseSize, warnImageBase);\n}\nvar mapOfExpectedSize = new Set(imageBaseSizes);\nvar arrayOfSizes = Object.keys(mapOfExpectedSize).map(function (str) {\n  return Number(str);\n});\nvar maxSize = arrayOfSizes.reduce(function (maxSize, size) {\n  return size > maxSize ? size : maxSize;\n}, 0);\nexport function validateSize(imageSize) {\n  if (imageSize > maxSize || mapOfExpectedSize.has(imageSize)) {\n    return;\n  }\n\n  warnImageBase(\"`size={\".concat(imageSize, \"}` \\u043D\\u0435 \\u0441\\u043E\\u043E\\u0442\\u0432\\u0435\\u0442\\u0441\\u0442\\u0432\\u0443\\u0435\\u0442 \\u0434\\u0438\\u0437\\u0430\\u0439\\u043D-\\u0441\\u0438\\u0441\\u0442\\u0435\\u043C\\u0435. \\u041F\\u043E\\u0436\\u0430\\u043B\\u0443\\u0439\\u0441\\u0442\\u0430, \\u0438\\u0441\\u043F\\u043E\\u043B\\u044C\\u0437\\u0443\\u0439\\u0442\\u0435 \\u043E\\u0434\\u0438\\u043D \\u0438\\u0437 \\u0441\\u043B\\u0435\\u0434\\u0443\\u044E\\u0449\\u0438\\u0445 \\u0432\\u0430\\u0440\\u0438\\u0430\\u043D\\u0442\\u043E\\u0432: \").concat(arrayOfSizes.join(' | ')), 'log');\n}\nvar warnImageBaseBadge = warnOnce('ImageBase.Badge');\nexport function validateBadgeIcon(imageSize, iconProp) {\n  if (imageSize < 24 && iconProp) {\n    return warnImageBaseBadge('Не используйте бейдж при `size < 24`.', 'log');\n  }\n\n  validateIconComponentSizeByImageSize(imageSize, iconProp, getBadgeIconSizeByImageBaseSize, warnImageBaseBadge);\n}\nvar warnImageBaseOverlay = warnOnce('ImageBase.Overlay');\nexport function validateOverlayIcon(imageSize, iconProp) {\n  validateIconComponentSizeByImageSize(imageSize, iconProp, getOverlayIconSizeByImageBaseSize, warnImageBaseOverlay);\n}","map":{"version":3,"mappings":"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","names":["warnOnce","imageBaseSizes","getBadgeIconSizeByImageBaseSize","getFallbackIconSizeByImageBaseSize","getOverlayIconSizeByImageBaseSize","parseIconSizeByDisplayName","displayName","rawSize","replace","size","Number","parseIconSizeByWidthProp","width","getElementDisplayName","element","type","_element$type$display","getElementWidthProp","props","_element$props$width","getIconSizeByElement","sizeByDisplayName","sizeByWidth","validateIconComponentSizeByImageSize","imageSize","iconProp","selectorFn","logger","iconSize","value","result","MAX_SIZE","iconName","propMessage","name","concat","warnImageBase","validateFallbackIcon","mapOfExpectedSize","Set","arrayOfSizes","Object","keys","map","str","maxSize","reduce","validateSize","has","join","warnImageBaseBadge","validateBadgeIcon","warnImageBaseOverlay","validateOverlayIcon"],"sources":["/Users/pitus_anonimous/Desktop/youth_bit_hack/youth_bit_vk/node_modules/@vkontakte/vkui/src/components/ImageBase/validators.ts"],"sourcesContent":["import { warnOnce } from '../../lib/warnOnce';\nimport { imageBaseSizes } from './types';\nimport {\n  getBadgeIconSizeByImageBaseSize,\n  getFallbackIconSizeByImageBaseSize,\n  getOverlayIconSizeByImageBaseSize,\n} from './helpers';\n\n/**\n * Пример,\n *\n * Icon28User -> 28\n * Icon12Circle1 -> 12\n * Icon12Circle2 -> 12\n */\nfunction parseIconSizeByDisplayName(displayName: unknown): number | null {\n  if (typeof displayName !== 'string') {\n    return null;\n  }\n  const rawSize = displayName\n    .replace(/\\d+$/g, '') // удаляем цифры в конце\n    .replace(/\\D/g, ''); // удаляем всё, что не является числом\n  const size = Number(rawSize);\n  return size > 0 ? size : null;\n}\n\nfunction parseIconSizeByWidthProp(width: unknown): number | null {\n  if (typeof width !== 'string' && typeof width !== 'number') {\n    return null;\n  }\n  const size = Number(width);\n  return size > 0 ? size : null;\n}\n\nfunction getElementDisplayName(element: JSX.Element): string | null {\n  return element.type.displayName ?? null;\n}\n\nfunction getElementWidthProp(element: JSX.Element): number | string | null {\n  return element.props.width ?? null;\n}\n\nfunction getIconSizeByElement(element: JSX.Element): number | null {\n  const sizeByDisplayName = parseIconSizeByDisplayName(getElementDisplayName(element));\n  const sizeByWidth = parseIconSizeByWidthProp(getElementWidthProp(element));\n  return sizeByWidth ? sizeByWidth : sizeByDisplayName;\n}\n\ninterface IconProp {\n  name: string;\n  value: JSX.Element;\n}\n\ninterface SelectorFn {\n  (imageSize: number): number;\n  MAX_SIZE: number;\n}\n\nfunction validateIconComponentSizeByImageSize(\n  imageSize: number,\n  iconProp: IconProp,\n  selectorFn: SelectorFn,\n  logger: ReturnType<typeof warnOnce>,\n) {\n  const iconSize = getIconSizeByElement(iconProp.value);\n\n  if (iconSize === null) {\n    return;\n  }\n\n  const result = selectorFn(imageSize);\n\n  if (result === iconSize || (result === selectorFn.MAX_SIZE && iconSize >= result)) {\n    return;\n  }\n\n  const iconName = getElementDisplayName(iconProp.value);\n  const propMessage = iconName ? `${iconProp.name}={<${iconName} />}` : iconProp.name;\n\n  logger(\n    `Размер \\`${propMessage}\\` не соответствует дизайн-системе. Для \\`size={${imageSize}}\\` размер иконки для \\`${iconProp.name}\\` должен соответствовать <Icon${result}<name> />. Если такого размера нет, то используйте <${iconName} width={${result}} height={${result}} />`,\n    'log',\n  );\n}\n\nconst warnImageBase = warnOnce('ImageBase');\n\nexport function validateFallbackIcon(imageSize: number, iconProp: IconProp) {\n  return validateIconComponentSizeByImageSize(\n    imageSize,\n    iconProp,\n    getFallbackIconSizeByImageBaseSize,\n    warnImageBase,\n  );\n}\n\nconst mapOfExpectedSize = new Set<number>(imageBaseSizes);\n\nconst arrayOfSizes = Object.keys(mapOfExpectedSize).map((str) => Number(str));\nconst maxSize = arrayOfSizes.reduce((maxSize, size) => (size > maxSize ? size : maxSize), 0);\n\nexport function validateSize(imageSize: number): void {\n  if (imageSize > maxSize || mapOfExpectedSize.has(imageSize)) {\n    return;\n  }\n  warnImageBase(\n    `\\`size={${imageSize}}\\` не соответствует дизайн-системе. Пожалуйста, используйте один из следующих вариантов: ${arrayOfSizes.join(\n      ' | ',\n    )}`,\n    'log',\n  );\n}\n\nconst warnImageBaseBadge = warnOnce('ImageBase.Badge');\n\nexport function validateBadgeIcon(imageSize: number, iconProp: IconProp): void {\n  if (imageSize < 24 && iconProp) {\n    return warnImageBaseBadge('Не используйте бейдж при `size < 24`.', 'log');\n  }\n  validateIconComponentSizeByImageSize(\n    imageSize,\n    iconProp,\n    getBadgeIconSizeByImageBaseSize,\n    warnImageBaseBadge,\n  );\n}\n\nconst warnImageBaseOverlay = warnOnce('ImageBase.Overlay');\n\nexport function validateOverlayIcon(imageSize: number, iconProp: IconProp): void {\n  validateIconComponentSizeByImageSize(\n    imageSize,\n    iconProp,\n    getOverlayIconSizeByImageBaseSize,\n    warnImageBaseOverlay,\n  );\n}\n"]},"metadata":{},"sourceType":"module"}