{"ast":null,"code":"import _typeof from \"@babel/runtime/helpers/typeof\";\nimport _extends from \"@babel/runtime/helpers/extends\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _objectSpread from \"@babel/runtime/helpers/objectSpread2\";\nvar _excluded = [\"style\", \"onFocus\", \"onKeyDown\", \"className\", \"fetching\", \"renderOption\", \"emptyText\", \"getRef\", \"getRootRef\", \"disabled\", \"placeholder\", \"tabIndex\", \"getOptionValue\", \"getOptionLabel\", \"showSelected\", \"getNewOptionData\", \"renderChip\", \"popupDirection\", \"creatable\", \"filterFn\", \"inputValue\", \"creatableText\", \"closeAfterSelect\", \"onChangeStart\", \"before\", \"options\", \"fixDropdownWidth\", \"forceDropdownPortal\"];\nimport * as React from 'react';\nimport { DropdownIcon } from '../DropdownIcon/DropdownIcon';\nimport { classNames, noop } from '@vkontakte/vkjs';\nimport { ChipsInputBase, chipsInputDefaultProps } from '../ChipsInputBase/ChipsInputBase';\nimport { CustomSelectOption } from '../CustomSelectOption/CustomSelectOption';\nimport { useChipsSelect } from '../../hooks/useChipsSelect';\nimport { useDOM } from '../../lib/dom';\nimport { Footnote } from '../Typography/Footnote/Footnote';\nimport { useExternRef } from '../../hooks/useExternRef';\nimport { useGlobalEventListener } from '../../hooks/useGlobalEventListener';\nimport { defaultFilterFn } from '../../lib/select';\nimport { CustomSelectDropdown } from '../CustomSelectDropdown/CustomSelectDropdown';\nimport { FormField } from '../FormField/FormField';\nimport { IconButton } from '../IconButton/IconButton';\nvar FOCUS_ACTION_NEXT = 'next';\nvar FOCUS_ACTION_PREV = 'prev';\n\nvar chipsSelectDefaultProps = _objectSpread(_objectSpread({}, chipsInputDefaultProps), {}, {\n  emptyText: 'Ничего не найдено',\n  creatableText: 'Создать значение',\n  onChangeStart: noop,\n  creatable: false,\n  fetching: false,\n  showSelected: true,\n  closeAfterSelect: true,\n  options: [],\n  filterFn: defaultFilterFn,\n  renderOption: function renderOption(props) {\n    return /*#__PURE__*/React.createElement(CustomSelectOption, props);\n  }\n});\n/**\n * @see https://vkcom.github.io/VKUI/#/ChipsSelect\n */\n\n\nexport var ChipsSelect = function ChipsSelect(props) {\n  var propsWithDefault = _objectSpread(_objectSpread({}, chipsSelectDefaultProps), props);\n\n  var style = propsWithDefault.style,\n      onFocus = propsWithDefault.onFocus,\n      onKeyDown = propsWithDefault.onKeyDown,\n      className = propsWithDefault.className,\n      fetching = propsWithDefault.fetching,\n      renderOption = propsWithDefault.renderOption,\n      emptyText = propsWithDefault.emptyText,\n      getRef = propsWithDefault.getRef,\n      getRootRef = propsWithDefault.getRootRef,\n      disabled = propsWithDefault.disabled,\n      placeholder = propsWithDefault.placeholder,\n      tabIndex = propsWithDefault.tabIndex,\n      getOptionValue = propsWithDefault.getOptionValue,\n      getOptionLabel = propsWithDefault.getOptionLabel,\n      showSelected = propsWithDefault.showSelected,\n      getNewOptionData = propsWithDefault.getNewOptionData,\n      renderChip = propsWithDefault.renderChip,\n      popupDirection = propsWithDefault.popupDirection,\n      creatable = propsWithDefault.creatable,\n      filterFn = propsWithDefault.filterFn,\n      inputValue = propsWithDefault.inputValue,\n      creatableText = propsWithDefault.creatableText,\n      closeAfterSelect = propsWithDefault.closeAfterSelect,\n      onChangeStart = propsWithDefault.onChangeStart,\n      before = propsWithDefault.before,\n      options = propsWithDefault.options,\n      fixDropdownWidth = propsWithDefault.fixDropdownWidth,\n      forceDropdownPortal = propsWithDefault.forceDropdownPortal,\n      restProps = _objectWithoutProperties(propsWithDefault, _excluded);\n\n  var _useDOM = useDOM(),\n      document = _useDOM.document;\n\n  var _React$useState = React.useState(undefined),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      popperPlacement = _React$useState2[0],\n      setPopperPlacement = _React$useState2[1];\n\n  var scrollBoxRef = React.useRef(null);\n  var rootRef = useExternRef(getRef);\n\n  var _useChipsSelect = useChipsSelect(propsWithDefault),\n      fieldValue = _useChipsSelect.fieldValue,\n      _useChipsSelect$selec = _useChipsSelect.selectedOptions,\n      selectedOptions = _useChipsSelect$selec === void 0 ? [] : _useChipsSelect$selec,\n      opened = _useChipsSelect.opened,\n      setOpened = _useChipsSelect.setOpened,\n      addOptionFromInput = _useChipsSelect.addOptionFromInput,\n      filteredOptions = _useChipsSelect.filteredOptions,\n      addOption = _useChipsSelect.addOption,\n      handleInputChange = _useChipsSelect.handleInputChange,\n      clearInput = _useChipsSelect.clearInput,\n      focusedOption = _useChipsSelect.focusedOption,\n      setFocusedOption = _useChipsSelect.setFocusedOption,\n      focusedOptionIndex = _useChipsSelect.focusedOptionIndex,\n      setFocusedOptionIndex = _useChipsSelect.setFocusedOptionIndex;\n\n  var showCreatable = Boolean(creatable && creatableText && !filteredOptions.length && fieldValue);\n\n  var handleFocus = function handleFocus(e) {\n    setOpened(true);\n    setFocusedOptionIndex(0);\n    onFocus(e);\n  };\n\n  var handleClickOutside = function handleClickOutside(e) {\n    var _rootRef$current;\n\n    if (e.target !== rootRef.current && !((_rootRef$current = rootRef.current) !== null && _rootRef$current !== void 0 && _rootRef$current.contains(e.target))) {\n      setOpened(false);\n    }\n  };\n\n  var chipsSelectOptions = React.useRef([]).current;\n\n  var scrollToElement = function scrollToElement(index) {\n    var center = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n    var dropdown = scrollBoxRef.current;\n    var item = chipsSelectOptions[index];\n\n    if (!item || !dropdown) {\n      return;\n    }\n\n    var dropdownHeight = dropdown.offsetHeight;\n    var scrollTop = dropdown.scrollTop;\n    var itemTop = item.offsetTop;\n    var itemHeight = item.offsetHeight;\n\n    if (center) {\n      dropdown.scrollTop = itemTop - dropdownHeight / 2 + itemHeight / 2;\n    } else if (itemTop + itemHeight > dropdownHeight + scrollTop) {\n      dropdown.scrollTop = itemTop - dropdownHeight + itemHeight;\n    } else if (itemTop < scrollTop) {\n      dropdown.scrollTop = itemTop;\n    }\n  };\n\n  var focusOptionByIndex = function focusOptionByIndex(index, oldIndex) {\n    var length = filteredOptions.length;\n\n    if (index < 0) {\n      index = length - 1;\n    } else if (index >= length) {\n      index = 0;\n    }\n\n    if (index === oldIndex) {\n      return;\n    }\n\n    scrollToElement(index);\n    setFocusedOptionIndex(index);\n  };\n\n  var focusOption = function focusOption(nextIndex, type) {\n    var index = typeof nextIndex !== 'number' ? -1 : nextIndex;\n\n    if (type === FOCUS_ACTION_NEXT) {\n      index = index + 1;\n    } else if (type === FOCUS_ACTION_PREV) {\n      index = index - 1;\n    }\n\n    if (focusedOptionIndex != null) {\n      focusOptionByIndex(index, focusedOptionIndex);\n    }\n  };\n\n  var handleKeyDown = function handleKeyDown(e) {\n    onKeyDown(e);\n\n    if (e.key === 'ArrowUp' && !e.defaultPrevented) {\n      e.preventDefault();\n\n      if (!opened) {\n        setOpened(true);\n        setFocusedOptionIndex(0);\n      } else {\n        focusOption(focusedOptionIndex, FOCUS_ACTION_PREV);\n      }\n    }\n\n    if (e.key === 'ArrowDown' && !e.defaultPrevented) {\n      e.preventDefault();\n\n      if (!opened) {\n        setOpened(true);\n        setFocusedOptionIndex(0);\n      } else {\n        focusOption(focusedOptionIndex, FOCUS_ACTION_NEXT);\n      }\n    }\n\n    if (e.key === 'Enter' && !e.defaultPrevented && opened && focusedOptionIndex != null) {\n      var _option = filteredOptions[focusedOptionIndex];\n\n      if (_option) {\n        onChangeStart(e, _option);\n\n        if (!e.defaultPrevented) {\n          addOption(_option);\n          setFocusedOptionIndex(null);\n          clearInput();\n          closeAfterSelect && setOpened(false);\n          e.preventDefault();\n        }\n      } else if (!creatable) {\n        e.preventDefault();\n      }\n    }\n\n    if (['Escape', 'Tab'].includes(e.key) && !e.defaultPrevented && opened) {\n      setOpened(false);\n    }\n  };\n\n  React.useEffect(function () {\n    if (focusedOptionIndex != null && filteredOptions[focusedOptionIndex]) {\n      setFocusedOption(filteredOptions[focusedOptionIndex]);\n    } else if (focusedOptionIndex === null || focusedOptionIndex === 0) {\n      setFocusedOption(null);\n    }\n  }, [focusedOptionIndex, filteredOptions, setFocusedOption]);\n  React.useEffect(function () {\n    var index = focusedOption ? filteredOptions.findIndex(function (_ref) {\n      var value = _ref.value;\n      return value === focusedOption.value;\n    }) : -1;\n\n    if (index === -1 && !!filteredOptions.length && !showCreatable && closeAfterSelect) {\n      setFocusedOption(filteredOptions[0]);\n    }\n  }, [filteredOptions, focusedOption, showCreatable, closeAfterSelect, setFocusedOption]);\n  useGlobalEventListener(document, 'click', handleClickOutside);\n\n  var renderChipWrapper = function renderChipWrapper(renderChipProps) {\n    if (renderChipProps === undefined) {\n      return null;\n    }\n\n    var onRemoveWrapper = function onRemoveWrapper(e, value) {\n      var _renderChipProps$onRe;\n\n      e === null || e === void 0 ? void 0 : e.preventDefault();\n      e === null || e === void 0 ? void 0 : e.stopPropagation();\n      (_renderChipProps$onRe = renderChipProps.onRemove) === null || _renderChipProps$onRe === void 0 ? void 0 : _renderChipProps$onRe.call(renderChipProps, e, value);\n    };\n\n    return renderChip(_objectSpread(_objectSpread({}, renderChipProps), {}, {\n      onRemove: onRemoveWrapper\n    }));\n  };\n\n  var isPopperDirectionTop = popperPlacement === null || popperPlacement === void 0 ? void 0 : popperPlacement.includes('top');\n  var onPlacementChange = React.useCallback(function (placement) {\n    setPopperPlacement(placement);\n  }, [setPopperPlacement]);\n  var onDropdownMouseLeave = React.useCallback(function () {\n    setFocusedOptionIndex(null);\n  }, [setFocusedOptionIndex]);\n  var observableRefs = React.useMemo(function () {\n    return [scrollBoxRef, rootRef];\n  }, [rootRef, scrollBoxRef]);\n\n  var toggleOpened = function toggleOpened() {\n    setOpened(function (prevOpened) {\n      return !prevOpened;\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(FormField, {\n    getRootRef: rootRef,\n    style: style,\n    className: classNames(\"vkuiChipsSelect\", opened && (isPopperDirectionTop ? \"vkuiChipsSelect--pop-up\" : \"vkuiChipsSelect--pop-down\"), className),\n    disabled: disabled,\n    role: \"application\",\n    \"aria-disabled\": disabled,\n    \"aria-readonly\": restProps.readOnly,\n    after: /*#__PURE__*/React.createElement(IconButton, {\n      className: \"vkuiChipsSelect__dropdown\",\n      activeMode: \"\",\n      hoverMode: \"\" // TODO: add label customization\n      ,\n      \"aria-label\": opened ? 'Скрыть' : 'Развернуть',\n      onClick: toggleOpened\n    }, /*#__PURE__*/React.createElement(DropdownIcon, {\n      className: \"vkuiChipsSelect__icon\",\n      opened: opened\n    })),\n    before: before\n  }, /*#__PURE__*/React.createElement(ChipsInputBase, _extends({}, restProps, {\n    tabIndex: tabIndex,\n    value: selectedOptions,\n    inputValue: fieldValue,\n    getNewOptionData: getNewOptionData,\n    getOptionLabel: getOptionLabel,\n    getOptionValue: getOptionValue,\n    renderChip: renderChipWrapper,\n    onFocus: handleFocus,\n    onKeyDown: handleKeyDown,\n    placeholder: placeholder,\n    getRef: getRef,\n    disabled: disabled,\n    onInputChange: handleInputChange\n  }))), opened && /*#__PURE__*/React.createElement(CustomSelectDropdown, {\n    targetRef: rootRef,\n    placement: popupDirection,\n    scrollBoxRef: scrollBoxRef,\n    observableRefs: observableRefs,\n    onPlacementChange: onPlacementChange,\n    onMouseLeave: onDropdownMouseLeave,\n    fetching: fetching,\n    className: \"vkuiChipsSelect__options\",\n    sameWidth: fixDropdownWidth,\n    forcePortal: forceDropdownPortal\n  }, showCreatable && /*#__PURE__*/React.createElement(CustomSelectOption, {\n    hovered: focusedOptionIndex === 0,\n    onMouseDown: addOptionFromInput,\n    onMouseEnter: function onMouseEnter() {\n      return setFocusedOptionIndex(0);\n    }\n  }, creatableText), !(filteredOptions !== null && filteredOptions !== void 0 && filteredOptions.length) && !showCreatable && emptyText ? /*#__PURE__*/React.createElement(Footnote, {\n    className: \"vkuiChipsSelect__empty\"\n  }, emptyText) : filteredOptions.map(function (option, index) {\n    var label = getOptionLabel(option);\n    var hovered = focusedOption && getOptionValue(option) === getOptionValue(focusedOption);\n    var selected = selectedOptions.find(function (selectedOption) {\n      return getOptionValue(selectedOption) === getOptionValue(option);\n    });\n    var value = getOptionValue(option);\n    return /*#__PURE__*/React.createElement(React.Fragment, {\n      key: \"\".concat(_typeof(value), \"-\").concat(value)\n    }, renderOption({\n      className: \"vkuiChipsSelect__option\",\n      option: option,\n      hovered: Boolean(hovered),\n      children: label,\n      selected: !!selected,\n      getRootRef: function getRootRef(e) {\n        if (e) {\n          return chipsSelectOptions[index] = e;\n        }\n\n        return undefined;\n      },\n      onMouseDown: function onMouseDown(e) {\n        onChangeStart === null || onChangeStart === void 0 ? void 0 : onChangeStart(e, option);\n\n        if (!e.defaultPrevented) {\n          closeAfterSelect && setOpened(false);\n          addOption(option);\n          clearInput();\n        }\n      },\n      onMouseEnter: function onMouseEnter() {\n        return setFocusedOptionIndex(index);\n      }\n    }));\n  })));\n};","map":{"version":3,"mappings":";;;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,YAAT,QAA6B,8BAA7B;AACA,SAASC,UAAT,EAAqBC,IAArB,QAAiC,iBAAjC;AAGA,SAASC,cAAT,EAAyBC,sBAAzB,QAAuD,kCAAvD;AACA,SACEC,kBADF,QAGO,0CAHP;AAIA,SAASC,cAAT,QAA+B,4BAA/B;AACA,SAASC,MAAT,QAAuB,eAAvB;AACA,SAASC,QAAT,QAAyB,iCAAzB;AACA,SAASC,YAAT,QAA6B,0BAA7B;AACA,SAASC,sBAAT,QAAuC,oCAAvC;AACA,SAASC,eAAT,QAAgC,kBAAhC;AAEA,SAASC,oBAAT,QAAqC,8CAArC;AACA,SAASC,SAAT,QAA0B,wBAA1B;AACA,SAASC,UAAT,QAA2B,0BAA3B;AAiDA,IAAMC,iBAAkC,GAAG,MAA3C;AACA,IAAMC,iBAAkC,GAAG,MAA3C;;AAEA,IAAMC,uBAA8C,mCAC/Cb,sBAD+C,GACzB,EADyB,EACzB;EACzBc,SAAS,EAAE,mBADc;EAEzBC,aAAa,EAAE,kBAFU;EAGzBC,aAAa,EAAElB,IAHU;EAIzBmB,SAAS,EAAE,KAJc;EAKzBC,QAAQ,EAAE,KALe;EAMzBC,YAAY,EAAE,IANW;EAOzBC,gBAAgB,EAAE,IAPO;EAQzBC,OAAO,EAAE,EARgB;EASzBC,QAAQ,EAAEf,eATe;EAUzBgB,YAAY,wBAACC,KAAD,EAAQ;IAClB,oBAAO7B,oBAACM,kBAAD,EAAwBuB,KAAxB,CAAP;EACF;AAZyB,CADyB,CAApD;AAgBA;AACA;AACA;;;AACA,OAAO,IAAMC,WAAW,GAAG,SAAdA,WAAc,CAA4BD,KAA5B,EAAgE;EACzF,IAAME,gBAAgB,mCAAQb,uBAAR,GAAoCW,KAApC,CAAtB;;EACA,IACEG,KAAK,GA6BHD,gBAAgB,CA7BlBC,KADF;EAAA,IAEEC,OAAO,GA4BLF,gBAAgB,CA5BlBE,OAFF;EAAA,IAGEC,SAAS,GA2BPH,gBAAgB,CA3BlBG,SAHF;EAAA,IAIEC,SAAS,GA0BPJ,gBAAgB,CA1BlBI,SAJF;EAAA,IAKEZ,QAAQ,GAyBNQ,gBAAgB,CAzBlBR,QALF;EAAA,IAMEK,YAAY,GAwBVG,gBAAgB,CAxBlBH,YANF;EAAA,IAOET,SAAS,GAuBPY,gBAAgB,CAvBlBZ,SAPF;EAAA,IAQEiB,MAAM,GAsBJL,gBAAgB,CAtBlBK,MARF;EAAA,IASEC,UAAU,GAqBRN,gBAAgB,CArBlBM,UATF;EAAA,IAUEC,QAAQ,GAoBNP,gBAAgB,CApBlBO,QAVF;EAAA,IAWEC,WAAW,GAmBTR,gBAAgB,CAnBlBQ,WAXF;EAAA,IAYEC,QAAQ,GAkBNT,gBAAgB,CAlBlBS,QAZF;EAAA,IAaEC,cAAc,GAiBZV,gBAAgB,CAjBlBU,cAbF;EAAA,IAcEC,cAAc,GAgBZX,gBAAgB,CAhBlBW,cAdF;EAAA,IAeElB,YAAY,GAeVO,gBAAgB,CAflBP,YAfF;EAAA,IAgBEmB,gBAAgB,GAcdZ,gBAAgB,CAdlBY,gBAhBF;EAAA,IAiBEC,UAAU,GAaRb,gBAAgB,CAblBa,UAjBF;EAAA,IAkBEC,cAAc,GAYZd,gBAAgB,CAZlBc,cAlBF;EAAA,IAmBEvB,SAAS,GAWPS,gBAAgB,CAXlBT,SAnBF;EAAA,IAoBEK,QAAQ,GAUNI,gBAAgB,CAVlBJ,QApBF;EAAA,IAqBEmB,UAAU,GASRf,gBAAgB,CATlBe,UArBF;EAAA,IAsBE1B,aAAa,GAQXW,gBAAgB,CARlBX,aAtBF;EAAA,IAuBEK,gBAAgB,GAOdM,gBAAgB,CAPlBN,gBAvBF;EAAA,IAwBEJ,aAAa,GAMXU,gBAAgB,CANlBV,aAxBF;EAAA,IAyBE0B,MAAM,GAKJhB,gBAAgB,CALlBgB,MAzBF;EAAA,IA0BErB,OAAO,GAILK,gBAAgB,CAJlBL,OA1BF;EAAA,IA2BEsB,gBAAgB,GAGdjB,gBAAgB,CAHlBiB,gBA3BF;EAAA,IA4BEC,mBAAmB,GAEjBlB,gBAAgB,CAFlBkB,mBA5BF;EAAA,IA6BKC,SAAS,4BACVnB,gBADU,EACMoB,SADN,CA7Bd;;EAgCA,cAAqB3C,MAAM,EAA3B;EAAA,IAAQ4C,QAAQ,WAARA,QAAR;;EAEA,sBAA8CpD,KAAK,CAACqD,QAANrD,CAAsCsD,SAAtCtD,CAA9C;EAAA,IAA8FuD,qDAA9F;EAAA,IAAOC,eAAe,sBAAtB;EAAA,IAAwBC,kBAAkB,sBAA1C;;EAEA,IAAMC,YAAY,GAAG1D,KAAK,CAAC2D,MAAN3D,CAA6B,IAA7BA,CAArB;EACA,IAAM4D,OAAO,GAAGlD,YAAY,CAAC0B,MAAD,CAA5B;;EACA,sBAcI7B,cAAc,CAACwB,gBAAD,CAdlB;EAAA,IACE8B,UAAU,mBAAVA,UADF;EAAA,IACYC,wCACVC,eAFF;EAAA,IAEEA,eAAe,sCAAG,EAAH,GAAKD,qBAFtB;EAAA,IAGEE,MAAM,mBAANA,MAHF;EAAA,IAIEC,SAAS,mBAATA,SAJF;EAAA,IAKEC,kBAAkB,mBAAlBA,kBALF;EAAA,IAMEC,eAAe,mBAAfA,eANF;EAAA,IAOEC,SAAS,mBAATA,SAPF;EAAA,IAQEC,iBAAiB,mBAAjBA,iBARF;EAAA,IASEC,UAAU,mBAAVA,UATF;EAAA,IAUEC,aAAa,mBAAbA,aAVF;EAAA,IAWEC,gBAAgB,mBAAhBA,gBAXF;EAAA,IAYEC,kBAAkB,mBAAlBA,kBAZF;EAAA,IAaEC,qBAAqB,mBAArBA,qBAbF;;EAgBA,IAAMC,aAAa,GAAGC,OAAO,CAC3BtD,SAAS,IAAIF,aAAbE,IAA8B,CAAC6C,eAAe,CAACU,MAA/CvD,IAAyDuC,UAD9B,CAA7B;;EAIA,IAAMiB,WAAW,GAAG,SAAdA,WAAc,CAACC,CAAD,EAA2C;IAC7Dd,SAAS,CAAC,IAAD,CAATA;IACAS,qBAAqB,CAAC,CAAD,CAArBA;IACAzC,OAAO,CAAE8C,CAAF,CAAP9C;EACD,CAJD;;EAMA,IAAM+C,kBAAkB,GAAG,SAArBA,kBAAqB,CAACD,CAAD,EAAmB;IAAA;;IAC5C,IAAIA,CAAC,CAACE,MAAFF,KAAanB,OAAO,CAACsB,OAArBH,IAAgC,sBAACnB,OAAO,CAACsB,OAAT,MAAgB,IAAhB,IAAgBC,2BAAhB,IAACA,iBAAiBC,QAAjB,CAA0BL,CAAC,CAACE,MAA5B,CAAD,CAApC,EAAkF;MAChFhB,SAAS,CAAC,KAAD,CAATA;IACF;EACD,CAJD;;EAMA,IAAMoB,kBAAkB,GAAGrF,KAAK,CAAC2D,MAAN3D,CAA4B,EAA5BA,EAAgCkF,OAA3D;;EAEA,IAAMI,eAAe,GAAG,SAAlBA,eAAkB,CAACC,KAAD,EAAmC;IAAA,IAAnBC,MAAM,uEAAG,KAAU;IACzD,IAAMC,QAAQ,GAAG/B,YAAY,CAACwB,OAA9B;IACA,IAAMQ,IAAI,GAAGL,kBAAkB,CAACE,KAAD,CAA/B;;IAEA,IAAI,CAACG,IAAD,IAAS,CAACD,QAAd,EAAwB;MACtB;IACF;;IAEA,IAAME,cAAc,GAAGF,QAAQ,CAACG,YAAhC;IACA,IAAMC,SAAS,GAAGJ,QAAQ,CAACI,SAA3B;IACA,IAAMC,OAAO,GAAGJ,IAAI,CAACK,SAArB;IACA,IAAMC,UAAU,GAAGN,IAAI,CAACE,YAAxB;;IAEA,IAAIJ,MAAJ,EAAY;MACVC,QAAQ,CAACI,SAATJ,GAAqBK,OAAO,GAAGH,cAAc,GAAG,CAA3BG,GAA+BE,UAAU,GAAG,CAAjEP;IACD,CAFD,MAEO,IAAIK,OAAO,GAAGE,UAAVF,GAAuBH,cAAc,GAAGE,SAA5C,EAAuD;MAC5DJ,QAAQ,CAACI,SAATJ,GAAqBK,OAAO,GAAGH,cAAVG,GAA2BE,UAAhDP;IACD,CAFM,MAEA,IAAIK,OAAO,GAAGD,SAAd,EAAyB;MAC9BJ,QAAQ,CAACI,SAATJ,GAAqBK,OAArBL;IACF;EACD,CApBD;;EAsBA,IAAMQ,kBAAkB,GAAG,SAArBA,kBAAqB,CAACV,KAAD,EAAgBW,QAAhB,EAAqC;IAC9D,IAAQrB,MAAM,GAAKV,eAAe,CAA1BU,MAAR;;IAEA,IAAIU,KAAK,GAAG,CAAZ,EAAe;MACbA,KAAK,GAAGV,MAAM,GAAG,CAAjBU;IACD,CAFD,MAEO,IAAIA,KAAK,IAAIV,MAAb,EAAqB;MAC1BU,KAAK,GAAG,CAARA;IACF;;IAEA,IAAIA,KAAK,KAAKW,QAAd,EAAwB;MACtB;IACF;;IAEAZ,eAAe,CAACC,KAAD,CAAfD;IACAZ,qBAAqB,CAACa,KAAD,CAArBb;EACD,CAfD;;EAiBA,IAAMyB,WAAW,GAAG,SAAdA,WAAc,CAACC,SAAD,EAA2BC,IAA3B,EAAqD;IACvE,IAAId,KAAK,GAAG,OAAOa,SAAP,KAAqB,QAArB,GAAgC,CAAC,CAAjC,GAAqCA,SAAjD;;IAEA,IAAIC,IAAI,KAAKrF,iBAAb,EAAgC;MAC9BuE,KAAK,GAAGA,KAAK,GAAG,CAAhBA;IACD,CAFD,MAEO,IAAIc,IAAI,KAAKpF,iBAAb,EAAgC;MACrCsE,KAAK,GAAGA,KAAK,GAAG,CAAhBA;IACF;;IAEA,IAAId,kBAAkB,IAAI,IAA1B,EAAgC;MAC9BwB,kBAAkB,CAACV,KAAD,EAAQd,kBAAR,CAAlBwB;IACF;EACD,CAZD;;EAcA,IAAMK,aAAa,GAAG,SAAhBA,aAAgB,CAACvB,CAAD,EAA8C;IAClE7C,SAAS,CAAE6C,CAAF,CAAT7C;;IAEA,IAAI6C,CAAC,CAACwB,GAAFxB,KAAU,SAAVA,IAAuB,CAACA,CAAC,CAACyB,gBAA9B,EAAgD;MAC9CzB,CAAC,CAAC0B,cAAF1B;;MAEA,IAAI,CAACf,MAAL,EAAa;QACXC,SAAS,CAAC,IAAD,CAATA;QACAS,qBAAqB,CAAC,CAAD,CAArBA;MACD,CAHD,MAGO;QACLyB,WAAW,CAAC1B,kBAAD,EAAqBxD,iBAArB,CAAXkF;MACF;IACF;;IAEA,IAAIpB,CAAC,CAACwB,GAAFxB,KAAU,WAAVA,IAAyB,CAACA,CAAC,CAACyB,gBAAhC,EAAkD;MAChDzB,CAAC,CAAC0B,cAAF1B;;MAEA,IAAI,CAACf,MAAL,EAAa;QACXC,SAAS,CAAC,IAAD,CAATA;QACAS,qBAAqB,CAAC,CAAD,CAArBA;MACD,CAHD,MAGO;QACLyB,WAAW,CAAC1B,kBAAD,EAAqBzD,iBAArB,CAAXmF;MACF;IACF;;IAEA,IAAIpB,CAAC,CAACwB,GAAFxB,KAAU,OAAVA,IAAqB,CAACA,CAAC,CAACyB,gBAAxBzB,IAA4Cf,MAA5Ce,IAAsDN,kBAAkB,IAAI,IAAhF,EAAsF;MACpF,IAAMiC,OAAM,GAAGvC,eAAe,CAACM,kBAAD,CAA9B;;MAEA,IAAIiC,OAAJ,EAAY;QACVrF,aAAa,CAAE0D,CAAF,EAAK2B,OAAL,CAAbrF;;QAEA,IAAI,CAAC0D,CAAC,CAACyB,gBAAP,EAAyB;UACvBpC,SAAS,CAACsC,OAAD,CAATtC;UACAM,qBAAqB,CAAC,IAAD,CAArBA;UACAJ,UAAU;UACV7C,gBAAgB,IAAIwC,SAAS,CAAC,KAAD,CAA7BxC;UACAsD,CAAC,CAAC0B,cAAF1B;QACF;MACD,CAVD,MAUO,IAAI,CAACzD,SAAL,EAAgB;QACrByD,CAAC,CAAC0B,cAAF1B;MACF;IACF;;IAEA,IAAI,CAAC,QAAD,EAAW,KAAX,EAAkB4B,QAAlB,CAA2B5B,CAAC,CAACwB,GAA7B,KAAqC,CAACxB,CAAC,CAACyB,gBAAxC,IAA4DxC,MAAhE,EAAwE;MACtEC,SAAS,CAAC,KAAD,CAATA;IACF;EACD,CA9CD;;EAgDAjE,KAAK,CAAC4G,SAAN5G,CAAgB,YAAM;IACpB,IAAIyE,kBAAkB,IAAI,IAAtBA,IAA8BN,eAAe,CAACM,kBAAD,CAAjD,EAAuE;MACrED,gBAAgB,CAACL,eAAe,CAACM,kBAAD,CAAhB,CAAhBD;IACD,CAFD,MAEO,IAAIC,kBAAkB,KAAK,IAAvBA,IAA+BA,kBAAkB,KAAK,CAA1D,EAA6D;MAClED,gBAAgB,CAAC,IAAD,CAAhBA;IACF;EACD,CANDxE,EAMG,CAACyE,kBAAD,EAAqBN,eAArB,EAAsCK,gBAAtC,CANHxE;EAQAA,KAAK,CAAC4G,SAAN5G,CAAgB,YAAM;IACpB,IAAMuF,KAAK,GAAGhB,aAAa,GACvBJ,eAAe,CAAC0C,SAAhB1C,CAA0B;MAAA,IAAG2C,KAAK,QAALA,KAAH;MAAQ,OAAOA,KAAK,KAAKvC,aAAa,CAACuC,KAA/B;IAAoC,CAAtE3C,CADuB,GAEvB,CAAC,CAFL;;IAIA,IAAIoB,KAAK,KAAK,CAAC,CAAXA,IAAgB,CAAC,CAACpB,eAAe,CAACU,MAAlCU,IAA4C,CAACZ,aAA7CY,IAA8D9D,gBAAlE,EAAoF;MAClF+C,gBAAgB,CAACL,eAAe,CAAC,CAAD,CAAhB,CAAhBK;IACF;EACD,CARDxE,EAQG,CAACmE,eAAD,EAAkBI,aAAlB,EAAiCI,aAAjC,EAAgDlD,gBAAhD,EAAkE+C,gBAAlE,CARHxE;EAUAW,sBAAsB,CAACyC,QAAD,EAAW,OAAX,EAAoB4B,kBAApB,CAAtBrE;;EAEA,IAAMoG,iBAAiB,GAAG,SAApBA,iBAAoB,CAACC,eAAD,EAAqD;IAC7E,IAAIA,eAAe,KAAK1D,SAAxB,EAAmC;MACjC,OAAO,IAAP;IACF;;IACA,IAAM2D,eAAe,GAAG,SAAlBA,eAAkB,CAAClC,CAAD,EAAkC+B,KAAlC,EAAmE;MAAA;;MACzF/B,CAAC,SAADA,KAAC,WAADA,GAAC,MAADA,IAAC,CAAE0B,cAAH1B;MACAA,CAAC,SAADA,KAAC,WAADA,GAAC,MAADA,IAAC,CAAEmC,eAAHnC;MAEA,wCAAe,CAACoC,QAAhB,MAAwB,IAAxB,IAAwBC,gCAAxB,GAAwB,MAAxB,+CAA2BrC,CAA3B,EAA8B+B,KAA9B;IACD,CALD;;IAOA,OAAOlE,UAAU,iCACZoE,eADY,GACG,EADH,EACG;MAClBG,QAAQ,EAAEF;IADQ,CADH,EAAjB;EAID,CAfD;;EAiBA,IAAMI,oBAAoB,GAAG7D,eAAe,SAAfA,mBAAe,WAAfA,GAAe,MAAfA,kBAAe,CAAEmD,QAAjBnD,CAA0B,KAA1BA,CAA7B;EAEA,IAAM8D,iBAAiB,GAAGtH,KAAK,CAACuH,WAANvH,CACxB,UAACwH,SAAD,EAA2B;IACzB/D,kBAAkB,CAAC+D,SAAD,CAAlB/D;EACD,CAHuBzD,EAIxB,CAACyD,kBAAD,CAJwBzD,CAA1B;EAOA,IAAMyH,oBAAoB,GAAGzH,KAAK,CAACuH,WAANvH,CAAkB,YAAM;IACnD0E,qBAAqB,CAAC,IAAD,CAArBA;EACD,CAF4B1E,EAE1B,CAAC0E,qBAAD,CAF0B1E,CAA7B;EAIA,IAAM0H,cAAc,GAAG1H,KAAK,CAAC2H,OAAN3H,CAAc;IAAA,OAAM,CAAC0D,YAAD,EAAeE,OAAf,CAAN;EAA6B,CAA3C5D,EAA6C,CAAC4D,OAAD,EAAUF,YAAV,CAA7C1D,CAAvB;;EAEA,IAAM4H,YAAY,GAAG,SAAfA,YAAe,GAAM;IACzB3D,SAAS,CAAC,UAAC4D,UAAD,EAAW;MAAA,OAAK,CAACA,UAAN;IAAgB,CAA5B,CAAT5D;EACD,CAFD;;EAIA,oBACEjE,uDACEA,oBAACc,SAAD,EAAU;IACRuB,UAAU,EAAEuB,OADJ;IAER5B,KAAK,EAAEA,KAFC;IAGRG,SAAS,EAAEjC,UAAU,oBAEnB8D,MAAM,KACHqD,oBAAoB,0DADjB,CAFa,EAMnBlF,SANmB,CAHb;IAWRG,QAAQ,EAAEA,QAXF;IAYRwF,IAAI,EAAC,aAZG;IAaR,iBAAexF,QAbP;IAcR,iBAAeY,SAAS,CAAC6E,QAdjB;IAeRC,KAAK,eACHhI,oBAACe,UAAD,EAAW;MACToB,SAAS,6BADA;MAET8F,UAAU,EAAC,EAFF;MAGTC,SAAS,EAAC,EAHD,CAIT;MAJS;MAKT,cAAYlE,MAAM,GAAG,QAAH,GAAc,YALvB;MAMTmE,OAAO,EAAEP;IANA,CAAX,EAMwB,aAEtB5H,oBAACC,YAAD,EAAa;MAACkC,SAAS,yBAAV;MAAyC6B,MAAM,EAAEA;IAAjD,CAAb,CARF,CAhBM;IA2BRjB,MAAM,EAAEA;EA3BA,CAAV,EA2BiB,aAEf/C,oBAACI,cAAD,EAAegI,aACTlF,SADS,EACA;IACbV,QAAQ,EAAEA,QADG;IAEbsE,KAAK,EAAE/C,eAFM;IAGbjB,UAAU,EAAEe,UAHC;IAIblB,gBAAgB,EAAEA,gBAJL;IAKbD,cAAc,EAAEA,cALH;IAMbD,cAAc,EAAEA,cANH;IAObG,UAAU,EAAEmE,iBAPC;IAQb9E,OAAO,EAAE6C,WARI;IASb5C,SAAS,EAAEoE,aATE;IAUb/D,WAAW,EAAEA,WAVA;IAWbH,MAAM,EAAEA,MAXK;IAYbE,QAAQ,EAAEA,QAZG;IAab+F,aAAa,EAAEhE;EAbF,CADA,CAAf,CA7BF,CADF,EA+CGL,MAAM,iBACLhE,oBAACa,oBAAD,EAAqB;IACnByH,SAAS,EAAE1E,OADQ;IAEnB4D,SAAS,EAAE3E,cAFQ;IAGnBa,YAAY,EAAEA,YAHK;IAInBgE,cAAc,EAAEA,cAJG;IAKnBJ,iBAAiB,EAAEA,iBALA;IAMnBiB,YAAY,EAAEd,oBANK;IAOnBlG,QAAQ,EAAEA,QAPS;IAQnBY,SAAS,4BARU;IASnBqG,SAAS,EAAExF,gBATQ;IAUnByF,WAAW,EAAExF;EAVM,CAArB,EAYG0B,aAAa,iBACZ3E,oBAACM,kBAAD,EAAmB;IACjBoI,OAAO,EAAEjE,kBAAkB,KAAK,CADf;IAEjBkE,WAAW,EAAEzE,kBAFI;IAGjB0E,YAAY,EAAE;MAAA,OAAMlE,qBAAqB,CAAC,CAAD,CAA3B;IAA8B;EAH3B,CAAnB,EAKGtD,aALH,CAbJ,EAqBG,EAAC+C,eAAe,SAAfA,mBAAe,WAAfA,mBAAe,CAAEU,MAAlB,KAA4B,CAACF,aAA7B,IAA8CxD,SAA9C,GAAuD,aACtDnB,oBAACS,QAAD,EAAS;IAAC0B,SAAS;EAAV,CAAT,EAAoDhB,SAApD,CADD,GAGCgD,eAAe,CAAC0E,GAAhB1E,CAAoB,UAACuC,MAAD,EAAiBnB,KAAjB,EAAmC;IACrD,IAAMuD,KAAK,GAAGpG,cAAc,CAAEgE,MAAF,CAA5B;IACA,IAAMgC,OAAO,GACXnE,aAAa,IAAI9B,cAAc,CAAEiE,MAAF,CAAdjE,KAA4BA,cAAc,CAAE8B,aAAF,CAD7D;IAEA,IAAMwE,QAAQ,GAAGhF,eAAe,CAACiF,IAAhBjF,CAAqB,UAACkF,cAAD,EAA4B;MAChE,OAAOxG,cAAc,CAAEwG,cAAF,CAAdxG,KAAoCA,cAAc,CAAEiE,MAAF,CAAzD;IACD,CAFgB3C,CAAjB;IAGA,IAAM+C,KAAK,GAAGrE,cAAc,CAAEiE,MAAF,CAA5B;IAEA,oBACE1G,oBAACA,KAAK,CAACkJ,QAAP,EAAe;MAAC3C,GAAG,oBAAYO,KAAZ,GAAiB,GAAjB,EAAiBqC,MAAjB,CAAqBrC,KAArB;IAAJ,CAAf,EACGlF,YAAY,CAAE;MACbO,SAAS,2BADI;MAEbuE,MAAM,EAANA,MAFa;MAGbgC,OAAO,EAAE9D,OAAO,CAAC8D,OAAD,CAHH;MAIbU,QAAQ,EAAEN,KAJG;MAKbC,QAAQ,EAAE,CAAC,CAACA,QALC;MAMb1G,UAAU,EAAE,oBAAC0C,CAAD,EAAO;QACjB,IAAIA,CAAJ,EAAO;UACL,OAAQM,kBAAkB,CAACE,KAAD,CAAlBF,GAA4BN,CAApC;QACF;;QACA,OAAOzB,SAAP;MACD,CAXY;MAYbqF,WAAW,EAAE,qBAAC5D,CAAD,EAAyC;QACpD1D,aAAa,SAAbA,iBAAa,WAAbA,GAAa,MAAbA,gBAAa,CAAG0D,CAAH,EAAM2B,MAAN,CAAbrF;;QAEA,IAAI,CAAC0D,CAAC,CAACyB,gBAAP,EAAyB;UACvB/E,gBAAgB,IAAIwC,SAAS,CAAC,KAAD,CAA7BxC;UACA2C,SAAS,CAACsC,MAAD,CAATtC;UACAE,UAAU;QACZ;MACD,CApBY;MAqBbsE,YAAY,EAAE;QAAA,OAAMlE,qBAAqB,CAACa,KAAD,CAA3B;MAAkC;IArBnC,CAAF,CADf,CADF;EA2BD,CApCDpB,CAxBJ,CAhDJ,CADF;AAmHD,CA1VM","names":["React","DropdownIcon","classNames","noop","ChipsInputBase","chipsInputDefaultProps","CustomSelectOption","useChipsSelect","useDOM","Footnote","useExternRef","useGlobalEventListener","defaultFilterFn","CustomSelectDropdown","FormField","IconButton","FOCUS_ACTION_NEXT","FOCUS_ACTION_PREV","chipsSelectDefaultProps","emptyText","creatableText","onChangeStart","creatable","fetching","showSelected","closeAfterSelect","options","filterFn","renderOption","props","ChipsSelect","propsWithDefault","style","onFocus","onKeyDown","className","getRef","getRootRef","disabled","placeholder","tabIndex","getOptionValue","getOptionLabel","getNewOptionData","renderChip","popupDirection","inputValue","before","fixDropdownWidth","forceDropdownPortal","restProps","_excluded","document","useState","undefined","_React$useState2","popperPlacement","setPopperPlacement","scrollBoxRef","useRef","rootRef","fieldValue","_useChipsSelect$selec","selectedOptions","opened","setOpened","addOptionFromInput","filteredOptions","addOption","handleInputChange","clearInput","focusedOption","setFocusedOption","focusedOptionIndex","setFocusedOptionIndex","showCreatable","Boolean","length","handleFocus","e","handleClickOutside","target","current","_rootRef$current","contains","chipsSelectOptions","scrollToElement","index","center","dropdown","item","dropdownHeight","offsetHeight","scrollTop","itemTop","offsetTop","itemHeight","focusOptionByIndex","oldIndex","focusOption","nextIndex","type","handleKeyDown","key","defaultPrevented","preventDefault","option","includes","useEffect","findIndex","value","renderChipWrapper","renderChipProps","onRemoveWrapper","stopPropagation","onRemove","_renderChipProps$onRe","isPopperDirectionTop","onPlacementChange","useCallback","placement","onDropdownMouseLeave","observableRefs","useMemo","toggleOpened","prevOpened","role","readOnly","after","activeMode","hoverMode","onClick","_extends","onInputChange","targetRef","onMouseLeave","sameWidth","forcePortal","hovered","onMouseDown","onMouseEnter","map","label","selected","find","selectedOption","Fragment","concat","children"],"sources":["/Users/pitus_anonimous/Desktop/youth_bit_hack/youth_bit_vk/node_modules/@vkontakte/vkui/src/components/ChipsSelect/ChipsSelect.tsx"],"sourcesContent":["import * as React from 'react';\nimport { DropdownIcon } from '../DropdownIcon/DropdownIcon';\nimport { classNames, noop } from '@vkontakte/vkjs';\nimport { ChipOption, ChipValue, RenderChip } from '../Chip/Chip';\nimport { ChipsInputProps } from '../ChipsInput/ChipsInput';\nimport { ChipsInputBase, chipsInputDefaultProps } from '../ChipsInputBase/ChipsInputBase';\nimport {\n  CustomSelectOption,\n  CustomSelectOptionProps,\n} from '../CustomSelectOption/CustomSelectOption';\nimport { useChipsSelect } from '../../hooks/useChipsSelect';\nimport { useDOM } from '../../lib/dom';\nimport { Footnote } from '../Typography/Footnote/Footnote';\nimport { useExternRef } from '../../hooks/useExternRef';\nimport { useGlobalEventListener } from '../../hooks/useGlobalEventListener';\nimport { defaultFilterFn } from '../../lib/select';\nimport { Placement } from '../Popper/Popper';\nimport { CustomSelectDropdown } from '../CustomSelectDropdown/CustomSelectDropdown';\nimport { FormField } from '../FormField/FormField';\nimport { IconButton } from '../IconButton/IconButton';\nimport styles from './ChipsSelect.module.css';\n\nexport interface ChipsSelectProps<Option extends ChipOption>\n  extends Omit<ChipsInputProps<Option>, 'after'> {\n  popupDirection?: 'top' | 'bottom';\n  options?: Option[];\n  filterFn?:\n    | false\n    | ((\n        value?: string,\n        option?: Option,\n        getOptionLabel?: Pick<ChipsInputProps<Option>, 'getOptionLabel'>['getOptionLabel'],\n      ) => boolean);\n  /**\n   * Возможность создавать чипы которых нет в списке (по enter или с помощью пункта в меню, см creatableText)\n   */\n  creatable?: boolean;\n  /**\n   * Отрисовка лоадера вместо списка опций в выпадающем списке\n   */\n  fetching?: boolean;\n  renderOption?: (props: CustomSelectOptionProps) => React.ReactNode;\n  /**\n   * Показывать или скрывать уже выбранные опции\n   */\n  showSelected?: boolean;\n  /**\n   * Текст для пункта создающего чипы при клике, так же отвечает за то будет ли показан этот пункт (показывается после того как в списке не отсанется опций)\n   */\n  creatableText?: string;\n  /**\n   * Текст который показывается если список опций пуст\n   */\n  emptyText?: string;\n  /**\n   * Событие срабатывающее перед onChange\n   */\n  onChangeStart?: (e: React.MouseEvent | React.KeyboardEvent, option: Option) => void;\n  /**\n   * Закрытие выпадающего списка после выбора элемента\n   */\n  closeAfterSelect?: boolean;\n  fixDropdownWidth?: boolean;\n  forceDropdownPortal?: boolean;\n}\n\ntype FocusActionType = 'next' | 'prev';\n\nconst FOCUS_ACTION_NEXT: FocusActionType = 'next';\nconst FOCUS_ACTION_PREV: FocusActionType = 'prev';\n\nconst chipsSelectDefaultProps: ChipsSelectProps<any> = {\n  ...chipsInputDefaultProps,\n  emptyText: 'Ничего не найдено',\n  creatableText: 'Создать значение',\n  onChangeStart: noop,\n  creatable: false,\n  fetching: false,\n  showSelected: true,\n  closeAfterSelect: true,\n  options: [],\n  filterFn: defaultFilterFn,\n  renderOption(props) {\n    return <CustomSelectOption {...props} />;\n  },\n};\n\n/**\n * @see https://vkcom.github.io/VKUI/#/ChipsSelect\n */\nexport const ChipsSelect = <Option extends ChipOption>(props: ChipsSelectProps<Option>) => {\n  const propsWithDefault = { ...chipsSelectDefaultProps, ...props };\n  const {\n    style,\n    onFocus,\n    onKeyDown,\n    className,\n    fetching,\n    renderOption,\n    emptyText,\n    getRef,\n    getRootRef,\n    disabled,\n    placeholder,\n    tabIndex,\n    getOptionValue,\n    getOptionLabel,\n    showSelected,\n    getNewOptionData,\n    renderChip,\n    popupDirection,\n    creatable,\n    filterFn,\n    inputValue,\n    creatableText,\n    closeAfterSelect,\n    onChangeStart,\n    before,\n    options,\n    fixDropdownWidth,\n    forceDropdownPortal,\n    ...restProps\n  } = propsWithDefault;\n\n  const { document } = useDOM();\n\n  const [popperPlacement, setPopperPlacement] = React.useState<Placement | undefined>(undefined);\n\n  const scrollBoxRef = React.useRef<HTMLDivElement>(null);\n  const rootRef = useExternRef(getRef);\n  const {\n    fieldValue,\n    selectedOptions = [],\n    opened,\n    setOpened,\n    addOptionFromInput,\n    filteredOptions,\n    addOption,\n    handleInputChange,\n    clearInput,\n    focusedOption,\n    setFocusedOption,\n    focusedOptionIndex,\n    setFocusedOptionIndex,\n  } = useChipsSelect(propsWithDefault);\n\n  const showCreatable = Boolean(\n    creatable && creatableText && !filteredOptions.length && fieldValue,\n  );\n\n  const handleFocus = (e: React.FocusEvent<HTMLInputElement>) => {\n    setOpened(true);\n    setFocusedOptionIndex(0);\n    onFocus!(e);\n  };\n\n  const handleClickOutside = (e: MouseEvent) => {\n    if (e.target !== rootRef.current && !rootRef.current?.contains(e.target as Node)) {\n      setOpened(false);\n    }\n  };\n\n  const chipsSelectOptions = React.useRef<HTMLElement[]>([]).current;\n\n  const scrollToElement = (index: number, center = false) => {\n    const dropdown = scrollBoxRef.current;\n    const item = chipsSelectOptions[index];\n\n    if (!item || !dropdown) {\n      return;\n    }\n\n    const dropdownHeight = dropdown.offsetHeight;\n    const scrollTop = dropdown.scrollTop;\n    const itemTop = item.offsetTop;\n    const itemHeight = item.offsetHeight;\n\n    if (center) {\n      dropdown.scrollTop = itemTop - dropdownHeight / 2 + itemHeight / 2;\n    } else if (itemTop + itemHeight > dropdownHeight + scrollTop) {\n      dropdown.scrollTop = itemTop - dropdownHeight + itemHeight;\n    } else if (itemTop < scrollTop) {\n      dropdown.scrollTop = itemTop;\n    }\n  };\n\n  const focusOptionByIndex = (index: number, oldIndex: number) => {\n    const { length } = filteredOptions;\n\n    if (index < 0) {\n      index = length - 1;\n    } else if (index >= length) {\n      index = 0;\n    }\n\n    if (index === oldIndex) {\n      return;\n    }\n\n    scrollToElement(index);\n    setFocusedOptionIndex(index);\n  };\n\n  const focusOption = (nextIndex: number | null, type: FocusActionType) => {\n    let index = typeof nextIndex !== 'number' ? -1 : nextIndex;\n\n    if (type === FOCUS_ACTION_NEXT) {\n      index = index + 1;\n    } else if (type === FOCUS_ACTION_PREV) {\n      index = index - 1;\n    }\n\n    if (focusedOptionIndex != null) {\n      focusOptionByIndex(index, focusedOptionIndex);\n    }\n  };\n\n  const handleKeyDown = (e: React.KeyboardEvent<HTMLInputElement>) => {\n    onKeyDown!(e);\n\n    if (e.key === 'ArrowUp' && !e.defaultPrevented) {\n      e.preventDefault();\n\n      if (!opened) {\n        setOpened(true);\n        setFocusedOptionIndex(0);\n      } else {\n        focusOption(focusedOptionIndex, FOCUS_ACTION_PREV);\n      }\n    }\n\n    if (e.key === 'ArrowDown' && !e.defaultPrevented) {\n      e.preventDefault();\n\n      if (!opened) {\n        setOpened(true);\n        setFocusedOptionIndex(0);\n      } else {\n        focusOption(focusedOptionIndex, FOCUS_ACTION_NEXT);\n      }\n    }\n\n    if (e.key === 'Enter' && !e.defaultPrevented && opened && focusedOptionIndex != null) {\n      const option = filteredOptions[focusedOptionIndex];\n\n      if (option) {\n        onChangeStart!(e, option);\n\n        if (!e.defaultPrevented) {\n          addOption(option);\n          setFocusedOptionIndex(null);\n          clearInput();\n          closeAfterSelect && setOpened(false);\n          e.preventDefault();\n        }\n      } else if (!creatable) {\n        e.preventDefault();\n      }\n    }\n\n    if (['Escape', 'Tab'].includes(e.key) && !e.defaultPrevented && opened) {\n      setOpened(false);\n    }\n  };\n\n  React.useEffect(() => {\n    if (focusedOptionIndex != null && filteredOptions[focusedOptionIndex]) {\n      setFocusedOption(filteredOptions[focusedOptionIndex]);\n    } else if (focusedOptionIndex === null || focusedOptionIndex === 0) {\n      setFocusedOption(null);\n    }\n  }, [focusedOptionIndex, filteredOptions, setFocusedOption]);\n\n  React.useEffect(() => {\n    const index = focusedOption\n      ? filteredOptions.findIndex(({ value }) => value === focusedOption.value)\n      : -1;\n\n    if (index === -1 && !!filteredOptions.length && !showCreatable && closeAfterSelect) {\n      setFocusedOption(filteredOptions[0]);\n    }\n  }, [filteredOptions, focusedOption, showCreatable, closeAfterSelect, setFocusedOption]);\n\n  useGlobalEventListener(document, 'click', handleClickOutside);\n\n  const renderChipWrapper = (renderChipProps: RenderChip<Option> | undefined) => {\n    if (renderChipProps === undefined) {\n      return null;\n    }\n    const onRemoveWrapper = (e: React.MouseEvent | undefined, value: ChipValue | undefined) => {\n      e?.preventDefault();\n      e?.stopPropagation();\n\n      renderChipProps.onRemove?.(e, value);\n    };\n\n    return renderChip!({\n      ...renderChipProps,\n      onRemove: onRemoveWrapper,\n    });\n  };\n\n  const isPopperDirectionTop = popperPlacement?.includes('top');\n\n  const onPlacementChange = React.useCallback(\n    (placement?: Placement) => {\n      setPopperPlacement(placement);\n    },\n    [setPopperPlacement],\n  );\n\n  const onDropdownMouseLeave = React.useCallback(() => {\n    setFocusedOptionIndex(null);\n  }, [setFocusedOptionIndex]);\n\n  const observableRefs = React.useMemo(() => [scrollBoxRef, rootRef], [rootRef, scrollBoxRef]);\n\n  const toggleOpened = () => {\n    setOpened((prevOpened) => !prevOpened);\n  };\n\n  return (\n    <>\n      <FormField\n        getRootRef={rootRef}\n        style={style}\n        className={classNames(\n          styles['ChipsSelect'],\n          opened &&\n            (isPopperDirectionTop\n              ? styles['ChipsSelect--pop-up']\n              : styles['ChipsSelect--pop-down']),\n          className,\n        )}\n        disabled={disabled}\n        role=\"application\"\n        aria-disabled={disabled}\n        aria-readonly={restProps.readOnly}\n        after={\n          <IconButton\n            className={styles['ChipsSelect__dropdown']}\n            activeMode=\"\"\n            hoverMode=\"\"\n            // TODO: add label customization\n            aria-label={opened ? 'Скрыть' : 'Развернуть'}\n            onClick={toggleOpened}\n          >\n            <DropdownIcon className={styles['ChipsSelect__icon']} opened={opened} />\n          </IconButton>\n        }\n        before={before}\n      >\n        <ChipsInputBase\n          {...restProps}\n          tabIndex={tabIndex}\n          value={selectedOptions}\n          inputValue={fieldValue}\n          getNewOptionData={getNewOptionData}\n          getOptionLabel={getOptionLabel}\n          getOptionValue={getOptionValue}\n          renderChip={renderChipWrapper}\n          onFocus={handleFocus}\n          onKeyDown={handleKeyDown}\n          placeholder={placeholder}\n          getRef={getRef}\n          disabled={disabled}\n          onInputChange={handleInputChange}\n        />\n      </FormField>\n      {opened && (\n        <CustomSelectDropdown\n          targetRef={rootRef}\n          placement={popupDirection}\n          scrollBoxRef={scrollBoxRef}\n          observableRefs={observableRefs}\n          onPlacementChange={onPlacementChange}\n          onMouseLeave={onDropdownMouseLeave}\n          fetching={fetching}\n          className={styles['ChipsSelect__options']}\n          sameWidth={fixDropdownWidth}\n          forcePortal={forceDropdownPortal}\n        >\n          {showCreatable && (\n            <CustomSelectOption\n              hovered={focusedOptionIndex === 0}\n              onMouseDown={addOptionFromInput}\n              onMouseEnter={() => setFocusedOptionIndex(0)}\n            >\n              {creatableText}\n            </CustomSelectOption>\n          )}\n          {!filteredOptions?.length && !showCreatable && emptyText ? (\n            <Footnote className={styles['ChipsSelect__empty']}>{emptyText}</Footnote>\n          ) : (\n            filteredOptions.map((option: Option, index: number) => {\n              const label = getOptionLabel!(option);\n              const hovered =\n                focusedOption && getOptionValue!(option) === getOptionValue!(focusedOption);\n              const selected = selectedOptions.find((selectedOption: Option) => {\n                return getOptionValue!(selectedOption) === getOptionValue!(option);\n              });\n              const value = getOptionValue!(option);\n\n              return (\n                <React.Fragment key={`${typeof value}-${value}`}>\n                  {renderOption!({\n                    className: styles['ChipsSelect__option'],\n                    option,\n                    hovered: Boolean(hovered),\n                    children: label,\n                    selected: !!selected,\n                    getRootRef: (e) => {\n                      if (e) {\n                        return (chipsSelectOptions[index] = e);\n                      }\n                      return undefined;\n                    },\n                    onMouseDown: (e: React.MouseEvent<HTMLDivElement>) => {\n                      onChangeStart?.(e, option);\n\n                      if (!e.defaultPrevented) {\n                        closeAfterSelect && setOpened(false);\n                        addOption(option);\n                        clearInput();\n                      }\n                    },\n                    onMouseEnter: () => setFocusedOptionIndex(index),\n                  })}\n                </React.Fragment>\n              );\n            })\n          )}\n        </CustomSelectDropdown>\n      )}\n    </>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}