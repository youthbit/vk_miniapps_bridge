{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _objectSpread from \"@babel/runtime/helpers/objectSpread2\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _createSuper from \"@babel/runtime/helpers/createSuper\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nvar _excluded = [\"popout\", \"modal\", \"platform\", \"activePanel\", \"splitCol\", \"configProvider\", \"history\", \"id\", \"nav\", \"onTransition\", \"onSwipeBack\", \"onSwipeBackStart\", \"onSwipeBackCancel\", \"window\", \"document\", \"scroll\", \"isBackCheck\", \"className\"];\nimport * as React from 'react';\nimport { classNames } from '@vkontakte/vkjs';\nimport { transitionEvent, animationEvent } from '../../lib/supportEvents';\nimport { getPlatformClassName } from '../../helpers/getPlatformClassName';\nimport { Platform } from '../../lib/platform';\nimport { Touch } from '../Touch/Touch';\nimport { withPlatform } from '../../hoc/withPlatform';\nimport { withContext } from '../../hoc/withContext';\nimport { ConfigProviderContext } from '../ConfigProvider/ConfigProviderContext';\nimport { SplitColContext } from '../SplitCol/SplitCol';\nimport { AppRootPortal } from '../AppRoot/AppRootPortal';\nimport { canUseDOM, withDOM } from '../../lib/dom';\nimport { ScrollContext } from '../AppRoot/ScrollContext';\nimport { NavTransitionProvider } from '../NavTransitionContext/NavTransitionContext';\nimport { getNavId } from '../../lib/getNavId';\nimport { warnOnce } from '../../lib/warnOnce';\nimport { swipeBackExcluded } from './utils';\nvar warn = warnOnce('ViewInfinite');\nvar SwipeBackResults;\n\n(function (SwipeBackResults) {\n  SwipeBackResults[SwipeBackResults[\"fail\"] = 1] = \"fail\";\n  SwipeBackResults[SwipeBackResults[\"success\"] = 2] = \"success\";\n})(SwipeBackResults || (SwipeBackResults = {}));\n\nvar scrollsCache = {};\n\nvar ViewInfiniteComponent = /*#__PURE__*/function (_React$Component) {\n  _inherits(ViewInfiniteComponent, _React$Component);\n\n  var _super = _createSuper(ViewInfiniteComponent);\n\n  function ViewInfiniteComponent(props) {\n    var _this;\n\n    _classCallCheck(this, ViewInfiniteComponent);\n\n    _this = _super.call(this, props);\n\n    _defineProperty(_assertThisInitialized(_this), \"scrolls\", scrollsCache[getNavId(_this.props, warn)] || {});\n\n    _defineProperty(_assertThisInitialized(_this), \"transitionFinishTimeout\", undefined);\n\n    _defineProperty(_assertThisInitialized(_this), \"animationFinishTimeout\", undefined);\n\n    _defineProperty(_assertThisInitialized(_this), \"panelNodes\", {});\n\n    _defineProperty(_assertThisInitialized(_this), \"transitionEndHandler\", function (e) {\n      if ((!e || ['vkui-animation-ios-next-forward', 'vkui-animation-ios-prev-back', 'vkui-animation-view-next-forward', 'vkui-animation-view-prev-back'].includes(e.animationName)) && _this.state.prevPanel !== null) {\n        _this.flushTransition(_this.state.prevPanel, Boolean(_this.state.isBack));\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"swipingBackTransitionEndHandler\", function (e) {\n      // indexOf because of vendor prefixes in old browsers\n      if (!e || e.propertyName.includes('transform') && e.target === _this.pickPanel(_this.state.swipeBackNextPanel)) {\n        switch (_this.state.swipeBackResult) {\n          case SwipeBackResults.fail:\n            _this.onSwipeBackCancel();\n\n            break;\n\n          case SwipeBackResults.success:\n            _this.onSwipeBackSuccess();\n\n        }\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onMoveX\", function (event) {\n      var _this$props$configPro;\n\n      if (!_this.window || _this.props.platform !== Platform.IOS || _this.state.swipeBackPrevented || swipeBackExcluded(event) || _this.shouldDisableTransitionMotion()) {\n        return;\n      }\n\n      if (!((_this$props$configPro = _this.props.configProvider) !== null && _this$props$configPro !== void 0 && _this$props$configPro.isWebView)) {\n        if ((event.startX <= ViewInfiniteComponent.SWIPE_BACK_AREA || event.startX >= _this.window.innerWidth - ViewInfiniteComponent.SWIPE_BACK_AREA) && !_this.state.browserSwipe) {\n          _this.setState({\n            browserSwipe: true\n          });\n        }\n\n        return;\n      }\n\n      if (!_this.props.onSwipeBack || _this.state.animated && event.startX <= ViewInfiniteComponent.SWIPE_BACK_AREA) {\n        return;\n      }\n\n      if (!_this.state.swipingBack && event.startX <= ViewInfiniteComponent.SWIPE_BACK_AREA && _this.props.history && _this.props.history.length > 1) {\n        if (_this.props.onSwipeBackStart) {\n          var payload = _this.props.onSwipeBackStart(_this.state.activePanel);\n\n          if (payload === 'prevent') {\n            _this.setState({\n              swipeBackPrevented: true\n            });\n\n            return;\n          }\n        }\n\n        if (_this.state.activePanel !== null) {\n          var _this$props$scroll; // Note: вызываем закрытие клавиатуры. В iOS это нативное поведение при свайпе.\n\n\n          _this.blurActiveElement();\n\n          var prevScrolls = _this.scrolls[_this.state.activePanel] || [];\n          _this.scrolls = _objectSpread(_objectSpread({}, _this.scrolls), {}, _defineProperty({}, _this.state.activePanel, [].concat(_toConsumableArray(prevScrolls), [(_this$props$scroll = _this.props.scroll) === null || _this$props$scroll === void 0 ? void 0 : _this$props$scroll.getScroll().y])));\n        }\n\n        _this.setState({\n          swipingBack: true,\n          swipeBackStartX: event.startX,\n          swipeBackPrevPanel: _this.state.activePanel,\n          swipeBackNextPanel: _this.props.history.slice(-2)[0]\n        });\n      }\n\n      if (_this.state.swipingBack) {\n        var swipeBackShift;\n\n        if (event.shiftX < 0) {\n          swipeBackShift = 0;\n        } else if (event.shiftX > _this.window.innerWidth - _this.state.swipeBackStartX) {\n          swipeBackShift = _this.window.innerWidth;\n        } else {\n          swipeBackShift = event.shiftX;\n        }\n\n        _this.setState({\n          swipeBackShift: swipeBackShift\n        });\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onEnd\", function (event) {\n      if (_this.state.swipingBack && _this.window) {\n        var speed = _this.state.swipeBackShift / event.duration * 1000;\n\n        if (_this.state.swipeBackShift === 0) {\n          _this.onSwipeBackCancel();\n        } else if (_this.state.swipeBackShift >= _this.window.innerWidth) {\n          _this.onSwipeBackSuccess();\n        } else if (speed > 250 || _this.state.swipeBackStartX + _this.state.swipeBackShift > _this.window.innerWidth / 2) {\n          _this.setState({\n            swipeBackResult: SwipeBackResults.success\n          });\n        } else {\n          _this.setState({\n            swipeBackResult: SwipeBackResults.fail\n          });\n        }\n      }\n\n      if (_this.state.swipeBackPrevented) {\n        _this.setState({\n          swipeBackPrevented: false\n        });\n      }\n    });\n\n    _this.state = {\n      animated: false,\n      visiblePanels: [props.activePanel],\n      activePanel: props.activePanel,\n      isBack: undefined,\n      prevPanel: null,\n      nextPanel: null,\n      swipingBack: false,\n      swipeBackPrevented: false,\n      swipeBackStartX: 0,\n      swipeBackShift: 0,\n      swipeBackNextPanel: null,\n      swipeBackPrevPanel: null,\n      swipeBackResult: null,\n      browserSwipe: false\n    };\n    return _this;\n  }\n\n  _createClass(ViewInfiniteComponent, [{\n    key: \"document\",\n    get: function get() {\n      return this.props.document;\n    }\n  }, {\n    key: \"window\",\n    get: function get() {\n      return this.props.window;\n    }\n  }, {\n    key: \"panels\",\n    get: function get() {\n      return React.Children.toArray(this.props.children);\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      var id = getNavId(this.props);\n\n      if (id) {\n        scrollsCache[id] = this.scrolls;\n      }\n\n      if (this.animationFinishTimeout) {\n        clearTimeout(this.animationFinishTimeout);\n      }\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps, prevState) {\n      var _this2 = this;\n\n      this.props.popout && !prevProps.popout && this.blurActiveElement();\n      this.props.modal && !prevProps.modal && this.blurActiveElement(); // Нужен переход\n\n      if (prevProps.activePanel !== this.props.activePanel && !prevState.swipingBack && !prevState.browserSwipe) {\n        var _this$props$scroll2;\n\n        var isBack = false;\n\n        if (this.props.isBackCheck) {\n          isBack = this.props.isBackCheck({\n            from: prevProps.activePanel,\n            to: this.props.activePanel\n          });\n        } else {\n          var firstLayerId = this.panels.map(function (panel) {\n            return getNavId(panel.props, warn);\n          }).find(function (id) {\n            return id === prevProps.activePanel || id === _this2.props.activePanel;\n          });\n          isBack = firstLayerId === this.props.activePanel;\n        }\n\n        this.blurActiveElement();\n        var prevScrolls = this.scrolls[prevProps.activePanel] || [];\n\n        var scrolls = _objectSpread(_objectSpread({}, this.scrolls), {}, _defineProperty({}, prevProps.activePanel, [].concat(_toConsumableArray(prevScrolls), [(_this$props$scroll2 = this.props.scroll) === null || _this$props$scroll2 === void 0 ? void 0 : _this$props$scroll2.getScroll().y])));\n\n        this.scrolls = scrolls;\n\n        if (this.shouldDisableTransitionMotion()) {\n          this.flushTransition(prevProps.activePanel, isBack);\n        } else {\n          this.setState({\n            visiblePanels: [prevProps.activePanel, this.props.activePanel],\n            prevPanel: prevProps.activePanel,\n            nextPanel: this.props.activePanel,\n            activePanel: null,\n            animated: true,\n            isBack: isBack\n          }); // Фолбек анимации перехода\n\n          if (!animationEvent.supported) {\n            if (this.animationFinishTimeout) {\n              clearTimeout(this.animationFinishTimeout);\n            }\n\n            this.animationFinishTimeout = setTimeout(this.transitionEndHandler, this.props.platform === Platform.ANDROID || this.props.platform === Platform.VKCOM ? 300 : 600);\n          }\n        }\n      } // Закончилась анимация свайпа назад\n\n\n      if (prevProps.activePanel !== this.props.activePanel && prevState.swipingBack) {\n        var nextPanel = this.state.swipeBackNextPanel;\n        var prevPanel = this.state.swipeBackPrevPanel;\n        var scrollPosition = undefined;\n        this.scrolls = _objectSpread({}, this.scrolls);\n\n        if (prevPanel !== null) {\n          var prevPanelScrolls = _toConsumableArray(this.scrolls[prevPanel] || []).slice(0, -1);\n\n          this.scrolls[prevPanel] = prevPanelScrolls;\n        }\n\n        if (nextPanel !== null) {\n          var newPanelScrolls = _toConsumableArray(this.scrolls[nextPanel] || []);\n\n          scrollPosition = newPanelScrolls.pop();\n          this.scrolls[nextPanel] = newPanelScrolls;\n        }\n\n        this.setState({\n          swipeBackPrevPanel: null,\n          swipeBackNextPanel: null,\n          swipingBack: false,\n          swipeBackResult: null,\n          swipeBackStartX: 0,\n          swipeBackShift: 0,\n          activePanel: nextPanel,\n          visiblePanels: [nextPanel]\n        }, function () {\n          var _this2$props$scroll;\n\n          (_this2$props$scroll = _this2.props.scroll) === null || _this2$props$scroll === void 0 ? void 0 : _this2$props$scroll.scrollTo(0, scrollPosition);\n          prevProps.onTransition && prevProps.onTransition({\n            isBack: true,\n            from: prevPanel,\n            to: nextPanel\n          });\n        });\n      } // Началась анимация завершения свайпа назад.\n\n\n      if (!prevState.swipeBackResult && this.state.swipeBackResult) {\n        this.waitTransitionFinish(this.pickPanel(this.state.swipeBackNextPanel), this.swipingBackTransitionEndHandler);\n      } // Если свайп назад отменился (когда пользователь недостаточно сильно свайпнул)\n\n\n      if (prevState.swipeBackResult === SwipeBackResults.fail && !this.state.swipeBackResult && this.state.activePanel !== null) {\n        var _this$props$scroll3;\n\n        var _newPanelScrolls = _toConsumableArray(this.scrolls[this.state.activePanel] || []);\n\n        var _scrollPosition = _newPanelScrolls.pop();\n\n        this.scrolls = _objectSpread(_objectSpread({}, this.scrolls), {}, _defineProperty({}, this.state.activePanel, _newPanelScrolls));\n        (_this$props$scroll3 = this.props.scroll) === null || _this$props$scroll3 === void 0 ? void 0 : _this$props$scroll3.scrollTo(0, _scrollPosition);\n      } // Закончился Safari свайп\n\n\n      if (prevProps.activePanel !== this.props.activePanel && this.state.browserSwipe) {\n        this.setState({\n          browserSwipe: false,\n          nextPanel: null,\n          prevPanel: null,\n          animated: false,\n          visiblePanels: [this.props.activePanel],\n          activePanel: this.props.activePanel\n        });\n      }\n    }\n  }, {\n    key: \"shouldDisableTransitionMotion\",\n    value: function shouldDisableTransitionMotion() {\n      var _this$props$configPro2, _this$props$splitCol;\n\n      return ((_this$props$configPro2 = this.props.configProvider) === null || _this$props$configPro2 === void 0 ? void 0 : _this$props$configPro2.transitionMotionEnabled) === false || !((_this$props$splitCol = this.props.splitCol) !== null && _this$props$splitCol !== void 0 && _this$props$splitCol.animate) || this.props.platform === Platform.VKCOM;\n    }\n  }, {\n    key: \"waitTransitionFinish\",\n    value: function waitTransitionFinish(elem, eventHandler) {\n      if (transitionEvent.supported && transitionEvent.name && elem) {\n        elem.removeEventListener(transitionEvent.name, eventHandler);\n        elem.addEventListener(transitionEvent.name, eventHandler);\n      } else {\n        if (this.transitionFinishTimeout) {\n          clearTimeout(this.transitionFinishTimeout);\n        }\n\n        this.transitionFinishTimeout = setTimeout(eventHandler, this.props.platform === Platform.ANDROID || this.props.platform === Platform.VKCOM ? 300 : 600);\n      }\n    }\n  }, {\n    key: \"blurActiveElement\",\n    value: function blurActiveElement() {\n      var _this$document;\n\n      if (typeof this.window !== 'undefined' && (_this$document = this.document) !== null && _this$document !== void 0 && _this$document.activeElement) {\n        this.document.activeElement.blur();\n      }\n    }\n  }, {\n    key: \"pickPanel\",\n    value: function pickPanel(id) {\n      if (id === null) {\n        return undefined;\n      }\n\n      return this.panelNodes[id];\n    }\n  }, {\n    key: \"flushTransition\",\n    value: function flushTransition(prevPanel, isBack) {\n      var _this3 = this;\n\n      var activePanel = this.props.activePanel;\n\n      var prevPanelScrolls = _toConsumableArray(this.scrolls[prevPanel] || []).slice(0, -1);\n\n      var newPanelScrolls = _toConsumableArray(this.scrolls[activePanel] || []);\n\n      var scrollPosition = isBack ? newPanelScrolls.pop() : 0;\n\n      if (isBack) {\n        var _objectSpread5;\n\n        this.scrolls = _objectSpread(_objectSpread({}, this.scrolls), {}, (_objectSpread5 = {}, _defineProperty(_objectSpread5, prevPanel, prevPanelScrolls), _defineProperty(_objectSpread5, activePanel, newPanelScrolls), _objectSpread5));\n      }\n\n      this.setState({\n        prevPanel: null,\n        nextPanel: null,\n        visiblePanels: [activePanel],\n        activePanel: activePanel,\n        animated: false,\n        isBack: undefined\n      }, function () {\n        var _this3$props$scroll;\n\n        (_this3$props$scroll = _this3.props.scroll) === null || _this3$props$scroll === void 0 ? void 0 : _this3$props$scroll.scrollTo(0, isBack ? scrollPosition : 0);\n        _this3.props.onTransition && _this3.props.onTransition({\n          isBack: isBack,\n          from: prevPanel,\n          to: activePanel\n        });\n      });\n    }\n  }, {\n    key: \"onSwipeBackSuccess\",\n    value: function onSwipeBackSuccess() {\n      this.props.onSwipeBack && this.props.onSwipeBack();\n    }\n  }, {\n    key: \"onSwipeBackCancel\",\n    value: function onSwipeBackCancel() {\n      this.props.onSwipeBackCancel && this.props.onSwipeBackCancel();\n      this.setState({\n        swipeBackPrevPanel: null,\n        swipeBackNextPanel: null,\n        swipingBack: false,\n        swipeBackResult: null,\n        swipeBackStartX: 0,\n        swipeBackShift: 0\n      });\n    }\n  }, {\n    key: \"calcPanelSwipeStyles\",\n    value: function calcPanelSwipeStyles(panelId) {\n      if (!canUseDOM || !this.window) {\n        return {};\n      }\n\n      var isPrev = panelId === this.state.swipeBackPrevPanel;\n      var isNext = panelId === this.state.swipeBackNextPanel;\n\n      if (!isPrev && !isNext || this.state.swipeBackResult) {\n        return {};\n      }\n\n      var prevPanelTranslate = \"\".concat(this.state.swipeBackShift, \"px\");\n      var nextPanelTranslate = \"\".concat(-50 + this.state.swipeBackShift * 100 / this.window.innerWidth / 2, \"%\");\n      var prevPanelShadow = 0.3 * (this.window.innerWidth - this.state.swipeBackShift) / this.window.innerWidth;\n\n      if (this.state.swipeBackResult) {\n        return isPrev ? {\n          boxShadow: \"-2px 0 12px rgba(0, 0, 0, \".concat(prevPanelShadow, \")\")\n        } : {};\n      }\n\n      if (isNext) {\n        return {\n          transform: \"translate3d(\".concat(nextPanelTranslate, \", 0, 0)\"),\n          WebkitTransform: \"translate3d(\".concat(nextPanelTranslate, \", 0, 0)\")\n        };\n      }\n\n      if (isPrev) {\n        return {\n          transform: \"translate3d(\".concat(prevPanelTranslate, \", 0, 0)\"),\n          WebkitTransform: \"translate3d(\".concat(prevPanelTranslate, \", 0, 0)\"),\n          boxShadow: \"-2px 0 12px rgba(0, 0, 0, \".concat(prevPanelShadow, \")\")\n        };\n      }\n\n      return {};\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this4 = this;\n\n      var _this$props = this.props,\n          popout = _this$props.popout,\n          modal = _this$props.modal,\n          platform = _this$props.platform,\n          _1 = _this$props.activePanel,\n          splitCol = _this$props.splitCol,\n          configProvider = _this$props.configProvider,\n          history = _this$props.history,\n          id = _this$props.id,\n          nav = _this$props.nav,\n          onTransition = _this$props.onTransition,\n          onSwipeBack = _this$props.onSwipeBack,\n          onSwipeBackStart = _this$props.onSwipeBackStart,\n          onSwipeBackCancel = _this$props.onSwipeBackCancel,\n          window = _this$props.window,\n          document = _this$props.document,\n          scroll = _this$props.scroll,\n          isBackCheck = _this$props.isBackCheck,\n          className = _this$props.className,\n          restProps = _objectWithoutProperties(_this$props, _excluded);\n\n      var _this$state = this.state,\n          prevPanel = _this$state.prevPanel,\n          nextPanel = _this$state.nextPanel,\n          activePanel = _this$state.activePanel,\n          isBack = _this$state.isBack,\n          animated = _this$state.animated,\n          swipeBackPrevPanel = _this$state.swipeBackPrevPanel,\n          swipeBackNextPanel = _this$state.swipeBackNextPanel,\n          swipeBackResult = _this$state.swipeBackResult,\n          swipingBack = _this$state.swipingBack;\n      var hasPopout = !!popout;\n      var hasModal = !!modal;\n      var panels = this.panels.filter(function (panel) {\n        var panelId = getNavId(panel.props, warn);\n        return panelId !== undefined && _this4.state.visiblePanels.includes(panelId) || panelId === swipeBackPrevPanel || panelId === swipeBackNextPanel;\n      }).sort(function (panel) {\n        var panelId = getNavId(panel.props, warn);\n        var isPrevPanel = panelId === prevPanel || panelId === swipeBackPrevPanel;\n        var isNextPanel = panelId === nextPanel || panelId === swipeBackNextPanel;\n\n        if (isNextPanel) {\n          return swipingBack || _this4.state.isBack ? -1 : 1;\n        }\n\n        if (isPrevPanel) {\n          return swipingBack || _this4.state.isBack ? 1 : -1;\n        }\n\n        return 0;\n      });\n      var disableAnimation = this.shouldDisableTransitionMotion();\n      return /*#__PURE__*/React.createElement(Touch, _extends({\n        Component: \"section\"\n      }, restProps, {\n        className: classNames(\"vkuiView\", getPlatformClassName(\"vkuiView\", platform), !disableAnimation && this.state.animated && \"vkuiView--animated\", !disableAnimation && this.state.swipingBack && \"vkuiView--swiping-back\", disableAnimation && \"vkuiView--no-motion\", className),\n        onMoveX: this.onMoveX,\n        onEnd: this.onEnd\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"vkuiView__panels\"\n      }, panels.map(function (panel) {\n        var panelId = getNavId(panel.props, warn);\n        var isPrev = panelId === prevPanel || panelId === swipeBackPrevPanel;\n        var compensateScroll = isPrev || panelId === swipeBackNextPanel || panelId === nextPanel && isBack;\n        var isTransitionTarget = animated && panelId === (isBack ? prevPanel : nextPanel);\n        var scrollList = panelId && _this4.scrolls[panelId] || [];\n        var scroll = scrollList[scrollList.length - 1] || 0;\n        return /*#__PURE__*/React.createElement(\"div\", {\n          className: classNames(\"vkuiView__panel\", panelId === activePanel && \"vkuiView__panel--active\", panelId === prevPanel && \"vkuiView__panel--prev\", panelId === nextPanel && \"vkuiView__panel--next\", panelId === swipeBackPrevPanel && \"vkuiView__panel--swipe-back-prev\", panelId === swipeBackNextPanel && \"vkuiView__panel--swipe-back-next\", swipeBackResult === SwipeBackResults.success && \"vkuiView__panel--swipe-back-success\", swipeBackResult === SwipeBackResults.fail && \"vkuiView__panel--swipe-back-failed\"),\n          onAnimationEnd: isTransitionTarget ? _this4.transitionEndHandler : undefined,\n          ref: function ref(el) {\n            return panelId !== undefined && (_this4.panelNodes[panelId] = el);\n          },\n          style: _this4.calcPanelSwipeStyles(panelId),\n          key: panelId\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          className: \"vkuiView__panel-in\",\n          style: {\n            marginTop: compensateScroll ? -scroll : undefined\n          }\n        }, /*#__PURE__*/React.createElement(NavTransitionProvider, {\n          entering: panelId === nextPanel || panelId === swipeBackNextPanel\n        }, panel)));\n      })), /*#__PURE__*/React.createElement(AppRootPortal, null, hasPopout && /*#__PURE__*/React.createElement(\"div\", {\n        className: \"vkuiView__popout\"\n      }, popout), hasModal && /*#__PURE__*/React.createElement(\"div\", {\n        className: \"vkuiView__modal\"\n      }, modal)));\n    }\n  }]);\n\n  return ViewInfiniteComponent;\n}(React.Component);\n\n_defineProperty(ViewInfiniteComponent, \"SWIPE_BACK_AREA\", 70);\n\n_defineProperty(ViewInfiniteComponent, \"defaultProps\", {\n  history: []\n});\n\nexport var ViewInfinite = withContext(withContext(withContext(withPlatform(withDOM(ViewInfiniteComponent)), SplitColContext, 'splitCol'), ConfigProviderContext, 'configProvider'), ScrollContext, 'scroll');","map":{"version":3,"mappings":"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","names":["React","classNames","transitionEvent","animationEvent","getPlatformClassName","Platform","Touch","withPlatform","withContext","ConfigProviderContext","SplitColContext","AppRootPortal","canUseDOM","withDOM","ScrollContext","NavTransitionProvider","getNavId","warnOnce","swipeBackExcluded","warn","SwipeBackResults","scrollsCache","ViewInfiniteComponent","_inherits","props","_classCallCheck","_this","_defineProperty","undefined","e","includes","animationName","state","prevPanel","flushTransition","Boolean","isBack","propertyName","target","pickPanel","swipeBackNextPanel","swipeBackResult","fail","onSwipeBackCancel","success","onSwipeBackSuccess","event","window","platform","IOS","swipeBackPrevented","shouldDisableTransitionMotion","configProvider","_this$props$configPro","isWebView","startX","SWIPE_BACK_AREA","innerWidth","browserSwipe","setState","onSwipeBack","animated","swipingBack","history","length","onSwipeBackStart","payload","activePanel","blurActiveElement","prevScrolls","scrolls","_objectSpread","scroll","_this$props$scroll","getScroll","y","swipeBackStartX","swipeBackPrevPanel","slice","swipeBackShift","shiftX","speed","duration","visiblePanels","nextPanel","_createClass","key","get","document","Children","toArray","children","value","id","animationFinishTimeout","clearTimeout","prevProps","prevState","popout","modal","isBackCheck","from","to","firstLayerId","panels","map","panel","find","_this2","_this$props$scroll2","supported","setTimeout","transitionEndHandler","ANDROID","VKCOM","scrollPosition","prevPanelScrolls","_toConsumableArray","newPanelScrolls","pop","_this2$props$scroll","scrollTo","onTransition","waitTransitionFinish","swipingBackTransitionEndHandler","_this$props$scroll3","_this$props$configPro2","transitionMotionEnabled","splitCol","_this$props$splitCol","animate","elem","eventHandler","name","removeEventListener","addEventListener","transitionFinishTimeout","_this$document","activeElement","blur","panelNodes","_objectSpread5","_this3$props$scroll","_this3","panelId","isPrev","isNext","prevPanelTranslate","nextPanelTranslate","prevPanelShadow","boxShadow","transform","WebkitTransform","_1","nav","className","restProps","hasPopout","hasModal","filter","_this4","sort","isPrevPanel","isNextPanel","disableAnimation","_extends","Component","onMoveX","onEnd","compensateScroll","isTransitionTarget","scrollList","onAnimationEnd","ref","el","style","calcPanelSwipeStyles","marginTop","entering","ViewInfinite"],"sources":["/Users/pitus_anonimous/Desktop/youth_bit_hack/youth_bit_vk/node_modules/@vkontakte/vkui/src/components/View/ViewInfinite.tsx"],"sourcesContent":["import * as React from 'react';\nimport { classNames } from '@vkontakte/vkjs';\nimport { transitionEvent, animationEvent } from '../../lib/supportEvents';\nimport { getPlatformClassName } from '../../helpers/getPlatformClassName';\nimport { Platform } from '../../lib/platform';\nimport { Touch, TouchEvent } from '../Touch/Touch';\nimport { HasPlatform } from '../../types';\nimport { withPlatform } from '../../hoc/withPlatform';\nimport { withContext } from '../../hoc/withContext';\nimport {\n  ConfigProviderContext,\n  ConfigProviderContextInterface,\n} from '../ConfigProvider/ConfigProviderContext';\nimport { SplitColContext, SplitColContextProps } from '../SplitCol/SplitCol';\nimport { AppRootPortal } from '../AppRoot/AppRootPortal';\nimport { canUseDOM, withDOM, DOMProps } from '../../lib/dom';\nimport { ScrollContext, ScrollContextInterface } from '../AppRoot/ScrollContext';\nimport { NavTransitionProvider } from '../NavTransitionContext/NavTransitionContext';\nimport { getNavId, NavIdProps } from '../../lib/getNavId';\nimport { warnOnce } from '../../lib/warnOnce';\nimport { swipeBackExcluded } from './utils';\nimport styles from './View.module.css';\nimport iosStyles from './ViewIOS.module.css';\n\nconst warn = warnOnce('ViewInfinite');\n\nenum SwipeBackResults {\n  fail = 1,\n  success,\n}\n\ninterface Scrolls {\n  [index: string]: Array<number | undefined>;\n}\n\ninterface ViewsScrolls {\n  [index: string]: Scrolls;\n}\n\ntype TransitionEventHandler = (e?: TransitionEvent) => void;\n\nlet scrollsCache: ViewsScrolls = {};\n\nexport type TransitionParams = { from: string | null; to: string | null };\n\nexport interface ViewInfiniteProps\n  extends React.HTMLAttributes<HTMLElement>,\n    HasPlatform,\n    NavIdProps {\n  activePanel: string;\n  popout?: React.ReactNode;\n  modal?: React.ReactNode;\n  onTransition?(params: TransitionParams & { isBack: boolean }): void;\n  /**\n   * callback свайпа назад\n   */\n  onSwipeBack?(): void;\n  /**\n   * callback начала анимации свайпа назад.\n   */\n  onSwipeBackStart?(activePanel: string | null): void | 'prevent';\n  /**\n   * callback завершения анимации отмененного пользователем свайпа\n   */\n  onSwipeBackCancel?(): void;\n  history?: string[];\n  isBackCheck?(params: TransitionParams): boolean;\n  /**\n   * @ignore\n   */\n  splitCol?: SplitColContextProps;\n  /**\n   * @ignore\n   */\n  configProvider?: ConfigProviderContextInterface;\n  /**\n   * @ignore\n   */\n  scroll?: ScrollContextInterface;\n}\n\nexport interface ViewInfiniteState {\n  animated: boolean;\n\n  visiblePanels: Array<string | null>;\n  activePanel: string | null;\n  isBack?: boolean;\n  prevPanel: string | null;\n  nextPanel: string | null;\n\n  swipingBack: boolean;\n  swipeBackPrevented: boolean;\n  swipeBackStartX: number;\n  swipeBackShift: number;\n  swipeBackNextPanel: string | null;\n  swipeBackPrevPanel: string | null;\n  swipeBackResult: SwipeBackResults | null;\n\n  browserSwipe: boolean;\n}\n\nclass ViewInfiniteComponent extends React.Component<\n  ViewInfiniteProps & DOMProps,\n  ViewInfiniteState\n> {\n  private static readonly SWIPE_BACK_AREA = 70;\n\n  constructor(props: ViewInfiniteProps) {\n    super(props);\n\n    this.state = {\n      animated: false,\n\n      visiblePanels: [props.activePanel],\n      activePanel: props.activePanel,\n      isBack: undefined,\n      prevPanel: null,\n      nextPanel: null,\n\n      swipingBack: false,\n      swipeBackPrevented: false,\n      swipeBackStartX: 0,\n      swipeBackShift: 0,\n      swipeBackNextPanel: null,\n      swipeBackPrevPanel: null,\n      swipeBackResult: null,\n\n      browserSwipe: false,\n    };\n  }\n\n  static defaultProps: Partial<ViewInfiniteProps> = {\n    history: [],\n  };\n\n  private scrolls = scrollsCache[getNavId(this.props, warn) as string] || {};\n  private transitionFinishTimeout: ReturnType<typeof setTimeout> | undefined = undefined;\n  private animationFinishTimeout: ReturnType<typeof setTimeout> | undefined = undefined;\n\n  get document() {\n    return this.props.document;\n  }\n\n  get window() {\n    return this.props.window;\n  }\n\n  get panels() {\n    return React.Children.toArray(this.props.children) as React.ReactElement[];\n  }\n\n  panelNodes: { [id: string]: HTMLDivElement | null } = {};\n\n  componentWillUnmount() {\n    const id = getNavId(this.props);\n    if (id) {\n      scrollsCache[id] = this.scrolls;\n    }\n    if (this.animationFinishTimeout) {\n      clearTimeout(this.animationFinishTimeout);\n    }\n  }\n\n  componentDidUpdate(prevProps: ViewInfiniteProps, prevState: ViewInfiniteState) {\n    this.props.popout && !prevProps.popout && this.blurActiveElement();\n    this.props.modal && !prevProps.modal && this.blurActiveElement();\n\n    // Нужен переход\n    if (\n      prevProps.activePanel !== this.props.activePanel &&\n      !prevState.swipingBack &&\n      !prevState.browserSwipe\n    ) {\n      let isBack = false;\n\n      if (this.props.isBackCheck) {\n        isBack = this.props.isBackCheck({\n          from: prevProps.activePanel,\n          to: this.props.activePanel,\n        });\n      } else {\n        const firstLayerId = this.panels\n          .map((panel) => getNavId(panel.props, warn))\n          .find((id) => id === prevProps.activePanel || id === this.props.activePanel);\n        isBack = firstLayerId === this.props.activePanel;\n      }\n\n      this.blurActiveElement();\n\n      const prevScrolls = this.scrolls[prevProps.activePanel] || [];\n      const scrolls = {\n        ...this.scrolls,\n        [prevProps.activePanel]: [...prevScrolls, this.props.scroll?.getScroll().y],\n      };\n      this.scrolls = scrolls;\n\n      if (this.shouldDisableTransitionMotion()) {\n        this.flushTransition(prevProps.activePanel, isBack);\n      } else {\n        this.setState({\n          visiblePanels: [prevProps.activePanel, this.props.activePanel],\n          prevPanel: prevProps.activePanel,\n          nextPanel: this.props.activePanel,\n          activePanel: null,\n          animated: true,\n          isBack,\n        });\n\n        // Фолбек анимации перехода\n        if (!animationEvent.supported) {\n          if (this.animationFinishTimeout) {\n            clearTimeout(this.animationFinishTimeout);\n          }\n          this.animationFinishTimeout = setTimeout(\n            this.transitionEndHandler,\n            this.props.platform === Platform.ANDROID || this.props.platform === Platform.VKCOM\n              ? 300\n              : 600,\n          );\n        }\n      }\n    }\n\n    // Закончилась анимация свайпа назад\n    if (prevProps.activePanel !== this.props.activePanel && prevState.swipingBack) {\n      const nextPanel = this.state.swipeBackNextPanel;\n      const prevPanel = this.state.swipeBackPrevPanel;\n      let scrollPosition: undefined | number = undefined;\n\n      this.scrolls = {\n        ...this.scrolls,\n      };\n\n      if (prevPanel !== null) {\n        const prevPanelScrolls = [...(this.scrolls[prevPanel] || [])].slice(0, -1);\n        this.scrolls[prevPanel] = prevPanelScrolls;\n      }\n      if (nextPanel !== null) {\n        const newPanelScrolls = [...(this.scrolls[nextPanel] || [])];\n        scrollPosition = newPanelScrolls.pop();\n        this.scrolls[nextPanel] = newPanelScrolls;\n      }\n\n      this.setState(\n        {\n          swipeBackPrevPanel: null,\n          swipeBackNextPanel: null,\n          swipingBack: false,\n          swipeBackResult: null,\n          swipeBackStartX: 0,\n          swipeBackShift: 0,\n          activePanel: nextPanel,\n          visiblePanels: [nextPanel],\n        },\n        () => {\n          this.props.scroll?.scrollTo(0, scrollPosition);\n          prevProps.onTransition &&\n            prevProps.onTransition({\n              isBack: true,\n              from: prevPanel,\n              to: nextPanel,\n            });\n        },\n      );\n    }\n\n    // Началась анимация завершения свайпа назад.\n    if (!prevState.swipeBackResult && this.state.swipeBackResult) {\n      this.waitTransitionFinish(\n        this.pickPanel(this.state.swipeBackNextPanel),\n        this.swipingBackTransitionEndHandler,\n      );\n    }\n\n    // Если свайп назад отменился (когда пользователь недостаточно сильно свайпнул)\n    if (\n      prevState.swipeBackResult === SwipeBackResults.fail &&\n      !this.state.swipeBackResult &&\n      this.state.activePanel !== null\n    ) {\n      const newPanelScrolls = [...(this.scrolls[this.state.activePanel] || [])];\n      const scrollPosition = newPanelScrolls.pop();\n      this.scrolls = {\n        ...this.scrolls,\n        [this.state.activePanel]: newPanelScrolls,\n      };\n\n      this.props.scroll?.scrollTo(0, scrollPosition);\n    }\n\n    // Закончился Safari свайп\n    if (prevProps.activePanel !== this.props.activePanel && this.state.browserSwipe) {\n      this.setState({\n        browserSwipe: false,\n        nextPanel: null,\n        prevPanel: null,\n        animated: false,\n        visiblePanels: [this.props.activePanel],\n        activePanel: this.props.activePanel,\n      });\n    }\n  }\n\n  shouldDisableTransitionMotion(): boolean {\n    return (\n      this.props.configProvider?.transitionMotionEnabled === false ||\n      !this.props.splitCol?.animate ||\n      this.props.platform === Platform.VKCOM\n    );\n  }\n\n  waitTransitionFinish(\n    elem: HTMLElement | null | undefined,\n    eventHandler: TransitionEventHandler,\n  ): void {\n    if (transitionEvent.supported && transitionEvent.name && elem) {\n      elem.removeEventListener(\n        transitionEvent.name as keyof HTMLElementEventMap,\n        eventHandler as EventListener,\n      );\n      elem.addEventListener(\n        transitionEvent.name as keyof HTMLElementEventMap,\n        eventHandler as EventListener,\n      );\n    } else {\n      if (this.transitionFinishTimeout) {\n        clearTimeout(this.transitionFinishTimeout);\n      }\n\n      this.transitionFinishTimeout = setTimeout(\n        eventHandler,\n        this.props.platform === Platform.ANDROID || this.props.platform === Platform.VKCOM\n          ? 300\n          : 600,\n      );\n    }\n  }\n\n  blurActiveElement(): void {\n    if (typeof this.window !== 'undefined' && this.document?.activeElement) {\n      (this.document.activeElement as HTMLElement).blur();\n    }\n  }\n\n  pickPanel(id: string | null) {\n    if (id === null) {\n      return undefined;\n    }\n    return this.panelNodes[id];\n  }\n\n  flushTransition(prevPanel: string, isBack: boolean) {\n    const activePanel = this.props.activePanel;\n\n    const prevPanelScrolls = [...(this.scrolls[prevPanel] || [])].slice(0, -1);\n    const newPanelScrolls = [...(this.scrolls[activePanel] || [])];\n    const scrollPosition = isBack ? newPanelScrolls.pop() : 0;\n    if (isBack) {\n      this.scrolls = {\n        ...this.scrolls,\n        [prevPanel]: prevPanelScrolls,\n        [activePanel]: newPanelScrolls,\n      };\n    }\n\n    this.setState(\n      {\n        prevPanel: null,\n        nextPanel: null,\n        visiblePanels: [activePanel],\n        activePanel: activePanel,\n        animated: false,\n        isBack: undefined,\n      },\n      () => {\n        this.props.scroll?.scrollTo(0, isBack ? scrollPosition : 0);\n        this.props.onTransition &&\n          this.props.onTransition({ isBack, from: prevPanel, to: activePanel });\n      },\n    );\n  }\n\n  transitionEndHandler = (e?: React.AnimationEvent): void => {\n    if (\n      (!e ||\n        [\n          'vkui-animation-ios-next-forward',\n          'vkui-animation-ios-prev-back',\n          'vkui-animation-view-next-forward',\n          'vkui-animation-view-prev-back',\n        ].includes(e.animationName)) &&\n      this.state.prevPanel !== null\n    ) {\n      this.flushTransition(this.state.prevPanel, Boolean(this.state.isBack));\n    }\n  };\n\n  swipingBackTransitionEndHandler = (e?: TransitionEvent): void => {\n    // indexOf because of vendor prefixes in old browsers\n    if (\n      !e ||\n      (e.propertyName.includes('transform') &&\n        e.target === this.pickPanel(this.state.swipeBackNextPanel))\n    ) {\n      switch (this.state.swipeBackResult) {\n        case SwipeBackResults.fail:\n          this.onSwipeBackCancel();\n          break;\n        case SwipeBackResults.success:\n          this.onSwipeBackSuccess();\n      }\n    }\n  };\n\n  onSwipeBackSuccess(): void {\n    this.props.onSwipeBack && this.props.onSwipeBack();\n  }\n\n  onSwipeBackCancel(): void {\n    this.props.onSwipeBackCancel && this.props.onSwipeBackCancel();\n    this.setState({\n      swipeBackPrevPanel: null,\n      swipeBackNextPanel: null,\n      swipingBack: false,\n      swipeBackResult: null,\n      swipeBackStartX: 0,\n      swipeBackShift: 0,\n    });\n  }\n\n  onMoveX = (event: TouchEvent): void => {\n    if (\n      !this.window ||\n      this.props.platform !== Platform.IOS ||\n      this.state.swipeBackPrevented ||\n      swipeBackExcluded(event) ||\n      this.shouldDisableTransitionMotion()\n    ) {\n      return;\n    }\n\n    if (!this.props.configProvider?.isWebView) {\n      if (\n        (event.startX <= ViewInfiniteComponent.SWIPE_BACK_AREA ||\n          event.startX >= this.window.innerWidth - ViewInfiniteComponent.SWIPE_BACK_AREA) &&\n        !this.state.browserSwipe\n      ) {\n        this.setState({ browserSwipe: true });\n      }\n\n      return;\n    }\n\n    if (\n      !this.props.onSwipeBack ||\n      (this.state.animated && event.startX <= ViewInfiniteComponent.SWIPE_BACK_AREA)\n    ) {\n      return;\n    }\n\n    if (\n      !this.state.swipingBack &&\n      event.startX <= ViewInfiniteComponent.SWIPE_BACK_AREA &&\n      this.props.history &&\n      this.props.history.length > 1\n    ) {\n      if (this.props.onSwipeBackStart) {\n        const payload = this.props.onSwipeBackStart(this.state.activePanel);\n        if (payload === 'prevent') {\n          this.setState({ swipeBackPrevented: true });\n          return;\n        }\n      }\n\n      if (this.state.activePanel !== null) {\n        // Note: вызываем закрытие клавиатуры. В iOS это нативное поведение при свайпе.\n        this.blurActiveElement();\n        const prevScrolls = this.scrolls[this.state.activePanel] || [];\n        this.scrolls = {\n          ...this.scrolls,\n          [this.state.activePanel]: [...prevScrolls, this.props.scroll?.getScroll().y],\n        };\n      }\n\n      this.setState({\n        swipingBack: true,\n        swipeBackStartX: event.startX,\n        swipeBackPrevPanel: this.state.activePanel,\n        swipeBackNextPanel: this.props.history.slice(-2)[0],\n      });\n    }\n\n    if (this.state.swipingBack) {\n      let swipeBackShift;\n      if (event.shiftX < 0) {\n        swipeBackShift = 0;\n      } else if (event.shiftX > this.window.innerWidth - this.state.swipeBackStartX) {\n        swipeBackShift = this.window.innerWidth;\n      } else {\n        swipeBackShift = event.shiftX;\n      }\n      this.setState({ swipeBackShift });\n    }\n  };\n\n  onEnd = (event: TouchEvent): void => {\n    if (this.state.swipingBack && this.window) {\n      const speed = (this.state.swipeBackShift / event.duration) * 1000;\n      if (this.state.swipeBackShift === 0) {\n        this.onSwipeBackCancel();\n      } else if (this.state.swipeBackShift >= this.window.innerWidth) {\n        this.onSwipeBackSuccess();\n      } else if (\n        speed > 250 ||\n        this.state.swipeBackStartX + this.state.swipeBackShift > this.window.innerWidth / 2\n      ) {\n        this.setState({ swipeBackResult: SwipeBackResults.success });\n      } else {\n        this.setState({ swipeBackResult: SwipeBackResults.fail });\n      }\n    }\n    if (this.state.swipeBackPrevented) {\n      this.setState({ swipeBackPrevented: false });\n    }\n  };\n\n  calcPanelSwipeStyles(panelId: string | undefined): React.CSSProperties {\n    if (!canUseDOM || !this.window) {\n      return {};\n    }\n\n    const isPrev = panelId === this.state.swipeBackPrevPanel;\n    const isNext = panelId === this.state.swipeBackNextPanel;\n\n    if ((!isPrev && !isNext) || this.state.swipeBackResult) {\n      return {};\n    }\n\n    let prevPanelTranslate = `${this.state.swipeBackShift}px`;\n    let nextPanelTranslate = `${\n      -50 + (this.state.swipeBackShift * 100) / this.window.innerWidth / 2\n    }%`;\n    let prevPanelShadow =\n      (0.3 * (this.window.innerWidth - this.state.swipeBackShift)) / this.window.innerWidth;\n\n    if (this.state.swipeBackResult) {\n      return isPrev ? { boxShadow: `-2px 0 12px rgba(0, 0, 0, ${prevPanelShadow})` } : {};\n    }\n\n    if (isNext) {\n      return {\n        transform: `translate3d(${nextPanelTranslate}, 0, 0)`,\n        WebkitTransform: `translate3d(${nextPanelTranslate}, 0, 0)`,\n      };\n    }\n    if (isPrev) {\n      return {\n        transform: `translate3d(${prevPanelTranslate}, 0, 0)`,\n        WebkitTransform: `translate3d(${prevPanelTranslate}, 0, 0)`,\n        boxShadow: `-2px 0 12px rgba(0, 0, 0, ${prevPanelShadow})`,\n      };\n    }\n\n    return {};\n  }\n\n  render() {\n    const {\n      popout,\n      modal,\n      platform,\n      activePanel: _1,\n      splitCol,\n      configProvider,\n      history,\n      id,\n      nav,\n      onTransition,\n      onSwipeBack,\n      onSwipeBackStart,\n      onSwipeBackCancel,\n      window,\n      document,\n      scroll,\n      isBackCheck,\n      className,\n      ...restProps\n    } = this.props;\n    const {\n      prevPanel,\n      nextPanel,\n      activePanel,\n      isBack,\n      animated,\n      swipeBackPrevPanel,\n      swipeBackNextPanel,\n      swipeBackResult,\n      swipingBack,\n    } = this.state;\n\n    const hasPopout = !!popout;\n    const hasModal = !!modal;\n\n    const panels = this.panels\n      .filter((panel) => {\n        const panelId = getNavId(panel.props, warn);\n\n        return (\n          (panelId !== undefined && this.state.visiblePanels.includes(panelId)) ||\n          panelId === swipeBackPrevPanel ||\n          panelId === swipeBackNextPanel\n        );\n      })\n      .sort((panel) => {\n        const panelId = getNavId(panel.props, warn);\n        const isPrevPanel = panelId === prevPanel || panelId === swipeBackPrevPanel;\n        const isNextPanel = panelId === nextPanel || panelId === swipeBackNextPanel;\n\n        if (isNextPanel) {\n          return swipingBack || this.state.isBack ? -1 : 1;\n        }\n\n        if (isPrevPanel) {\n          return swipingBack || this.state.isBack ? 1 : -1;\n        }\n\n        return 0;\n      });\n\n    const disableAnimation = this.shouldDisableTransitionMotion();\n\n    return (\n      <Touch\n        Component=\"section\"\n        {...restProps}\n        className={classNames(\n          styles['View'],\n          getPlatformClassName(styles['View'], platform),\n          !disableAnimation && this.state.animated && styles['View--animated'],\n          !disableAnimation && this.state.swipingBack && styles['View--swiping-back'],\n          disableAnimation && styles['View--no-motion'],\n          className,\n        )}\n        onMoveX={this.onMoveX}\n        onEnd={this.onEnd}\n      >\n        <div className={styles['View__panels']}>\n          {panels.map((panel: React.ReactElement) => {\n            const panelId = getNavId(panel.props, warn);\n            const isPrev = panelId === prevPanel || panelId === swipeBackPrevPanel;\n            const compensateScroll =\n              isPrev || panelId === swipeBackNextPanel || (panelId === nextPanel && isBack);\n            const isTransitionTarget = animated && panelId === (isBack ? prevPanel : nextPanel);\n            const scrollList = (panelId && this.scrolls[panelId]) || [];\n            const scroll = scrollList[scrollList.length - 1] || 0;\n\n            return (\n              <div\n                className={classNames(\n                  styles['View__panel'],\n                  panelId === activePanel && iosStyles['View__panel--active'],\n                  panelId === prevPanel && styles['View__panel--prev'],\n                  panelId === nextPanel && styles['View__panel--next'],\n                  panelId === swipeBackPrevPanel && iosStyles['View__panel--swipe-back-prev'],\n                  panelId === swipeBackNextPanel && iosStyles['View__panel--swipe-back-next'],\n                  swipeBackResult === SwipeBackResults.success &&\n                    iosStyles['View__panel--swipe-back-success'],\n                  swipeBackResult === SwipeBackResults.fail &&\n                    iosStyles['View__panel--swipe-back-failed'],\n                )}\n                onAnimationEnd={isTransitionTarget ? this.transitionEndHandler : undefined}\n                ref={(el) => panelId !== undefined && (this.panelNodes[panelId] = el)}\n                style={this.calcPanelSwipeStyles(panelId)}\n                key={panelId}\n              >\n                <div\n                  className={styles['View__panel-in']}\n                  style={{ marginTop: compensateScroll ? -scroll : undefined }}\n                >\n                  <NavTransitionProvider\n                    entering={panelId === nextPanel || panelId === swipeBackNextPanel}\n                  >\n                    {panel}\n                  </NavTransitionProvider>\n                </div>\n              </div>\n            );\n          })}\n        </div>\n        <AppRootPortal>\n          {hasPopout && <div className={styles['View__popout']}>{popout}</div>}\n          {hasModal && <div className={styles['View__modal']}>{modal}</div>}\n        </AppRootPortal>\n      </Touch>\n    );\n  }\n}\n\nexport const ViewInfinite = withContext(\n  withContext(\n    withContext(\n      withPlatform(withDOM<ViewInfiniteProps>(ViewInfiniteComponent)),\n      SplitColContext,\n      'splitCol',\n    ),\n    ConfigProviderContext,\n    'configProvider',\n  ),\n  ScrollContext,\n  'scroll',\n);\n"]},"metadata":{},"sourceType":"module"}