{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectSpread from \"@babel/runtime/helpers/objectSpread2\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _excluded = [\"children\", \"width\", \"maxWidth\", \"minWidth\", \"spaced\", \"animate\", \"fixed\", \"style\", \"autoSpaced\", \"stretchedOnMobile\", \"className\"];\nimport * as React from 'react';\nimport { classNames } from '@vkontakte/vkjs';\nimport { getSizeXClassName } from '../../helpers/getSizeXClassName';\nimport { getViewWidthClassName } from '../../helpers/getViewWidthClassName';\nimport { useAdaptivity } from '../../hooks/useAdaptivity';\nimport { ViewWidth } from '../../lib/adaptivity';\nimport { useObjectMemo } from '../../hooks/useObjectMemo';\nimport { useMediaQueries } from '../../hooks/useMediaQueries';\nimport { matchMediaListAddListener, matchMediaListRemoveListener } from '../../lib/matchMedia';\n\nfunction useTransitionAnimate(animateProp) {\n  var _useAdaptivity = useAdaptivity(),\n      viewWidth = _useAdaptivity.viewWidth;\n\n  var _React$useState = React.useState(Boolean(animateProp)),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      animate = _React$useState2[0],\n      setAnimate = _React$useState2[1];\n\n  var mediaQueries = useMediaQueries();\n  React.useEffect(function () {\n    if (animateProp !== undefined) {\n      setAnimate(animateProp);\n      return;\n    }\n\n    if (viewWidth !== undefined) {\n      setAnimate(viewWidth < ViewWidth.TABLET);\n      return;\n    } // eslint-disable-next-line no-restricted-properties\n\n\n    var listener = function listener() {\n      return setAnimate(!mediaQueries.smallTabletPlus.matches);\n    };\n\n    listener();\n    matchMediaListAddListener(mediaQueries.smallTabletPlus, listener);\n    return function () {\n      matchMediaListRemoveListener(mediaQueries.smallTabletPlus, listener);\n    };\n  }, [animateProp, viewWidth, mediaQueries]);\n  return animate;\n}\n\nexport var SplitColContext = /*#__PURE__*/React.createContext({\n  colRef: null,\n  animate: true\n});\nexport var useSplitCol = function useSplitCol() {\n  return React.useContext(SplitColContext);\n};\n/**\n * @see https://vkcom.github.io/VKUI/#/SplitCol\n */\n\nexport var SplitCol = function SplitCol(props) {\n  var children = props.children,\n      width = props.width,\n      maxWidth = props.maxWidth,\n      minWidth = props.minWidth,\n      spaced = props.spaced,\n      animateProp = props.animate,\n      fixed = props.fixed,\n      style = props.style,\n      autoSpaced = props.autoSpaced,\n      stretchedOnMobile = props.stretchedOnMobile,\n      className = props.className,\n      restProps = _objectWithoutProperties(props, _excluded);\n\n  var baseRef = React.useRef(null);\n\n  var _useAdaptivity2 = useAdaptivity(),\n      viewWidth = _useAdaptivity2.viewWidth,\n      sizeX = _useAdaptivity2.sizeX;\n\n  var animate = useTransitionAnimate(animateProp);\n  var contextValue = useObjectMemo({\n    colRef: baseRef,\n    animate: animate\n  });\n  return /*#__PURE__*/React.createElement(\"div\", _extends({}, restProps, {\n    style: _objectSpread(_objectSpread({}, style), {}, {\n      width: width,\n      maxWidth: maxWidth,\n      minWidth: minWidth\n    }),\n    ref: baseRef,\n    className: classNames(\"vkuiSplitCol\", getSizeXClassName(\"vkuiSplitCol\", sizeX), getViewWidthClassName(\"vkuiSplitCol\", viewWidth), spaced && \"vkuiSplitCol--spaced\", spaced === undefined && \"vkuiSplitCol--spaced-none\", autoSpaced && \"vkuiSplitCol--spaced-auto\", fixed && \"vkuiSplitCol--fixed\", stretchedOnMobile && \"vkuiSplitCol--stretched-on-mobile\", className)\n  }), /*#__PURE__*/React.createElement(SplitColContext.Provider, {\n    value: contextValue\n  }, fixed ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"vkuiSplitCol__fixedInner\"\n  }, children) : children));\n};","map":{"version":3,"mappings":"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","names":["React","classNames","getSizeXClassName","getViewWidthClassName","useAdaptivity","ViewWidth","useObjectMemo","useMediaQueries","matchMediaListAddListener","matchMediaListRemoveListener","useTransitionAnimate","animateProp","viewWidth","useState","Boolean","_React$useState2","animate","setAnimate","mediaQueries","useEffect","undefined","TABLET","listener","smallTabletPlus","matches","SplitColContext","createContext","colRef","useSplitCol","useContext","SplitCol","props","children","width","maxWidth","minWidth","spaced","fixed","style","autoSpaced","stretchedOnMobile","className","restProps","_excluded","baseRef","useRef","sizeX","contextValue","ref","Provider","value"],"sources":["/Users/pitus_anonimous/Desktop/youth_bit_hack/youth_bit_vk/node_modules/@vkontakte/vkui/src/components/SplitCol/SplitCol.tsx"],"sourcesContent":["import * as React from 'react';\nimport { classNames } from '@vkontakte/vkjs';\nimport { getSizeXClassName } from '../../helpers/getSizeXClassName';\nimport { getViewWidthClassName } from '../../helpers/getViewWidthClassName';\nimport { useAdaptivity } from '../../hooks/useAdaptivity';\nimport { ViewWidth } from '../../lib/adaptivity';\nimport { useObjectMemo } from '../../hooks/useObjectMemo';\nimport { useMediaQueries } from '../../hooks/useMediaQueries';\nimport { matchMediaListAddListener, matchMediaListRemoveListener } from '../../lib/matchMedia';\nimport styles from './SplitCol.module.css';\n\nfunction useTransitionAnimate(animateProp?: boolean) {\n  const { viewWidth } = useAdaptivity();\n  const [animate, setAnimate] = React.useState(Boolean(animateProp));\n  const mediaQueries = useMediaQueries();\n\n  React.useEffect(() => {\n    if (animateProp !== undefined) {\n      setAnimate(animateProp);\n      return;\n    }\n\n    if (viewWidth !== undefined) {\n      setAnimate(viewWidth < ViewWidth.TABLET);\n      return;\n    }\n\n    // eslint-disable-next-line no-restricted-properties\n    const listener = () => setAnimate(!mediaQueries.smallTabletPlus.matches);\n    listener();\n\n    matchMediaListAddListener(mediaQueries.smallTabletPlus, listener);\n    return () => {\n      matchMediaListRemoveListener(mediaQueries.smallTabletPlus, listener);\n    };\n  }, [animateProp, viewWidth, mediaQueries]);\n\n  return animate;\n}\n\nexport interface SplitColContextProps {\n  colRef: React.RefObject<HTMLDivElement> | null;\n  animate: boolean;\n}\n\nexport const SplitColContext = React.createContext<SplitColContextProps>({\n  colRef: null,\n  animate: true,\n});\n\nexport const useSplitCol = () => React.useContext(SplitColContext);\n\nexport interface SplitColProps extends React.HTMLAttributes<HTMLDivElement> {\n  width?: number | string;\n  maxWidth?: number | string;\n  minWidth?: number | string;\n  /**\n   * Если false, то переходы между Panel происходят без анимации\n   */\n  animate?: boolean;\n  /**\n   * Если true, то добавляются боковые отступы фиксированной величины\n   */\n  spaced?: boolean;\n  /**\n   * Если true, то добавляются боковые отступы фиксированной величины при ширине больше чем `smallTablet`\n   */\n  autoSpaced?: boolean;\n  fixed?: boolean;\n  /**\n   * Если true, то ширина контейнера становится 100% при ширине меньше чем `tablet`\n   */\n  stretchedOnMobile?: boolean;\n}\n\n/**\n * @see https://vkcom.github.io/VKUI/#/SplitCol\n */\nexport const SplitCol = (props: SplitColProps) => {\n  const {\n    children,\n    width,\n    maxWidth,\n    minWidth,\n    spaced,\n    animate: animateProp,\n    fixed,\n    style,\n    autoSpaced,\n    stretchedOnMobile,\n    className,\n    ...restProps\n  } = props;\n  const baseRef = React.useRef<HTMLDivElement>(null);\n  const { viewWidth, sizeX } = useAdaptivity();\n  const animate = useTransitionAnimate(animateProp);\n\n  const contextValue = useObjectMemo({\n    colRef: baseRef,\n    animate,\n  });\n\n  return (\n    <div\n      {...restProps}\n      style={{\n        ...style,\n        width: width,\n        maxWidth: maxWidth,\n        minWidth: minWidth,\n      }}\n      ref={baseRef}\n      className={classNames(\n        styles['SplitCol'],\n        getSizeXClassName(styles['SplitCol'], sizeX),\n        getViewWidthClassName(styles['SplitCol'], viewWidth),\n        spaced && styles['SplitCol--spaced'],\n        spaced === undefined && styles['SplitCol--spaced-none'],\n        autoSpaced && styles['SplitCol--spaced-auto'],\n        fixed && styles['SplitCol--fixed'],\n        stretchedOnMobile && styles['SplitCol--stretched-on-mobile'],\n        className,\n      )}\n    >\n      <SplitColContext.Provider value={contextValue}>\n        {fixed ? <div className={styles['SplitCol__fixedInner']}>{children}</div> : children}\n      </SplitColContext.Provider>\n    </div>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}