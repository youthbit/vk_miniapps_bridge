{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"children\", \"primary\", \"label\", \"className\"];\nimport * as React from 'react';\nimport { Tappable } from '../Tappable/Tappable';\nimport { getPlatformClassName } from '../../helpers/getPlatformClassName';\nimport { classNames, isPrimitiveReactNode } from '@vkontakte/vkjs';\nimport { warnOnce } from '../../lib/warnOnce';\nimport { usePlatform } from '../../hooks/usePlatform';\nimport { getTitleFromChildren } from '../../lib/utils';\nimport { Platform } from '../../lib/platform';\nimport { Text } from '../Typography/Text/Text';\nimport { Title } from '../Typography/Title/Title';\n\nvar ButtonTypography = function ButtonTypography(_ref) {\n  var primary = _ref.primary,\n      children = _ref.children;\n  var platform = usePlatform();\n\n  if (platform === Platform.IOS) {\n    return /*#__PURE__*/React.createElement(Title, {\n      Component: \"span\",\n      level: \"3\",\n      weight: primary ? '1' : '3'\n    }, children);\n  }\n\n  return /*#__PURE__*/React.createElement(Text, {\n    weight: platform === Platform.VKCOM ? undefined : '2'\n  }, children);\n};\n\nvar warn = warnOnce('PanelHeaderButton');\n/**\n * @see https://vkcom.github.io/VKUI/#/PanelHeaderButton\n */\n\nexport var PanelHeaderButton = function PanelHeaderButton(_ref2) {\n  var children = _ref2.children,\n      _ref2$primary = _ref2.primary,\n      primary = _ref2$primary === void 0 ? false : _ref2$primary,\n      label = _ref2.label,\n      className = _ref2.className,\n      restProps = _objectWithoutProperties(_ref2, _excluded);\n\n  var isPrimitive = isPrimitiveReactNode(children);\n  var isPrimitiveLabel = isPrimitiveReactNode(label);\n  var platform = usePlatform();\n  var hoverMode;\n  var activeMode;\n\n  switch (platform) {\n    case Platform.IOS:\n      hoverMode = 'background';\n      activeMode = 'opacity';\n      break;\n\n    case Platform.VKCOM:\n      hoverMode = \"vkuiPanelHeaderButton--hover\";\n      activeMode = \"vkuiPanelHeaderButton--active\";\n      break;\n\n    default:\n      hoverMode = 'background';\n      activeMode = 'background';\n  }\n\n  if (process.env.NODE_ENV === 'development') {\n    var hasAccessibleName = Boolean(getTitleFromChildren(children) || getTitleFromChildren(label) || restProps['aria-label'] || restProps['aria-labelledby']);\n\n    if (!hasAccessibleName) {\n      warn('a11y: У кнопки нет названия, которое может прочитать скринридер, и она недоступна для части пользователей. Замените содержимое на текст или добавьте описание действия с помощью пропа aria-label.', 'error');\n    }\n  }\n\n  return /*#__PURE__*/React.createElement(Tappable, _extends({}, restProps, {\n    hoverMode: hoverMode,\n    Component: restProps.href ? 'a' : 'button',\n    activeEffectDelay: 200,\n    activeMode: activeMode,\n    className: classNames(\"vkuiPanelHeaderButton\", getPlatformClassName(\"vkuiPanelHeaderButton\", platform), isPrimitive && \"vkuiPanelHeaderButton--primitive\", !isPrimitive && !isPrimitiveLabel && \"vkuiPanelHeaderButton--notPrimitive\", className)\n  }), isPrimitive ? /*#__PURE__*/React.createElement(ButtonTypography, {\n    primary: primary\n  }, children) : children, isPrimitiveLabel ? /*#__PURE__*/React.createElement(ButtonTypography, {\n    primary: primary,\n    className: \"vkuiPanelHeaderButton__label\"\n  }, label) : label);\n};","map":{"version":3,"mappings":"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","names":["React","Tappable","getPlatformClassName","classNames","isPrimitiveReactNode","warnOnce","usePlatform","getTitleFromChildren","Platform","Text","Title","ButtonTypography","_ref","primary","children","platform","IOS","Component","level","weight","VKCOM","undefined","warn","PanelHeaderButton","_ref2","_ref2$primary","label","className","restProps","isPrimitive","isPrimitiveLabel","hoverMode","activeMode","process","env","NODE_ENV","hasAccessibleName","Boolean","_extends","href","activeEffectDelay"],"sources":["/Users/pitus_anonimous/Desktop/youth_bit_hack/youth_bit_vk/node_modules/@vkontakte/vkui/src/components/PanelHeaderButton/PanelHeaderButton.tsx"],"sourcesContent":["import * as React from 'react';\nimport { TappableProps, Tappable } from '../Tappable/Tappable';\nimport { getPlatformClassName } from '../../helpers/getPlatformClassName';\nimport { classNames, isPrimitiveReactNode } from '@vkontakte/vkjs';\nimport { warnOnce } from '../../lib/warnOnce';\nimport { usePlatform } from '../../hooks/usePlatform';\nimport { getTitleFromChildren } from '../../lib/utils';\nimport { Platform } from '../../lib/platform';\nimport { Text } from '../Typography/Text/Text';\nimport { Title } from '../Typography/Title/Title';\nimport styles from './PanelHeaderButton.module.css';\n\nexport interface PanelHeaderButtonProps extends Omit<TappableProps, 'label'> {\n  primary?: boolean;\n  label?: React.ReactNode;\n}\n\ninterface ButtonTypographyProps extends React.AllHTMLAttributes<HTMLElement> {\n  primary?: PanelHeaderButtonProps['primary'];\n}\n\nconst ButtonTypography = ({ primary, children }: ButtonTypographyProps) => {\n  const platform = usePlatform();\n\n  if (platform === Platform.IOS) {\n    return (\n      <Title Component=\"span\" level=\"3\" weight={primary ? '1' : '3'}>\n        {children}\n      </Title>\n    );\n  }\n\n  return <Text weight={platform === Platform.VKCOM ? undefined : '2'}>{children}</Text>;\n};\n\nconst warn = warnOnce('PanelHeaderButton');\n\n/**\n * @see https://vkcom.github.io/VKUI/#/PanelHeaderButton\n */\nexport const PanelHeaderButton = ({\n  children,\n  primary = false,\n  label,\n  className,\n  ...restProps\n}: PanelHeaderButtonProps) => {\n  const isPrimitive = isPrimitiveReactNode(children);\n  const isPrimitiveLabel = isPrimitiveReactNode(label);\n  const platform = usePlatform();\n\n  let hoverMode;\n  let activeMode;\n\n  switch (platform) {\n    case Platform.IOS:\n      hoverMode = 'background';\n      activeMode = 'opacity';\n      break;\n    case Platform.VKCOM:\n      hoverMode = styles['PanelHeaderButton--hover'];\n      activeMode = styles['PanelHeaderButton--active'];\n      break;\n    default:\n      hoverMode = 'background';\n      activeMode = 'background';\n  }\n\n  if (process.env.NODE_ENV === 'development') {\n    const hasAccessibleName = Boolean(\n      getTitleFromChildren(children) ||\n        getTitleFromChildren(label) ||\n        restProps['aria-label'] ||\n        restProps['aria-labelledby'],\n    );\n\n    if (!hasAccessibleName) {\n      warn(\n        'a11y: У кнопки нет названия, которое может прочитать скринридер, и она недоступна для части пользователей. Замените содержимое на текст или добавьте описание действия с помощью пропа aria-label.',\n        'error',\n      );\n    }\n  }\n\n  return (\n    <Tappable\n      {...restProps}\n      hoverMode={hoverMode}\n      Component={restProps.href ? 'a' : 'button'}\n      activeEffectDelay={200}\n      activeMode={activeMode}\n      className={classNames(\n        styles['PanelHeaderButton'],\n        getPlatformClassName(styles['PanelHeaderButton'], platform),\n        isPrimitive && styles['PanelHeaderButton--primitive'],\n        !isPrimitive && !isPrimitiveLabel && styles['PanelHeaderButton--notPrimitive'],\n        className,\n      )}\n    >\n      {isPrimitive ? <ButtonTypography primary={primary}>{children}</ButtonTypography> : children}\n      {isPrimitiveLabel ? (\n        <ButtonTypography primary={primary} className={styles['PanelHeaderButton__label']}>\n          {label}\n        </ButtonTypography>\n      ) : (\n        label\n      )}\n    </Tappable>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}