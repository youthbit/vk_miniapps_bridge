{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport * as React from 'react';\nimport vkBridge from '@vkontakte/vk-bridge';\nimport { useDOM } from '../lib/dom';\nimport { noop } from '@vkontakte/vkjs';\nimport { resolveAppearance } from '../helpers/appearance';\nimport { matchMediaListAddListener, matchMediaListRemoveListener } from '../lib/matchMedia';\nvar initialAppearance = null;\nvkBridge.send('VKWebAppGetConfig').then(function (data) {\n  initialAppearance = resolveAppearance(data);\n}).catch(console.error);\n\nfunction autoDetectAppearanceByBridge(setAppearance, onDetectAppearanceByBridge) {\n  function bridgeListener(e) {\n    var _e$detail = e.detail,\n        type = _e$detail.type,\n        data = _e$detail.data;\n\n    if (type !== 'VKWebAppUpdateConfig') {\n      return;\n    }\n\n    initialAppearance = resolveAppearance(data);\n\n    if (initialAppearance) {\n      onDetectAppearanceByBridge();\n      setAppearance(initialAppearance);\n    }\n  }\n\n  vkBridge.subscribe(bridgeListener);\n  return function () {\n    return vkBridge.unsubscribe(bridgeListener);\n  };\n}\n\nfunction autoDetectAppearance(window, setAppearance) {\n  var mediaQuery = window && window.matchMedia && window.matchMedia('(prefers-color-scheme: dark)');\n\n  if (mediaQuery === undefined) {\n    return noop;\n  }\n\n  var check = function check(event) {\n    // eslint-disable-next-line no-restricted-properties\n    setAppearance(event.matches ? 'dark' : 'light');\n  };\n\n  check(mediaQuery);\n  matchMediaListAddListener(mediaQuery, check);\n  return function () {\n    return matchMediaListRemoveListener(mediaQuery, check);\n  };\n}\n\nexport var useAutoDetectAppearance = function useAutoDetectAppearance(appearanceProp, onDetectAppearanceByBridge) {\n  var _useDOM = useDOM(),\n      window = _useDOM.window;\n\n  var onceDetectAppearanceByBridge = React.useRef(function () {\n    onDetectAppearanceByBridge && onDetectAppearanceByBridge();\n    onceDetectAppearanceByBridge.current = noop;\n  });\n\n  var _React$useState = React.useState(function () {\n    if (appearanceProp) {\n      return appearanceProp;\n    }\n\n    if (initialAppearance) {\n      onceDetectAppearanceByBridge.current();\n      return initialAppearance;\n    }\n\n    var mediaQuery = window && window.matchMedia && window.matchMedia('(prefers-color-scheme: dark)'); // eslint-disable-next-line no-restricted-properties\n\n    return mediaQuery !== null && mediaQuery !== void 0 && mediaQuery.matches ? 'dark' : 'light';\n  }),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      appearance = _React$useState2[0],\n      setAppearance = _React$useState2[1];\n\n  React.useEffect(function () {\n    if (appearanceProp) {\n      setAppearance(appearanceProp);\n      return noop;\n    }\n\n    if (vkBridge.isEmbedded()) {\n      return autoDetectAppearanceByBridge(setAppearance, onceDetectAppearanceByBridge.current);\n    }\n\n    return autoDetectAppearance(window, setAppearance);\n  }, [window, appearanceProp]);\n  return appearance;\n};","map":{"version":3,"mappings":"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","names":["React","vkBridge","useDOM","noop","resolveAppearance","matchMediaListAddListener","matchMediaListRemoveListener","initialAppearance","send","then","data","catch","console","error","autoDetectAppearanceByBridge","setAppearance","onDetectAppearanceByBridge","bridgeListener","e","detail","type","subscribe","unsubscribe","autoDetectAppearance","window","mediaQuery","matchMedia","undefined","check","event","matches","useAutoDetectAppearance","appearanceProp","onceDetectAppearanceByBridge","useRef","current","useState","_React$useState2","appearance","useEffect","isEmbedded"],"sources":["/Users/pitus_anonimous/Desktop/youth_bit_hack/youth_bit_vk/node_modules/@vkontakte/vkui/src/hooks/useAutoDetectAppearance.tsx"],"sourcesContent":["import * as React from 'react';\nimport vkBridge, {\n  AnyReceiveMethodName,\n  AppearanceType,\n  VKBridgeEvent,\n} from '@vkontakte/vk-bridge';\nimport { useDOM } from '../lib/dom';\nimport { noop } from '@vkontakte/vkjs';\nimport { resolveAppearance, VKBridgeConfigData } from '../helpers/appearance';\nimport { matchMediaListAddListener, matchMediaListRemoveListener } from '../lib/matchMedia';\n\nlet initialAppearance: AppearanceType | null = null;\n\nvkBridge\n  .send('VKWebAppGetConfig')\n  .then((data) => {\n    initialAppearance = resolveAppearance(data);\n  })\n  .catch(console.error);\n\nfunction autoDetectAppearanceByBridge(\n  setAppearance: (value: AppearanceType) => void,\n  onDetectAppearanceByBridge: () => void,\n) {\n  function bridgeListener(e: VKBridgeEvent<AnyReceiveMethodName>) {\n    const { type, data } = e.detail;\n\n    if (type !== 'VKWebAppUpdateConfig') {\n      return;\n    }\n\n    initialAppearance = resolveAppearance(data as VKBridgeConfigData);\n\n    if (initialAppearance) {\n      onDetectAppearanceByBridge();\n      setAppearance(initialAppearance);\n    }\n  }\n\n  vkBridge.subscribe(bridgeListener);\n\n  return () => vkBridge.unsubscribe(bridgeListener);\n}\n\nfunction autoDetectAppearance(\n  window: Window | undefined,\n  setAppearance: (value: AppearanceType) => void,\n): () => void {\n  const mediaQuery =\n    window && window.matchMedia && window.matchMedia('(prefers-color-scheme: dark)');\n\n  if (mediaQuery === undefined) {\n    return noop;\n  }\n\n  const check = (event: MediaQueryList | MediaQueryListEvent) => {\n    // eslint-disable-next-line no-restricted-properties\n    setAppearance(event.matches ? 'dark' : 'light');\n  };\n\n  check(mediaQuery);\n  matchMediaListAddListener(mediaQuery, check);\n\n  return () => matchMediaListRemoveListener(mediaQuery, check);\n}\n\nexport const useAutoDetectAppearance = (\n  appearanceProp?: AppearanceType,\n  onDetectAppearanceByBridge?: () => void,\n): AppearanceType => {\n  const { window } = useDOM();\n  const onceDetectAppearanceByBridge = React.useRef(() => {\n    onDetectAppearanceByBridge && onDetectAppearanceByBridge();\n    onceDetectAppearanceByBridge.current = noop;\n  });\n\n  const [appearance, setAppearance] = React.useState<AppearanceType>(() => {\n    if (appearanceProp) {\n      return appearanceProp;\n    }\n\n    if (initialAppearance) {\n      onceDetectAppearanceByBridge.current();\n      return initialAppearance;\n    }\n\n    const mediaQuery =\n      window && window.matchMedia && window.matchMedia('(prefers-color-scheme: dark)');\n\n    // eslint-disable-next-line no-restricted-properties\n    return mediaQuery?.matches ? 'dark' : 'light';\n  });\n\n  React.useEffect(() => {\n    if (appearanceProp) {\n      setAppearance(appearanceProp);\n      return noop;\n    }\n\n    if (vkBridge.isEmbedded()) {\n      return autoDetectAppearanceByBridge(setAppearance, onceDetectAppearanceByBridge.current);\n    }\n\n    return autoDetectAppearance(window, setAppearance);\n  }, [window, appearanceProp]);\n\n  return appearance;\n};\n"]},"metadata":{},"sourceType":"module"}