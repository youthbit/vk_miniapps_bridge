{"ast":null,"code":"import { canUseDOM } from './dom';\n/**\n * Функция для js анимации\n * @param {number} duration\n * @param {function} timing тайминг функция анимации\n * @param {function} draw коллбэк, в который прокидывается прогресс [0, 1]\n * @returns {void}\n */\n\nexport function animate(_ref) {\n  var duration = _ref.duration,\n      timing = _ref.timing,\n      draw = _ref.draw;\n\n  if (!canUseDOM) {\n    return;\n  }\n\n  var start = performance.now();\n  requestAnimationFrame(function animate(time) {\n    var timeFraction = (time - start) / duration;\n\n    if (timeFraction > 1) {\n      timeFraction = 1;\n    }\n\n    var progress = timing(timeFraction);\n    draw(progress);\n\n    if (timeFraction < 1) {\n      requestAnimationFrame(animate);\n    }\n  });\n}","map":{"version":3,"mappings":"AAAA,SAASA,SAAT,QAA0B,OAA1B;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAWA,OAAO,SAASC,OAAT,CAAgBC,IAAhB,EAA8E;EAAA,IAA3DC,QAAQ,QAARA,QAA2D;EAAA,IAAjDC,MAAM,QAANA,MAAiD;EAAA,IAAzCC,IAAI,QAAJA,IAAyC;;EACnF,IAAI,CAACL,SAAL,EAAgB;IACd;EACF;;EAEA,IAAMM,KAAK,GAAGC,WAAW,CAACC,GAAZD,EAAd;EAEAE,qBAAqB,CAAC,SAASR,OAAT,CAAiBS,IAAjB,EAAqC;IACzD,IAAIC,YAAY,GAAG,CAACD,IAAI,GAAGJ,KAAR,IAAiBH,QAApC;;IAEA,IAAIQ,YAAY,GAAG,CAAnB,EAAsB;MACpBA,YAAY,GAAG,CAAfA;IACF;;IAEA,IAAMC,QAAQ,GAAGR,MAAM,CAACO,YAAD,CAAvB;IAEAN,IAAI,CAACO,QAAD,CAAJP;;IAEA,IAAIM,YAAY,GAAG,CAAnB,EAAsB;MACpBF,qBAAqB,CAACR,OAAD,CAArBQ;IACF;EACD,CAdoB,CAArBA;AAeF","names":["canUseDOM","animate","_ref","duration","timing","draw","start","performance","now","requestAnimationFrame","time","timeFraction","progress"],"sources":["/Users/pitus_anonimous/Desktop/youth_bit_hack/youth_bit_vk/node_modules/@vkontakte/vkui/src/lib/animate.ts"],"sourcesContent":["import { canUseDOM } from './dom';\n\n/**\n * Функция для js анимации\n * @param {number} duration\n * @param {function} timing тайминг функция анимации\n * @param {function} draw коллбэк, в который прокидывается прогресс [0, 1]\n * @returns {void}\n */\nexport type TimingInterface = (timeFraction: number) => number;\n\nexport type DrawInterface = (progress: number) => void;\n\nexport interface AnimateArgumentsInterface {\n  duration: number;\n  timing: TimingInterface;\n  draw: DrawInterface;\n}\n\nexport function animate({ duration, timing, draw }: AnimateArgumentsInterface): void {\n  if (!canUseDOM) {\n    return;\n  }\n\n  const start = performance.now();\n\n  requestAnimationFrame(function animate(time: number): void {\n    let timeFraction = (time - start) / duration;\n\n    if (timeFraction > 1) {\n      timeFraction = 1;\n    }\n\n    const progress = timing(timeFraction);\n\n    draw(progress);\n\n    if (timeFraction < 1) {\n      requestAnimationFrame(animate);\n    }\n  });\n}\n"]},"metadata":{},"sourceType":"module"}