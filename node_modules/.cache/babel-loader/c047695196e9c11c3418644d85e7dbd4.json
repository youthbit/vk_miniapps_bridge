{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"children\", \"text\", \"header\", \"appearance\", \"className\"];\nimport * as React from 'react';\nimport { HoverPopper } from '../HoverPopper/HoverPopper';\nimport { Subhead } from '../Typography/Subhead/Subhead';\nimport { classNames, hasReactNode } from '@vkontakte/vkjs';\n/**\n * @see https://vkcom.github.io/VKUI/#/TextTooltip\n */\n\nexport var TextTooltip = function TextTooltip(_ref) {\n  var children = _ref.children,\n      text = _ref.text,\n      header = _ref.header,\n      _ref$appearance = _ref.appearance,\n      appearance = _ref$appearance === void 0 ? 'neutral' : _ref$appearance,\n      className = _ref.className,\n      popperProps = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(HoverPopper, _extends({\n    className: classNames(\"vkuiTextTooltip\", styles[\"TextTooltip--appearance-\".concat(appearance)], className),\n    arrow: true,\n    arrowClassName: \"vkuiTextTooltip__arrow\",\n    content: /*#__PURE__*/React.createElement(React.Fragment, null, hasReactNode(header) && /*#__PURE__*/React.createElement(Subhead, {\n      weight: \"2\",\n      className: \"vkuiTextTooltip__header\"\n    }, header), hasReactNode(text) && /*#__PURE__*/React.createElement(Subhead, {\n      className: \"vkuiTextTooltip__text\"\n    }, text))\n  }, popperProps), children);\n};\nvar styles = {\n  \"TextTooltip--appearance-accent\": \"vkuiTextTooltip--appearance-accent\",\n  \"TextTooltip--appearance-white\": \"vkuiTextTooltip--appearance-white\",\n  \"TextTooltip--appearance-black\": \"vkuiTextTooltip--appearance-black\",\n  \"TextTooltip--appearance-inversion\": \"vkuiTextTooltip--appearance-inversion\",\n  \"TextTooltip--appearance-neutral\": \"vkuiTextTooltip--appearance-neutral\"\n};","map":{"version":3,"mappings":";;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,WAAT,QAA8C,4BAA9C;AACA,SAASC,OAAT,QAAwB,+BAAxB;AACA,SAASC,UAAT,EAAqBC,YAArB,QAAyC,iBAAzC;AAmBA;AACA;AACA;;AACA,OAAO,IAAMC,WAAW,GAAG,SAAdA,WAAc,CAAHC,IAAG,EAOH;EAAA,IANtBC,QAAQ,QAARA,QAMsB;EAAA,IALtBC,IAAI,QAAJA,IAKsB;EAAA,IAJtBC,MAAM,QAANA,MAIsB;EAAA,IAJhBC,uBACNC,UAGsB;EAAA,IAHtBA,UAAU,gCAAG,SAAH,GAAYD,eAGA;EAAA,IAFtBE,SAAS,QAATA,SAEsB;EAAA,IADnBC,WAAW,4CACQ;;EACtB,oBACEb,oBAACC,WAAD,EAAYa;IACVF,SAAS,EAAET,UAAU,oBAEnBY,MAAM,mCAA4BJ,UAA5B,EAFa,EAGnBC,SAHmB,CADX;IAMVI,KAAK,MANK;IAOVC,cAAc,0BAPJ;IAQVC,OAAO,eACLlB,oBAACA,KAAK,CAACmB,QAAP,EAAe,IAAf,EACGf,YAAY,CAACK,MAAD,CAAZL,IAAoB,aACnBJ,oBAACE,OAAD,EAAQ;MAACkB,MAAM,EAAC,GAAR;MAAYR,SAAS;IAArB,CAAR,EACGH,MADH,CAFJ,EAMGL,YAAY,CAACI,IAAD,CAAZJ,IAAkB,aAAIJ,oBAACE,OAAD,EAAQ;MAACU,SAAS;IAAV,CAAR,EAAkDJ,IAAlD,CANzB;EATQ,GAkBNK,WAlBM,CAAZ,EAoBGN,QApBH,CADF;AAwBD,CAhCM;AAgCL;EAAA;EAAA;EAAA;EAAA;EAAA;AAAA","names":["React","HoverPopper","Subhead","classNames","hasReactNode","TextTooltip","_ref","children","text","header","_ref$appearance","appearance","className","popperProps","_extends","styles","arrow","arrowClassName","content","Fragment","weight"],"sources":["/Users/pitus_anonimous/Desktop/youth_bit_hack/youth_bit_vk/node_modules/@vkontakte/vkui/src/components/TextTooltip/TextTooltip.tsx"],"sourcesContent":["import * as React from 'react';\nimport { HoverPopper, HoverPopperProps } from '../HoverPopper/HoverPopper';\nimport { Subhead } from '../Typography/Subhead/Subhead';\nimport { classNames, hasReactNode } from '@vkontakte/vkjs';\nimport styles from './TextTooltip.module.css';\n\nexport interface TextTooltipProps\n  extends Omit<HoverPopperProps, 'arrow' | 'arrowClassName' | 'content'> {\n  /**\n   * Текст тултипа\n   */\n  text?: React.ReactNode;\n  /**\n   * Заголовок тултипа\n   */\n  header?: React.ReactNode;\n  /**\n   * Стиль отображения подсказки\n   */\n  appearance?: 'accent' | 'neutral' | 'white' | 'black' | 'inversion';\n}\n\n/**\n * @see https://vkcom.github.io/VKUI/#/TextTooltip\n */\nexport const TextTooltip = ({\n  children,\n  text,\n  header,\n  appearance = 'neutral',\n  className,\n  ...popperProps\n}: TextTooltipProps) => {\n  return (\n    <HoverPopper\n      className={classNames(\n        styles['TextTooltip'],\n        styles[`TextTooltip--appearance-${appearance}`],\n        className,\n      )}\n      arrow\n      arrowClassName={styles['TextTooltip__arrow']}\n      content={\n        <React.Fragment>\n          {hasReactNode(header) && (\n            <Subhead weight=\"2\" className={styles['TextTooltip__header']}>\n              {header}\n            </Subhead>\n          )}\n          {hasReactNode(text) && <Subhead className={styles['TextTooltip__text']}>{text}</Subhead>}\n        </React.Fragment>\n      }\n      {...popperProps}\n    >\n      {children}\n    </HoverPopper>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}