{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"textLevel\"],\n    _excluded2 = [\"mode\", \"size\", \"selected\", \"textLevel\", \"before\", \"after\", \"expandable\", \"children\", \"className\"];\nimport * as React from 'react';\nimport { getSizeYClassName } from '../../helpers/getSizeYClassName';\nimport { classNames } from '@vkontakte/vkjs';\nimport { getTitleFromChildren } from '../../lib/utils';\nimport { useAdaptivity } from '../../hooks/useAdaptivity';\nimport { Tappable } from '../Tappable/Tappable';\nimport { Icon16Dropdown } from '@vkontakte/icons';\nimport { Caption } from '../Typography/Caption/Caption';\nimport { Subhead } from '../Typography/Subhead/Subhead';\n\nvar SubnavigationButtonTypography = function SubnavigationButtonTypography(_ref) {\n  var textLevel = _ref.textLevel,\n      restProps = _objectWithoutProperties(_ref, _excluded);\n\n  if (textLevel === '1') {\n    return /*#__PURE__*/React.createElement(Subhead, restProps);\n  }\n\n  return /*#__PURE__*/React.createElement(Caption, _extends({\n    level: textLevel === '2' ? '1' : '2'\n  }, restProps));\n};\n/**\n * @see https://vkcom.github.io/VKUI/#/SubnavigationButton\n */\n\n\nexport var SubnavigationButton = function SubnavigationButton(_ref2) {\n  var _ref2$mode = _ref2.mode,\n      mode = _ref2$mode === void 0 ? 'primary' : _ref2$mode,\n      _ref2$size = _ref2.size,\n      size = _ref2$size === void 0 ? 'm' : _ref2$size,\n      selected = _ref2.selected,\n      _ref2$textLevel = _ref2.textLevel,\n      textLevel = _ref2$textLevel === void 0 ? '1' : _ref2$textLevel,\n      before = _ref2.before,\n      after = _ref2.after,\n      expandable = _ref2.expandable,\n      children = _ref2.children,\n      className = _ref2.className,\n      restProps = _objectWithoutProperties(_ref2, _excluded2);\n\n  var _useAdaptivity = useAdaptivity(),\n      sizeY = _useAdaptivity.sizeY;\n\n  return /*#__PURE__*/React.createElement(Tappable, _extends({}, restProps, {\n    hasActive: false,\n    focusVisibleMode: \"outside\",\n    className: classNames(\"vkuiSubnavigationButton\", styles[\"SubnavigationButton--size-\".concat(size)], styles[\"SubnavigationButton--mode-\".concat(mode)], selected && \"vkuiSubnavigationButton--selected\", getSizeYClassName(\"vkuiSubnavigationButton\", sizeY), className),\n    \"aria-label\": getTitleFromChildren(children)\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"vkuiSubnavigationButton__in\"\n  }, before && /*#__PURE__*/React.createElement(\"span\", {\n    className: \"vkuiSubnavigationButton__before\"\n  }, before), /*#__PURE__*/React.createElement(SubnavigationButtonTypography, {\n    textLevel: textLevel,\n    className: \"vkuiSubnavigationButton__label\",\n    Component: \"span\"\n  }, children), after && /*#__PURE__*/React.createElement(\"span\", {\n    className: \"vkuiSubnavigationButton__after\"\n  }, after), expandable && /*#__PURE__*/React.createElement(Icon16Dropdown, {\n    className: \"vkuiSubnavigationButton__expandableIcon\"\n  })));\n};\nvar styles = {\n  \"SubnavigationButton--size-s\": \"vkuiSubnavigationButton--size-s\",\n  \"SubnavigationButton--size-m\": \"vkuiSubnavigationButton--size-m\",\n  \"SubnavigationButton--size-l\": \"vkuiSubnavigationButton--size-l\",\n  \"SubnavigationButton--mode-primary\": \"vkuiSubnavigationButton--mode-primary\",\n  \"SubnavigationButton--mode-outline\": \"vkuiSubnavigationButton--mode-outline\",\n  \"SubnavigationButton--mode-tertiary\": \"vkuiSubnavigationButton--mode-tertiary\"\n};","map":{"version":3,"mappings":";;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,iBAAT,QAAkC,iCAAlC;AAEA,SAASC,UAAT,QAA2B,iBAA3B;AACA,SAASC,oBAAT,QAAqC,iBAArC;AACA,SAASC,aAAT,QAA8B,2BAA9B;AACA,SAAwBC,QAAxB,QAAwC,sBAAxC;AACA,SAASC,cAAT,QAA+B,kBAA/B;AACA,SAASC,OAAT,QAAwB,+BAAxB;AACA,SAASC,OAAT,QAAwB,+BAAxB;;AA6BA,IAAMC,6BAA6B,GAAG,SAAhCA,6BAAgC,CAAHC,IAAG,EAGI;EAAA,IAFxCC,SAAS,QAATA,SAEwC;EAAA,IADrCC,SAAS,4CAC4B;;EACxC,IAAID,SAAS,KAAK,GAAlB,EAAuB;IACrB,oBAAOX,oBAACQ,OAAD,EAAaI,SAAb,CAAP;EACF;;EAEA,oBAAOZ,oBAACO,OAAD,EAAQM;IAACC,KAAK,EAAEH,SAAS,KAAK,GAAdA,GAAoB,GAApBA,GAA0B;EAAlC,GAA2CC,SAA3C,CAAR,CAAP;AACD,CATD;AAWA;AACA;AACA;;;AACA,OAAO,IAAMG,mBAAmB,GAAG,SAAtBA,mBAAsB,CAAHC,KAAG,EAWH;EAAA,uBAV9BC,IAU8B;EAAA,IAV9BA,IAAI,2BAAG,SAAH,GAAYC,UAUc;EAAA,IAVdC,mBAChBC,IAS8B;EAAA,IAT9BA,IAAI,2BAAG,GAAH,GAAMD,UASoB;EAAA,IAR9BE,QAAQ,SAARA,QAQ8B;EAAA,IARtBC,wBACRX,SAO8B;EAAA,IAP9BA,SAAS,gCAAG,GAAH,GAAMW,eAOe;EAAA,IAN9BC,MAAM,SAANA,MAM8B;EAAA,IAL9BC,KAAK,SAALA,KAK8B;EAAA,IAJ9BC,UAAU,SAAVA,UAI8B;EAAA,IAH9BC,QAAQ,SAARA,QAG8B;EAAA,IAF9BC,SAAS,SAATA,SAE8B;EAAA,IAD3Bf,SAAS,8CACkB;;EAC9B,qBAAkBR,aAAa,EAA/B;EAAA,IAAQwB,KAAK,kBAALA,KAAR;;EAEA,oBACE5B,oBAACK,QAAD,EAASQ,aACHD,SADG,EACM;IACbiB,SAAS,EAAE,KADE;IAEbC,gBAAgB,EAAC,SAFJ;IAGbH,SAAS,EAAEzB,UAAU,4BAEnB6B,MAAM,qCAA8BX,IAA9B,EAFa,EAGnBW,MAAM,qCAA8Bd,IAA9B,EAHa,EAInBI,QAAQ,uCAJW,EAKnBpB,iBAAiB,4BAAgC2B,KAAhC,CALE,EAMnBD,SANmB,CAHR;IAWb,cAAYxB,oBAAoB,CAACuB,QAAD;EAXnB,CADN,CAAT,EAY6C,aAE3C1B;IAAM2B,SAAS;EAAf,GACGJ,MAAM,iBAAIvB;IAAM2B,SAAS;EAAf,GAAyDJ,MAAzD,CADb,EACoF,aAClFvB,oBAACS,6BAAD,EAA8B;IAC5BE,SAAS,EAAEA,SADiB;IAE5BgB,SAAS,kCAFmB;IAG5BK,SAAS,EAAC;EAHkB,CAA9B,EAKGN,QALH,CAFF,EASGF,KAAK,iBAAIxB;IAAM2B,SAAS;EAAf,GAAwDH,KAAxD,CATZ,EAUGC,UAAU,iBAAIzB,oBAACM,cAAD,EAAe;IAACqB,SAAS;EAAV,CAAf,CAVjB,CAdF,CADF;AA6BD,CA3CM;AA2CL;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;AAAA","names":["React","getSizeYClassName","classNames","getTitleFromChildren","useAdaptivity","Tappable","Icon16Dropdown","Caption","Subhead","SubnavigationButtonTypography","_ref","textLevel","restProps","_extends","level","SubnavigationButton","_ref2","mode","_ref2$mode","_ref2$size","size","selected","_ref2$textLevel","before","after","expandable","children","className","sizeY","hasActive","focusVisibleMode","styles","Component"],"sources":["/Users/pitus_anonimous/Desktop/youth_bit_hack/youth_bit_vk/node_modules/@vkontakte/vkui/src/components/SubnavigationButton/SubnavigationButton.tsx"],"sourcesContent":["import * as React from 'react';\nimport { getSizeYClassName } from '../../helpers/getSizeYClassName';\nimport { HasComponent, HasChildren } from '../../types';\nimport { classNames } from '@vkontakte/vkjs';\nimport { getTitleFromChildren } from '../../lib/utils';\nimport { useAdaptivity } from '../../hooks/useAdaptivity';\nimport { TappableProps, Tappable } from '../Tappable/Tappable';\nimport { Icon16Dropdown } from '@vkontakte/icons';\nimport { Caption } from '../Typography/Caption/Caption';\nimport { Subhead } from '../Typography/Subhead/Subhead';\nimport styles from './SubnavigationButton.module.css';\n\nexport interface SubnavigationButtonProps extends Omit<TappableProps, 'size'> {\n  mode?: 'primary' | 'outline' | 'tertiary';\n  size?: 's' | 'm' | 'l';\n  selected?: boolean;\n  /**\n   * Размер шрифта. Этим свойством рекомендуется пользоваться, чтобы отрегулировать размер шрифта у кнопок в `<SubnavigationBar mode=\"fixed\" />`\n   */\n  textLevel?: '1' | '2' | '3';\n  /**\n   * Рекомендуется использовать только иконки с размером 24\n   */\n  before?: React.ReactNode;\n  /**\n   * Рекомендуется использовать только `<Counter size=\"s\" />` или `<Badge />`\n   */\n  after?: React.ReactNode;\n  expandable?: boolean;\n}\n\ntype SubnavigationButtonTypographyProps = Pick<\n  SubnavigationButtonProps,\n  'textLevel' | 'className'\n> &\n  HasComponent &\n  HasChildren;\n\nconst SubnavigationButtonTypography = ({\n  textLevel,\n  ...restProps\n}: SubnavigationButtonTypographyProps) => {\n  if (textLevel === '1') {\n    return <Subhead {...restProps} />;\n  }\n\n  return <Caption level={textLevel === '2' ? '1' : '2'} {...restProps} />;\n};\n\n/**\n * @see https://vkcom.github.io/VKUI/#/SubnavigationButton\n */\nexport const SubnavigationButton = ({\n  mode = 'primary',\n  size = 'm',\n  selected,\n  textLevel = '1',\n  before,\n  after,\n  expandable,\n  children,\n  className,\n  ...restProps\n}: SubnavigationButtonProps) => {\n  const { sizeY } = useAdaptivity();\n\n  return (\n    <Tappable\n      {...restProps}\n      hasActive={false}\n      focusVisibleMode=\"outside\"\n      className={classNames(\n        styles['SubnavigationButton'],\n        styles[`SubnavigationButton--size-${size}`],\n        styles[`SubnavigationButton--mode-${mode}`],\n        selected && styles['SubnavigationButton--selected'],\n        getSizeYClassName(styles['SubnavigationButton'], sizeY),\n        className,\n      )}\n      aria-label={getTitleFromChildren(children)}\n    >\n      <span className={styles['SubnavigationButton__in']}>\n        {before && <span className={styles['SubnavigationButton__before']}>{before}</span>}\n        <SubnavigationButtonTypography\n          textLevel={textLevel}\n          className={styles['SubnavigationButton__label']}\n          Component=\"span\"\n        >\n          {children}\n        </SubnavigationButtonTypography>\n        {after && <span className={styles['SubnavigationButton__after']}>{after}</span>}\n        {expandable && <Icon16Dropdown className={styles['SubnavigationButton__expandableIcon']} />}\n      </span>\n    </Tappable>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}