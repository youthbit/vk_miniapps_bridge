{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectSpread from \"@babel/runtime/helpers/objectSpread2\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"className\", \"style\", \"before\", \"inlineAfter\", \"after\", \"getRootRef\", \"getRef\", \"onHeightChange\", \"shadow\", \"defaultValue\"];\nimport * as React from 'react';\nimport { Headline } from '../Typography/Headline/Headline';\nimport { usePlatform } from '../../hooks/usePlatform';\nimport { useExternRef } from '../../hooks/useExternRef';\nimport { classNames, hasReactNode } from '@vkontakte/vkjs';\nimport { Platform } from '../../lib/platform';\nimport { useEnsuredControl } from '../../hooks/useEnsuredControl';\n/**\n * @see https://vkcom.github.io/VKUI/#/WriteBar\n */\n\nexport var WriteBar = function WriteBar(_ref) {\n  var className = _ref.className,\n      style = _ref.style,\n      before = _ref.before,\n      inlineAfter = _ref.inlineAfter,\n      after = _ref.after,\n      getRootRef = _ref.getRootRef,\n      getRef = _ref.getRef,\n      onHeightChange = _ref.onHeightChange,\n      _ref$shadow = _ref.shadow,\n      shadow = _ref$shadow === void 0 ? false : _ref$shadow,\n      defaultValue = _ref.defaultValue,\n      restProps = _objectWithoutProperties(_ref, _excluded);\n\n  var platform = usePlatform();\n\n  var _useEnsuredControl = useEnsuredControl(_objectSpread({\n    defaultValue: defaultValue\n  }, restProps)),\n      _useEnsuredControl2 = _slicedToArray(_useEnsuredControl, 2),\n      value = _useEnsuredControl2[0],\n      onChange = _useEnsuredControl2[1];\n\n  var textareaRef = useExternRef(getRef);\n  var currentScrollHeight = React.useRef();\n  var resize = React.useCallback(function () {\n    var textareaEl = textareaRef.current;\n\n    if (!textareaEl) {\n      return;\n    }\n\n    if (textareaEl.offsetParent) {\n      textareaEl.style.height = '';\n      textareaEl.style.height = \"\".concat(textareaEl.scrollHeight, \"px\");\n\n      if (textareaEl.scrollHeight !== currentScrollHeight.current && onHeightChange) {\n        onHeightChange();\n        currentScrollHeight.current = textareaEl.scrollHeight;\n      }\n    }\n  }, [onHeightChange, textareaRef]);\n  React.useEffect(resize, [resize, value]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    ref: getRootRef,\n    className: classNames(\"vkuiWriteBar\", platform === Platform.IOS && \"vkuiWriteBar--ios\", shadow && \"vkuiWriteBar--shadow\", className),\n    style: style\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"vkuiWriteBar__form\"\n  }, hasReactNode(before) && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"vkuiWriteBar__before\"\n  }, before), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"vkuiWriteBar__formIn\"\n  }, /*#__PURE__*/React.createElement(Headline, _extends({}, restProps, {\n    Component: \"textarea\",\n    className: \"vkuiWriteBar__textarea\",\n    onChange: onChange,\n    getRootRef: textareaRef,\n    value: value\n  })), hasReactNode(inlineAfter) && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"vkuiWriteBar__inlineAfter\"\n  }, inlineAfter)), hasReactNode(after) && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"vkuiWriteBar__after\"\n  }, after)));\n};","map":{"version":3,"mappings":"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","names":["React","Headline","usePlatform","useExternRef","classNames","hasReactNode","Platform","useEnsuredControl","WriteBar","_ref","className","style","before","inlineAfter","after","getRootRef","getRef","onHeightChange","_ref$shadow","shadow","defaultValue","restProps","platform","_useEnsuredControl2","value","onChange","textareaRef","currentScrollHeight","useRef","resize","useCallback","textareaEl","current","offsetParent","height","scrollHeight","useEffect","ref","IOS","_extends","Component"],"sources":["/Users/pitus_anonimous/Desktop/youth_bit_hack/youth_bit_vk/node_modules/@vkontakte/vkui/src/components/WriteBar/WriteBar.tsx"],"sourcesContent":["import * as React from 'react';\nimport { Headline } from '../Typography/Headline/Headline';\nimport { usePlatform } from '../../hooks/usePlatform';\nimport { useExternRef } from '../../hooks/useExternRef';\nimport { classNames, hasReactNode } from '@vkontakte/vkjs';\nimport { Platform } from '../../lib/platform';\nimport { HasRef, HasRootRef } from '../../types';\nimport { useEnsuredControl } from '../../hooks/useEnsuredControl';\nimport styles from './WriteBar.module.css';\n\nexport interface WriteBarProps\n  extends React.TextareaHTMLAttributes<HTMLTextAreaElement>,\n    HasRootRef<HTMLDivElement>,\n    HasRef<HTMLTextAreaElement> {\n  /**\n   * Содержимое, отображаемое слева от поля ввода.\n   */\n  before?: React.ReactNode;\n  /**\n   * Содержимое, отображаемое поверх поля ввода (актуально для iOS)\n   */\n  inlineAfter?: React.ReactNode;\n  /**\n   * Содержимое, отображаемое справа от поля ввода\n   */\n  after?: React.ReactNode;\n  /**\n   * Вызывается при смене высоты поля ввода\n   */\n  onHeightChange?: VoidFunction;\n  /**\n   * Добавляет тень вокруг поля ввода\n   */\n  shadow?: boolean;\n\n  children?: never;\n}\n\n/**\n * @see https://vkcom.github.io/VKUI/#/WriteBar\n */\nexport const WriteBar = ({\n  className,\n  style,\n  before,\n  inlineAfter,\n  after,\n  getRootRef,\n  getRef,\n  onHeightChange,\n  shadow = false,\n  defaultValue,\n  ...restProps\n}: WriteBarProps) => {\n  const platform = usePlatform();\n\n  const [value, onChange] = useEnsuredControl({\n    defaultValue,\n    ...restProps,\n  });\n\n  const textareaRef = useExternRef(getRef);\n  const currentScrollHeight = React.useRef<number>();\n\n  const resize = React.useCallback(() => {\n    const textareaEl = textareaRef.current;\n    if (!textareaEl) {\n      return;\n    }\n\n    if (textareaEl.offsetParent) {\n      textareaEl.style.height = '';\n      textareaEl.style.height = `${textareaEl.scrollHeight}px`;\n\n      if (textareaEl.scrollHeight !== currentScrollHeight.current && onHeightChange) {\n        onHeightChange();\n        currentScrollHeight.current = textareaEl.scrollHeight;\n      }\n    }\n  }, [onHeightChange, textareaRef]);\n\n  React.useEffect(resize, [resize, value]);\n\n  return (\n    <div\n      ref={getRootRef}\n      className={classNames(\n        styles['WriteBar'],\n        platform === Platform.IOS && styles['WriteBar--ios'],\n        shadow && styles['WriteBar--shadow'],\n        className,\n      )}\n      style={style}\n    >\n      <div className={styles['WriteBar__form']}>\n        {hasReactNode(before) && <div className={styles['WriteBar__before']}>{before}</div>}\n\n        <div className={styles['WriteBar__formIn']}>\n          <Headline\n            {...restProps}\n            Component=\"textarea\"\n            className={styles['WriteBar__textarea']}\n            onChange={onChange}\n            getRootRef={textareaRef}\n            value={value}\n          />\n          {hasReactNode(inlineAfter) && (\n            <div className={styles['WriteBar__inlineAfter']}>{inlineAfter}</div>\n          )}\n        </div>\n\n        {hasReactNode(after) && <div className={styles['WriteBar__after']}>{after}</div>}\n      </div>\n    </div>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}