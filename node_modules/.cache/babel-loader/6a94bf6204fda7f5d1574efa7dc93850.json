{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React from 'react';\nimport { getMillisecondsToTomorrow } from '../lib/date';\n/**\n * Опционально обновляемая дата сегодняшнего дня\n *\n * Дата - сегодня (в соответствии с системным временем)\n *\n * Часы, минуты, секунды, миллисекунды - произвольные\n *\n * @param listenDayChangesForUpdate - флаг по которому определяется, будет ли создаваться подписка на смену календарного дня\n */\n\nexport function useTodayDate() {\n  var listenDayChangesForUpdate = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n\n  var _React$useState = React.useState(function () {\n    return new Date();\n  }),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      todayDate = _React$useState2[0],\n      setTodayDate = _React$useState2[1];\n\n  React.useEffect(function () {\n    if (!listenDayChangesForUpdate) {\n      return;\n    }\n\n    var timeToDayChange = getMillisecondsToTomorrow(todayDate);\n    var timeout = setTimeout(function () {\n      setTodayDate(new Date());\n    }, timeToDayChange);\n    return function () {\n      clearTimeout(timeout);\n    };\n  }, [listenDayChangesForUpdate, todayDate]);\n  return todayDate;\n}","map":{"version":3,"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAASC,yBAAT,QAA0C,aAA1C;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,SAASC,YAAT,GAAyD;EAAA,IAAnCC,yBAAyB,uEAAG,KAAO;;EAC9D,sBAAkCH,KAAK,CAACI,QAANJ,CAAe;IAAA,OAAM,IAAIK,IAAJ,EAAN;EAAgB,CAA/BL,CAAlC;EAAA,IAAkEM,qDAAlE;EAAA,IAAOC,SAAS,sBAAhB;EAAA,IAAkBC,YAAY,sBAA9B;;EAEAR,KAAK,CAACS,SAANT,CAAgB,YAAM;IACpB,IAAI,CAACG,yBAAL,EAAgC;MAC9B;IACF;;IAEA,IAAMO,eAAe,GAAGT,yBAAyB,CAACM,SAAD,CAAjD;IAEA,IAAMI,OAAO,GAAGC,UAAU,CAAC,YAAM;MAC/BJ,YAAY,CAAC,IAAIH,IAAJ,EAAD,CAAZG;IACD,CAFyB,EAEvBE,eAFuB,CAA1B;IAIA,OAAO,YAAM;MACXG,YAAY,CAACF,OAAD,CAAZE;IACD,CAFD;EAGD,CAdDb,EAcG,CAACG,yBAAD,EAA4BI,SAA5B,CAdHP;EAgBA,OAAOO,SAAP;AACF","names":["React","getMillisecondsToTomorrow","useTodayDate","listenDayChangesForUpdate","useState","Date","_React$useState2","todayDate","setTodayDate","useEffect","timeToDayChange","timeout","setTimeout","clearTimeout"],"sources":["/Users/pitus_anonimous/Desktop/youth_bit_hack/youth_bit_vk/node_modules/@vkontakte/vkui/src/hooks/useTodayDate.ts"],"sourcesContent":["import React from 'react';\n\nimport { getMillisecondsToTomorrow } from '../lib/date';\n\n/**\n * Опционально обновляемая дата сегодняшнего дня\n *\n * Дата - сегодня (в соответствии с системным временем)\n *\n * Часы, минуты, секунды, миллисекунды - произвольные\n *\n * @param listenDayChangesForUpdate - флаг по которому определяется, будет ли создаваться подписка на смену календарного дня\n */\nexport function useTodayDate(listenDayChangesForUpdate = false) {\n  const [todayDate, setTodayDate] = React.useState(() => new Date());\n\n  React.useEffect(() => {\n    if (!listenDayChangesForUpdate) {\n      return;\n    }\n\n    const timeToDayChange = getMillisecondsToTomorrow(todayDate);\n\n    const timeout = setTimeout(() => {\n      setTodayDate(new Date());\n    }, timeToDayChange);\n\n    return () => {\n      clearTimeout(timeout);\n    };\n  }, [listenDayChangesForUpdate, todayDate]);\n\n  return todayDate;\n}\n"]},"metadata":{},"sourceType":"module"}