{"ast":null,"code":"export var calcMin = function calcMin(_ref) {\n  var _ref$containerWidth = _ref.containerWidth,\n      containerWidth = _ref$containerWidth === void 0 ? 0 : _ref$containerWidth,\n      _ref$layerWidth = _ref.layerWidth,\n      layerWidth = _ref$layerWidth === void 0 ? 0 : _ref$layerWidth,\n      _ref$slides = _ref.slides,\n      slides = _ref$slides === void 0 ? [] : _ref$slides,\n      _ref$viewportOffsetWi = _ref.viewportOffsetWidth,\n      viewportOffsetWidth = _ref$viewportOffsetWi === void 0 ? 0 : _ref$viewportOffsetWi,\n      align = _ref.align,\n      isCenterWithCustomWidth = _ref.isCenterWithCustomWidth;\n\n  switch (align) {\n    case 'left':\n      return containerWidth - layerWidth;\n\n    case 'right':\n      return viewportOffsetWidth - layerWidth;\n\n    case 'center':\n      if (isCenterWithCustomWidth && slides.length) {\n        var _slides = slides[slides.length - 1],\n            coordX = _slides.coordX,\n            width = _slides.width;\n        return viewportOffsetWidth / 2 - coordX - width / 2;\n      } else {\n        return viewportOffsetWidth - (containerWidth - viewportOffsetWidth) / 2 - layerWidth;\n      }\n\n  }\n\n  return undefined;\n};\nexport var calcMax = function calcMax(_ref2) {\n  var _ref2$slides = _ref2.slides,\n      slides = _ref2$slides === void 0 ? [] : _ref2$slides,\n      _ref2$viewportOffsetW = _ref2.viewportOffsetWidth,\n      viewportOffsetWidth = _ref2$viewportOffsetW === void 0 ? 0 : _ref2$viewportOffsetW,\n      isCenterWithCustomWidth = _ref2.isCenterWithCustomWidth;\n\n  if (isCenterWithCustomWidth && slides.length) {\n    var _slides$ = slides[0],\n        width = _slides$.width,\n        coordX = _slides$.coordX;\n    return viewportOffsetWidth / 2 - coordX - width / 2;\n  }\n\n  return 0;\n};","map":{"version":3,"mappings":"AAQA,OAAO,IAAMA,OAAO,GAAG,SAAVA,OAAU,CAAHC,IAAG,EAOR;EAAA,+BANbC,cAMa;EAAA,IANbA,cAAc,oCAAG,CAAH,GAAIC,mBAML;EAAA,IANKC,uBAClBC,UAKa;EAAA,IALbA,UAAU,gCAAG,CAAH,GAAID,eAKD;EAAA,IALCE,mBACdC,MAIa;EAAA,IAJbA,MAAM,4BAAG,EAAH,GAAKD,WAIE;EAAA,IAJFE,6BACXC,mBAGa;EAAA,IAHbA,mBAAmB,sCAAG,CAAH,GAAID,qBAGV;EAAA,IAFbE,KAAK,QAALA,KAEa;EAAA,IADbC,uBAAuB,QAAvBA,uBACa;;EACb,QAAQD,KAAR;IACE,KAAK,MAAL;MACE,OAAOR,cAAc,GAAGG,UAAxB;;IACF,KAAK,OAAL;MACE,OAAOI,mBAAmB,GAAGJ,UAA7B;;IACF,KAAK,QAAL;MACE,IAAIM,uBAAuB,IAAIJ,MAAM,CAACK,MAAtC,EAA8C;QAC5C,cAA0BL,MAAM,CAACA,MAAM,CAACK,MAAPL,GAAgB,CAAjB,CAAhC;QAAA,IAAQM,MAAM,WAANA,MAAR;QAAA,IAAgBC,KAAK,WAALA,KAAhB;QACA,OAAOL,mBAAmB,GAAG,CAAtBA,GAA0BI,MAA1BJ,GAAmCK,KAAK,GAAG,CAAlD;MACD,CAHD,MAGO;QACL,OAAOL,mBAAmB,GAAG,CAACP,cAAc,GAAGO,mBAAlB,IAAyC,CAA/DA,GAAmEJ,UAA1E;MACF;;EAXJ;;EAaA,OAAOU,SAAP;AACD,CAtBM;AA4BP,OAAO,IAAMC,OAAO,GAAG,SAAVA,OAAU,CAAHC,KAAG,EAIR;EAAA,yBAHbV,MAGa;EAAA,IAHbA,MAAM,6BAAG,EAAH,GAAKW,YAGE;EAAA,IAHFC,8BACXV,mBAEa;EAAA,IAFbA,mBAAmB,sCAAG,CAAH,GAAIU,qBAEV;EAAA,IADbR,uBAAuB,SAAvBA,uBACa;;EACb,IAAIA,uBAAuB,IAAIJ,MAAM,CAACK,MAAtC,EAA8C;IAC5C,eAA0BL,MAAM,CAAC,CAAD,CAAhC;IAAA,IAAQO,KAAK,YAALA,KAAR;IAAA,IAAeD,MAAM,YAANA,MAAf;IACA,OAAOJ,mBAAmB,GAAG,CAAtBA,GAA0BI,MAA1BJ,GAAmCK,KAAK,GAAG,CAAlD;EACF;;EACA,OAAO,CAAP;AACD,CAVM","names":["calcMin","_ref","containerWidth","_ref$containerWidth","_ref$layerWidth","layerWidth","_ref$slides","slides","_ref$viewportOffsetWi","viewportOffsetWidth","align","isCenterWithCustomWidth","length","coordX","width","undefined","calcMax","_ref2","_ref2$slides","_ref2$viewportOffsetW"],"sources":["/Users/pitus_anonimous/Desktop/youth_bit_hack/youth_bit_vk/node_modules/@vkontakte/vkui/src/components/BaseGallery/helpers.ts"],"sourcesContent":["import { LayoutState } from './types';\nimport { HasAlign } from '../../types';\n\ninterface CalcMin extends Partial<LayoutState> {\n  isCenterWithCustomWidth: boolean;\n  align: HasAlign['align'];\n}\n\nexport const calcMin = ({\n  containerWidth = 0,\n  layerWidth = 0,\n  slides = [],\n  viewportOffsetWidth = 0,\n  align,\n  isCenterWithCustomWidth,\n}: CalcMin) => {\n  switch (align) {\n    case 'left':\n      return containerWidth - layerWidth;\n    case 'right':\n      return viewportOffsetWidth - layerWidth;\n    case 'center':\n      if (isCenterWithCustomWidth && slides.length) {\n        const { coordX, width } = slides[slides.length - 1];\n        return viewportOffsetWidth / 2 - coordX - width / 2;\n      } else {\n        return viewportOffsetWidth - (containerWidth - viewportOffsetWidth) / 2 - layerWidth;\n      }\n  }\n  return undefined;\n};\n\ninterface CalcMax extends Partial<LayoutState> {\n  isCenterWithCustomWidth: boolean;\n}\n\nexport const calcMax = ({\n  slides = [],\n  viewportOffsetWidth = 0,\n  isCenterWithCustomWidth,\n}: CalcMax) => {\n  if (isCenterWithCustomWidth && slides.length) {\n    const { width, coordX } = slides[0];\n    return viewportOffsetWidth / 2 - coordX - width / 2;\n  }\n  return 0;\n};\n"]},"metadata":{},"sourceType":"module"}