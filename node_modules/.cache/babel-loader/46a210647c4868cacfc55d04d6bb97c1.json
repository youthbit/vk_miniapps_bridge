{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"src\", \"size\", \"className\", \"children\"];\nimport * as React from 'react';\nimport { classNames } from '@vkontakte/vkjs';\nimport { warnOnce } from '../../lib/warnOnce';\nimport { ImageBase } from '../ImageBase/ImageBase';\nimport { GridAvatarBadge } from './GridAvatarBadge/GridAvatarBadge';\nexport var GRID_AVATAR_DEFAULT_SIZE = 48;\nexport var MAX_GRID_LENGTH = 4;\nvar warn = warnOnce('GridAvatar');\n/**\n * @see https://vkcom.github.io/VKUI/#/GridAvatar\n */\n\nexport var GridAvatar = function GridAvatar(_ref) {\n  var _ref$src = _ref.src,\n      src = _ref$src === void 0 ? [] : _ref$src,\n      _ref$size = _ref.size,\n      size = _ref$size === void 0 ? GRID_AVATAR_DEFAULT_SIZE : _ref$size,\n      className = _ref.className,\n      children = _ref.children,\n      restProps = _objectWithoutProperties(_ref, _excluded);\n\n  if (process.env.NODE_ENV === 'development') {\n    if (src.length > MAX_GRID_LENGTH) {\n      warn(\"\\u0414\\u043B\\u0438\\u043D\\u0430 \\u043C\\u0430\\u0441\\u0441\\u0438\\u0432\\u0430 src (\".concat(src.length, \") \\u0431\\u043E\\u043B\\u044C\\u0448\\u0435 \\u043C\\u0430\\u043A\\u0441\\u0438\\u043C\\u0430\\u043B\\u044C\\u043D\\u043E\\u0439 (\").concat(MAX_GRID_LENGTH, \")\"), 'error');\n    }\n  }\n\n  return /*#__PURE__*/React.createElement(ImageBase, _extends({}, restProps, {\n    size: size,\n    className: classNames(\"vkuiGridAvatar\", className)\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"vkuiGridAvatar__in\",\n    \"aria-hidden\": true\n  }, src.map(function (url, index) {\n    return index < MAX_GRID_LENGTH ? /*#__PURE__*/React.createElement(\"div\", {\n      key: url,\n      className: \"vkuiGridAvatar__item\",\n      style: {\n        backgroundImage: \"url(\".concat(url, \")\")\n      }\n    }) : null;\n  })), children);\n};\nGridAvatar.Badge = GridAvatarBadge;","map":{"version":3,"mappings":";;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,UAAT,QAA2B,iBAA3B;AACA,SAASC,QAAT,QAAyB,oBAAzB;AACA,SAA8BC,SAA9B,QAA+C,wBAA/C;AACA,SAAoCC,eAApC,QAA2D,mCAA3D;AAKA,OAAO,IAAMC,wBAAwB,GAAG,EAAjC;AAEP,OAAO,IAAMC,eAAe,GAAG,CAAxB;AASP,IAAMC,IAAI,GAAGL,QAAQ,CAAC,YAAD,CAArB;AAEA;AACA;AACA;;AACA,OAAO,IAAMM,UAAU,GAAG,SAAbA,UAAa,CAAHC,IAAG,EAMH;EAAA,oBALrBC,GAKqB;EAAA,IALrBA,GAAG,yBAAG,EAAH,GAAKC,QAKa;EAAA,IALbC,iBACRC,IAIqB;EAAA,IAJrBA,IAAI,0BAAGR,wBAAH,GAA2BO,SAIV;EAAA,IAHrBE,SAAS,QAATA,SAGqB;EAAA,IAFrBC,QAAQ,QAARA,QAEqB;EAAA,IADlBC,SAAS,4CACS;;EACrB,IAAIC,OAAO,CAACC,GAARD,CAAYE,QAAZF,KAAyB,aAA7B,EAA4C;IAC1C,IAAIP,GAAG,CAACU,MAAJV,GAAaJ,eAAjB,EAAkC;MAChCC,IAAI,0FAAuBG,GAAG,CAACU,MAA3B,EAAiC,mHAAjC,EAAiCC,MAAjC,CAA2Df,eAA3D,EAA0E,GAA1E,GAA+E,OAA/E,CAAJC;IACF;EACF;;EAEA,oBACEP,oBAACG,SAAD,EAAUmB,aAAKN,SAAL,EAAc;IAAEH,IAAI,EAAEA,IAAR;IAAcC,SAAS,EAAEb,UAAU,mBAAuBa,SAAvB;EAAnC,CAAd,CAAV,EAA6F,aAC3Fd;IAAKc,SAAS,sBAAd;IAA0C;EAA1C,GACGJ,GAAG,CAACa,GAAJb,CAAQ,UAACc,GAAD,EAAMC,KAAN,EAAW;IAAA,OAClBA,KAAK,GAAGnB,eAARmB,GAAuB,aACrBzB;MACE0B,GAAG,EAAEF,GADP;MAEEV,SAAS,wBAFX;MAGEa,KAAK,EAAE;QAAEC,eAAe,gBAASJ,GAAT,EAAY,GAAZ;MAAjB;IAHT,EADFC,GAMI,IAPc;EAOV,CAPTf,CADH,CADF,EAYGK,QAZH,CADF;AAgBD,CA7BM;AA+BPP,UAAU,CAACqB,KAAXrB,GAAmBJ,eAAnBI","names":["React","classNames","warnOnce","ImageBase","GridAvatarBadge","GRID_AVATAR_DEFAULT_SIZE","MAX_GRID_LENGTH","warn","GridAvatar","_ref","src","_ref$src","_ref$size","size","className","children","restProps","process","env","NODE_ENV","length","concat","_extends","map","url","index","key","style","backgroundImage","Badge"],"sources":["/Users/pitus_anonimous/Desktop/youth_bit_hack/youth_bit_vk/node_modules/@vkontakte/vkui/src/components/GridAvatar/GridAvatar.tsx"],"sourcesContent":["import * as React from 'react';\nimport { classNames } from '@vkontakte/vkjs';\nimport { warnOnce } from '../../lib/warnOnce';\nimport { type ImageBaseProps, ImageBase } from '../ImageBase/ImageBase';\nimport { type GridAvatarBadgeProps, GridAvatarBadge } from './GridAvatarBadge/GridAvatarBadge';\nimport styles from './GridAvatar.module.css';\n\nexport { GridAvatarBadgeProps };\n\nexport const GRID_AVATAR_DEFAULT_SIZE = 48;\n\nexport const MAX_GRID_LENGTH = 4;\n\nexport interface GridAvatarProps extends Omit<ImageBaseProps, 'src' | 'fallbackIcon'> {\n  /**\n   * Массив со ссылками. От 1 до 4 элементов.\n   */\n  src?: string[];\n}\n\nconst warn = warnOnce('GridAvatar');\n\n/**\n * @see https://vkcom.github.io/VKUI/#/GridAvatar\n */\nexport const GridAvatar = ({\n  src = [],\n  size = GRID_AVATAR_DEFAULT_SIZE,\n  className,\n  children,\n  ...restProps\n}: GridAvatarProps) => {\n  if (process.env.NODE_ENV === 'development') {\n    if (src.length > MAX_GRID_LENGTH) {\n      warn(`Длина массива src (${src.length}) больше максимальной (${MAX_GRID_LENGTH})`, 'error');\n    }\n  }\n\n  return (\n    <ImageBase {...restProps} size={size} className={classNames(styles['GridAvatar'], className)}>\n      <div className={styles['GridAvatar__in']} aria-hidden>\n        {src.map((url, index) =>\n          index < MAX_GRID_LENGTH ? (\n            <div\n              key={url}\n              className={styles['GridAvatar__item']}\n              style={{ backgroundImage: `url(${url})` }}\n            />\n          ) : null,\n        )}\n      </div>\n      {children}\n    </ImageBase>\n  );\n};\n\nGridAvatar.Badge = GridAvatarBadge;\n"]},"metadata":{},"sourceType":"module"}