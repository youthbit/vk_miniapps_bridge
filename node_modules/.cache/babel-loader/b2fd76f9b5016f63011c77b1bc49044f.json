{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _typeof from \"@babel/runtime/helpers/typeof\";\nvar _excluded = [\"option\"],\n    _excluded2 = [\"before\", \"name\", \"className\", \"getRef\", \"getRootRef\", \"popupDirection\", \"style\", \"onChange\", \"children\", \"onInputChange\", \"renderDropdown\", \"onOpen\", \"onClose\", \"fetching\", \"forceDropdownPortal\", \"selectType\", \"autoHideScrollbar\", \"autoHideScrollbarDelay\", \"searchable\", \"renderOption\", \"options\", \"emptyText\", \"filterFn\", \"icon\", \"dropdownOffsetDistance\", \"fixDropdownWidth\"];\nimport * as React from 'react';\nimport { SelectMimicry } from '../SelectMimicry/SelectMimicry';\nimport { debounce, multiRef, getTitleFromChildren } from '../../lib/utils';\nimport { classNames } from '@vkontakte/vkjs';\nimport { CustomSelectOption } from '../CustomSelectOption/CustomSelectOption';\nimport { Input } from '../Input/Input';\nimport { DropdownIcon } from '../DropdownIcon/DropdownIcon';\nimport { Footnote } from '../Typography/Footnote/Footnote';\nimport { warnOnce } from '../../lib/warnOnce';\nimport { defaultFilterFn, getFormFieldModeFromSelectType } from '../../lib/select';\nimport { CustomSelectDropdown } from '../CustomSelectDropdown/CustomSelectDropdown';\nimport { useIsomorphicLayoutEffect } from '../../lib/useIsomorphicLayoutEffect';\n\nvar findIndexAfter = function findIndexAfter() {\n  var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  var startIndex = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : -1;\n\n  if (startIndex >= options.length - 1) {\n    return -1;\n  }\n\n  return options.findIndex(function (option, i) {\n    return i > startIndex && !option.disabled;\n  });\n};\n\nvar findIndexBefore = function findIndexBefore() {\n  var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  var endIndex = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : options.length;\n  var result = -1;\n\n  if (endIndex <= 0) {\n    return result;\n  }\n\n  for (var i = endIndex - 1; i >= 0; i--) {\n    var _option = options[i];\n\n    if (!_option.disabled) {\n      result = i;\n      break;\n    }\n  }\n\n  return result;\n};\n\nvar warn = warnOnce('CustomSelect');\n\nvar checkOptionsValueType = function checkOptionsValueType(options) {\n  if (new Set(options.map(function (item) {\n    return _typeof(item.value);\n  })).size > 1) {\n    warn('Некоторые значения ваших опций имеют разные типы. onChange всегда возвращает строковый тип.', 'error');\n  }\n};\n\nfunction defaultRenderOptionFn(_ref) {\n  var option = _ref.option,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(CustomSelectOption, props);\n}\n\nvar handleOptionDown = function handleOptionDown(e) {\n  e.preventDefault();\n};\n\nfunction findSelectedIndex(options, value) {\n  var _options$findIndex;\n\n  return (_options$findIndex = options.findIndex(function (item) {\n    value = typeof item.value === 'number' ? Number(value) : value;\n    return item.value === value;\n  })) !== null && _options$findIndex !== void 0 ? _options$findIndex : -1;\n}\n\nvar filter = function filter(options, inputValue, filterFn) {\n  return typeof filterFn === 'function' ? options.filter(function (option) {\n    return filterFn(inputValue, option);\n  }) : options;\n};\n\nvar defaultOptions = [];\n/**\n * @see https://vkcom.github.io/VKUI/#/CustomSelect\n */\n\nexport function CustomSelect(props) {\n  var _props$value, _props$value2;\n\n  var _React$useState = React.useState(false),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      opened = _React$useState2[0],\n      setOpened = _React$useState2[1];\n\n  var before = props.before,\n      name = props.name,\n      className = props.className,\n      getRef = props.getRef,\n      getRootRef = props.getRootRef,\n      popupDirection = props.popupDirection,\n      style = props.style,\n      onChange = props.onChange,\n      children = props.children,\n      onInputChangeProp = props.onInputChange,\n      renderDropdown = props.renderDropdown,\n      onOpen = props.onOpen,\n      onClose = props.onClose,\n      fetching = props.fetching,\n      forceDropdownPortal = props.forceDropdownPortal,\n      _props$selectType = props.selectType,\n      selectType = _props$selectType === void 0 ? 'default' : _props$selectType,\n      autoHideScrollbar = props.autoHideScrollbar,\n      autoHideScrollbarDelay = props.autoHideScrollbarDelay,\n      _props$searchable = props.searchable,\n      searchable = _props$searchable === void 0 ? false : _props$searchable,\n      _props$renderOption = props.renderOption,\n      renderOptionProp = _props$renderOption === void 0 ? defaultRenderOptionFn : _props$renderOption,\n      _props$options = props.options,\n      optionsProp = _props$options === void 0 ? defaultOptions : _props$options,\n      _props$emptyText = props.emptyText,\n      emptyText = _props$emptyText === void 0 ? 'Ничего не найдено' : _props$emptyText,\n      _props$filterFn = props.filterFn,\n      filterFn = _props$filterFn === void 0 ? defaultFilterFn : _props$filterFn,\n      _props$icon = props.icon,\n      icon = _props$icon === void 0 ? /*#__PURE__*/React.createElement(DropdownIcon, {\n    opened: opened\n  }) : _props$icon,\n      _props$dropdownOffset = props.dropdownOffsetDistance,\n      dropdownOffsetDistance = _props$dropdownOffset === void 0 ? 0 : _props$dropdownOffset,\n      _props$fixDropdownWid = props.fixDropdownWidth,\n      fixDropdownWidth = _props$fixDropdownWid === void 0 ? true : _props$fixDropdownWid,\n      restProps = _objectWithoutProperties(props, _excluded2);\n\n  if (process.env.NODE_ENV === 'development') {\n    checkOptionsValueType(optionsProp);\n  }\n\n  var containerRef = React.useRef(null);\n  var scrollBoxRef = React.useRef(null);\n  var selectElRef = React.useRef(null);\n\n  var _React$useState3 = React.useState(-1),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      focusedOptionIndex = _React$useState4[0],\n      setFocusedOptionIndex = _React$useState4[1];\n\n  var _React$useState5 = React.useState(props.value !== undefined),\n      _React$useState6 = _slicedToArray(_React$useState5, 2),\n      isControlledOutside = _React$useState6[0],\n      setIsControlledOutside = _React$useState6[1];\n\n  var _React$useState7 = React.useState(''),\n      _React$useState8 = _slicedToArray(_React$useState7, 2),\n      inputValue = _React$useState8[0],\n      setInputValue = _React$useState8[1];\n\n  var _React$useState9 = React.useState((_props$value = props.value) !== null && _props$value !== void 0 ? _props$value : props.defaultValue),\n      _React$useState10 = _slicedToArray(_React$useState9, 2),\n      nativeSelectValue = _React$useState10[0],\n      setNativeSelectValue = _React$useState10[1];\n\n  var _React$useState11 = React.useState(''),\n      _React$useState12 = _slicedToArray(_React$useState11, 2),\n      keyboardInput = _React$useState12[0],\n      setKeyboardInput = _React$useState12[1];\n\n  var _React$useState13 = React.useState(undefined),\n      _React$useState14 = _slicedToArray(_React$useState13, 2),\n      popperPlacement = _React$useState14[0],\n      setPopperPlacement = _React$useState14[1];\n\n  var _React$useState15 = React.useState(optionsProp),\n      _React$useState16 = _slicedToArray(_React$useState15, 2),\n      options = _React$useState16[0],\n      setOptions = _React$useState16[1];\n\n  var _React$useState17 = React.useState(findSelectedIndex(optionsProp, (_props$value2 = props.value) !== null && _props$value2 !== void 0 ? _props$value2 : props.defaultValue)),\n      _React$useState18 = _slicedToArray(_React$useState17, 2),\n      selectedOptionIndex = _React$useState18[0],\n      setSelectedOptionIndex = _React$useState18[1];\n\n  React.useEffect(function () {\n    setIsControlledOutside(props.value !== undefined);\n    setNativeSelectValue(function (nativeSelectValue) {\n      var _props$value3;\n\n      return (_props$value3 = props.value) !== null && _props$value3 !== void 0 ? _props$value3 : nativeSelectValue;\n    });\n  }, [props.value]);\n  useIsomorphicLayoutEffect(function () {\n    if (nativeSelectValue !== undefined) {\n      var _selectElRef$current;\n\n      var _event = new Event('change', {\n        bubbles: true\n      });\n\n      (_selectElRef$current = selectElRef.current) === null || _selectElRef$current === void 0 ? void 0 : _selectElRef$current.dispatchEvent(_event);\n    }\n  }, [nativeSelectValue]);\n  var selected = React.useMemo(function () {\n    if (!options.length) {\n      return null;\n    }\n\n    return selectedOptionIndex !== undefined ? options[selectedOptionIndex] : undefined;\n  }, [options, selectedOptionIndex]);\n  var openedClassNames = React.useMemo(function () {\n    return classNames(opened && dropdownOffsetDistance === 0 && (popperPlacement !== null && popperPlacement !== void 0 && popperPlacement.includes('top') ? \"vkuiCustomSelect--pop-up\" : \"vkuiCustomSelect--pop-down\"));\n  }, [dropdownOffsetDistance, opened, popperPlacement]);\n  var resetKeyboardInput = React.useCallback(function () {\n    setKeyboardInput('');\n  }, []);\n  var scrollToElement = React.useCallback(function (index) {\n    var center = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n    var dropdown = scrollBoxRef.current;\n    var item = dropdown ? dropdown.children[index] : null;\n\n    if (!item || !dropdown) {\n      return;\n    }\n\n    var dropdownHeight = dropdown.offsetHeight;\n    var scrollTop = dropdown.scrollTop;\n    var itemTop = item.offsetTop;\n    var itemHeight = item.offsetHeight;\n\n    if (center) {\n      dropdown.scrollTop = itemTop - dropdownHeight / 2 + itemHeight / 2;\n    } else if (itemTop + itemHeight > dropdownHeight + scrollTop) {\n      dropdown.scrollTop = itemTop - dropdownHeight + itemHeight;\n    } else if (itemTop < scrollTop) {\n      dropdown.scrollTop = itemTop;\n    }\n  }, []);\n  var isValidIndex = React.useCallback(function (index) {\n    var _options$length;\n\n    return index >= 0 && index < ((_options$length = options.length) !== null && _options$length !== void 0 ? _options$length : 0);\n  }, [options.length]);\n  var focusOptionByIndex = React.useCallback(function (index) {\n    var _options$length2;\n\n    var scrollTo = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n\n    if (index === undefined || index < 0 || index > ((_options$length2 = options.length) !== null && _options$length2 !== void 0 ? _options$length2 : 0) - 1) {\n      return;\n    }\n\n    var option = options[index];\n\n    if (option !== null && option !== void 0 && option.disabled) {\n      return;\n    }\n\n    if (scrollTo) {\n      scrollToElement(index);\n    } // Это оптимизация, прежде всего, под `onMouseOver`\n\n\n    setFocusedOptionIndex(function (focusedOptionIndex) {\n      return focusedOptionIndex !== index ? index : focusedOptionIndex;\n    });\n  }, [options, scrollToElement]);\n  var areOptionsShown = React.useCallback(function () {\n    return scrollBoxRef.current !== null;\n  }, []);\n  var setScrollBoxRef = React.useCallback(function (ref) {\n    scrollBoxRef.current = ref;\n\n    if (ref && selectedOptionIndex !== undefined && isValidIndex(selectedOptionIndex)) {\n      {\n        scrollToElement(selectedOptionIndex, true);\n      }\n    }\n  }, [isValidIndex, scrollToElement, selectedOptionIndex]);\n  var onKeyboardInput = React.useCallback(function (key) {\n    var fullInput = keyboardInput + key;\n    var optionIndex = options.findIndex(function (option) {\n      return getTitleFromChildren(option.label).toLowerCase().includes(fullInput);\n    });\n\n    if (optionIndex !== undefined && optionIndex > -1) {\n      focusOptionByIndex(optionIndex);\n    }\n\n    setKeyboardInput(fullInput);\n  }, [focusOptionByIndex, keyboardInput, options]);\n  /**\n   * Note: сбрасывать `options` через `setOptions(optionsProp)` не нужно.\n   *  Сброс происходит в одном из эффекте `updateOptionsAndSelectedOptionIndex()`.\n   */\n\n  var close = React.useCallback(function () {\n    resetKeyboardInput();\n    setInputValue('');\n    setOpened(false);\n    setFocusedOptionIndex(-1);\n    onClose === null || onClose === void 0 ? void 0 : onClose();\n  }, [onClose, resetKeyboardInput]);\n  var selectFocused = React.useCallback(function () {\n    if (focusedOptionIndex !== undefined && isValidIndex(focusedOptionIndex)) {\n      var item = options[focusedOptionIndex];\n      setNativeSelectValue(item === null || item === void 0 ? void 0 : item.value);\n      close();\n    }\n  }, [close, focusedOptionIndex, isValidIndex, options]);\n  var open = React.useCallback(function () {\n    setOpened(true);\n    setFocusedOptionIndex(selectedOptionIndex);\n\n    if (typeof onOpen === 'function') {\n      onOpen();\n    }\n  }, [onOpen, selectedOptionIndex]);\n  var onBlur = React.useCallback(function () {\n    var _selectElRef$current2;\n\n    close();\n    var event = new Event('blur');\n    (_selectElRef$current2 = selectElRef.current) === null || _selectElRef$current2 === void 0 ? void 0 : _selectElRef$current2.dispatchEvent(event);\n  }, [close]);\n  var resetFocusedOption = React.useCallback(function () {\n    setFocusedOptionIndex(-1);\n  }, []);\n  var onFocus = React.useCallback(function () {\n    var _selectElRef$current3;\n\n    var event = new Event('focus');\n    (_selectElRef$current3 = selectElRef.current) === null || _selectElRef$current3 === void 0 ? void 0 : _selectElRef$current3.dispatchEvent(event);\n  }, []);\n  var onClick = React.useCallback(function () {\n    if (opened) {\n      close();\n    } else {\n      open();\n    }\n  }, [close, open, opened]);\n  var handleKeyUp = React.useMemo(function () {\n    return debounce(resetKeyboardInput, 1000);\n  }, [resetKeyboardInput]);\n  var focusOption = React.useCallback(function (type) {\n    var index = focusedOptionIndex;\n\n    if (type === 'next') {\n      var nextIndex = findIndexAfter(options, index);\n      index = nextIndex === -1 ? findIndexAfter(options) : nextIndex; // Следующий за index или первый валидный до index\n    } else if (type === 'prev') {\n      var beforeIndex = findIndexBefore(options, index);\n      index = beforeIndex === -1 ? findIndexBefore(options) : beforeIndex; // Предшествующий index или последний валидный после index\n    }\n\n    focusOptionByIndex(index);\n  }, [focusOptionByIndex, focusedOptionIndex, options]);\n  React.useEffect(function updateOptionsAndSelectedOptionIndex() {\n    var _ref2, _props$value4;\n\n    var value = (_ref2 = (_props$value4 = props.value) !== null && _props$value4 !== void 0 ? _props$value4 : nativeSelectValue) !== null && _ref2 !== void 0 ? _ref2 : props.defaultValue;\n    var options = searchable && inputValue !== undefined ? filter(optionsProp, inputValue, filterFn) : optionsProp;\n    setOptions(options);\n    setSelectedOptionIndex(findSelectedIndex(options, value));\n  }, [filterFn, inputValue, nativeSelectValue, optionsProp, props.defaultValue, props.value, searchable]);\n  /**\n   * Нужен для правильного поведения обработчика onClick на select. Фильтрует клики, которые были сделаны по\n   * выпадающему списку.\n   */\n\n  var onLabelClick = React.useCallback(function (e) {\n    var _scrollBoxRef$current;\n\n    if ((_scrollBoxRef$current = scrollBoxRef.current) !== null && _scrollBoxRef$current !== void 0 && _scrollBoxRef$current.contains(e.target)) {\n      e.preventDefault();\n    }\n  }, []);\n\n  var onNativeSelectChange = function onNativeSelectChange(e) {\n    var newSelectedOptionIndex = findSelectedIndex(options, e.currentTarget.value);\n\n    if (selectedOptionIndex !== newSelectedOptionIndex) {\n      if (!isControlledOutside) {\n        setSelectedOptionIndex(newSelectedOptionIndex);\n      }\n\n      onChange === null || onChange === void 0 ? void 0 : onChange(e);\n    }\n  };\n\n  var onInputKeyDown = React.useCallback(function (event) {\n    ['ArrowUp', 'ArrowDown', 'Escape', 'Enter'].includes(event.key) && areOptionsShown() && event.preventDefault();\n\n    switch (event.key) {\n      case 'ArrowUp':\n        areOptionsShown() && focusOption('prev');\n        break;\n\n      case 'ArrowDown':\n        areOptionsShown() && focusOption('next');\n        break;\n\n      case 'Escape':\n        close();\n        break;\n\n      case 'Enter':\n        areOptionsShown() && selectFocused();\n        break;\n    }\n  }, [areOptionsShown, close, focusOption, selectFocused]);\n  var onInputChange = React.useCallback(function (e) {\n    // TODO v6 удалить `onInputChangeProp`.\n    if (onInputChangeProp) {\n      var _options = onInputChangeProp(e, optionsProp);\n\n      if (_options) {\n        if (process.env.NODE_ENV === 'development') {\n          warn('Этот метод фильтрации устарел. Возвращаемое значение onInputChange будет ' + 'проигнорировано в v6.0.0. Для фильтрации обновляйте props.options самостоятельно или используйте свойство filterFn.');\n        }\n\n        setOptions(_options);\n        setSelectedOptionIndex(findSelectedIndex(_options, nativeSelectValue));\n      }\n    } else {\n      var _options2 = filter(optionsProp, e.target.value, filterFn);\n\n      setOptions(_options2);\n      setSelectedOptionIndex(findSelectedIndex(_options2, nativeSelectValue));\n    }\n\n    setInputValue(e.target.value);\n  }, [filterFn, nativeSelectValue, onInputChangeProp, optionsProp]);\n  var handleKeyDownSelect = React.useCallback(function (event) {\n    if (event.key.length === 1 && event.key !== ' ') {\n      onKeyboardInput(event.key);\n      return;\n    }\n\n    ['ArrowUp', 'ArrowDown', 'Escape', 'Enter'].includes(event.key) && areOptionsShown() && event.preventDefault();\n\n    switch (event.key) {\n      case 'ArrowUp':\n        if (opened) {\n          areOptionsShown() && focusOption('prev');\n        } else {\n          open();\n        }\n\n        break;\n\n      case 'ArrowDown':\n        if (opened) {\n          areOptionsShown() && focusOption('next');\n        } else {\n          open();\n        }\n\n        break;\n\n      case 'Escape':\n        close();\n        break;\n\n      case 'Enter':\n      case 'Spacebar':\n      case ' ':\n        if (opened) {\n          areOptionsShown() && selectFocused();\n        } else {\n          open();\n        }\n\n        break;\n    }\n  }, [areOptionsShown, close, focusOption, onKeyboardInput, open, opened, selectFocused]);\n  var handleOptionClick = React.useCallback(function (e) {\n    var _e$currentTarget$pare;\n\n    var index = Array.prototype.indexOf.call((_e$currentTarget$pare = e.currentTarget.parentNode) === null || _e$currentTarget$pare === void 0 ? void 0 : _e$currentTarget$pare.children, e.currentTarget);\n    var option = options[index];\n\n    if (option && !option.disabled) {\n      selectFocused();\n    }\n  }, [options, selectFocused]);\n  var handleOptionHover = React.useCallback(function (e) {\n    var _e$currentTarget$pare2;\n\n    focusOptionByIndex(Array.prototype.indexOf.call((_e$currentTarget$pare2 = e.currentTarget.parentNode) === null || _e$currentTarget$pare2 === void 0 ? void 0 : _e$currentTarget$pare2.children, e.currentTarget), false);\n  }, [focusOptionByIndex]);\n  var renderOption = React.useCallback(function (option, index) {\n    var hovered = index === focusedOptionIndex;\n    var selected = index === selectedOptionIndex;\n    return /*#__PURE__*/React.createElement(React.Fragment, {\n      key: \"\".concat(option.value)\n    }, renderOptionProp({\n      option: option,\n      hovered: hovered,\n      children: option.label,\n      selected: selected,\n      disabled: option.disabled,\n      onClick: handleOptionClick,\n      onMouseDown: handleOptionDown,\n      // Используем `onMouseOver` вместо `onMouseEnter`.\n      // При параметре `searchable`, обновляется \"ребёнок\", из-за чего `onMouseEnter` не срабатывает в следующих кейсах:\n      //  1. До загрузки выпадающего списка, курсор мышки находится над произвольным элементом этого списка.\n      //     > Лечение: только увод курсора мыши и возвращении его обратно вызывает событие `onMouseEnter` на этот элемент.\n      //  2. Если это тач-устройство.\n      //     > Лечение: нужно нажать на какой-нибудь произвольный элемент списка, после чего `onMouseEnter` будет работать на соседние элементы,\n      //     но не на тот, на который нажали в первый раз.\n      // Более подробно по ссылке https://github.com/facebook/react/issues/13956#issuecomment-1082055744\n      onMouseOver: handleOptionHover\n    }));\n  }, [focusedOptionIndex, handleOptionClick, handleOptionHover, renderOptionProp, selectedOptionIndex]);\n  var resolvedContent = React.useMemo(function () {\n    var defaultDropdownContent = (options === null || options === void 0 ? void 0 : options.length) > 0 ? options.map(renderOption) : /*#__PURE__*/React.createElement(Footnote, {\n      className: \"vkuiCustomSelect__empty\"\n    }, emptyText);\n\n    if (typeof renderDropdown === 'function') {\n      return renderDropdown({\n        defaultDropdownContent: defaultDropdownContent\n      });\n    } else {\n      return defaultDropdownContent;\n    }\n  }, [emptyText, options, renderDropdown, renderOption]);\n  return /*#__PURE__*/React.createElement(\"label\", {\n    className: classNames(\"vkuiCustomSelect\", className),\n    style: style,\n    ref: multiRef(containerRef, getRootRef),\n    onClick: onLabelClick\n  }, opened && searchable ? /*#__PURE__*/React.createElement(Input, _extends({}, restProps, {\n    autoFocus: true,\n    onBlur: onBlur,\n    className: openedClassNames,\n    value: inputValue,\n    onKeyDown: onInputKeyDown,\n    onChange: onInputChange // TODO Ожидается, что клик поймает нативный select, но его перехватывает Input. К сожалению, это приводит к конфликтам типизации.\n    // TODO Нужно перестать пытаться превратить CustomSelect в select. Тогда эта проблема уйдёт.\n    // @ts-expect-error: TS2322 MouseEventHandler<HTMLSelectElement> !== MouseEventHandler<HTMLInputElement>\n    ,\n    onClick: props.onClick,\n    before: before,\n    after: icon,\n    placeholder: restProps.placeholder,\n    mode: getFormFieldModeFromSelectType(selectType)\n  })) : /*#__PURE__*/React.createElement(SelectMimicry, _extends({}, restProps, {\n    \"aria-hidden\": true,\n    onClick: onClick,\n    onKeyDown: handleKeyDownSelect,\n    onKeyUp: handleKeyUp,\n    onFocus: onFocus,\n    onBlur: onBlur,\n    className: openedClassNames,\n    after: icon,\n    selectType: selectType\n  }), selected === null || selected === void 0 ? void 0 : selected.label), /*#__PURE__*/React.createElement(\"select\", {\n    ref: selectElRef,\n    name: name,\n    onChange: onNativeSelectChange,\n    onBlur: props.onBlur,\n    onFocus: props.onFocus,\n    onClick: props.onClick,\n    value: nativeSelectValue,\n    \"aria-hidden\": true,\n    className: \"vkuiCustomSelect__control\"\n  }, optionsProp.map(function (item) {\n    return /*#__PURE__*/React.createElement(\"option\", {\n      key: \"\".concat(item.value),\n      value: item.value\n    });\n  })), opened && /*#__PURE__*/React.createElement(CustomSelectDropdown, {\n    targetRef: containerRef,\n    placement: popupDirection,\n    scrollBoxRef: setScrollBoxRef,\n    onPlacementChange: setPopperPlacement,\n    onMouseLeave: resetFocusedOption,\n    fetching: fetching,\n    offsetDistance: dropdownOffsetDistance,\n    sameWidth: fixDropdownWidth,\n    forcePortal: forceDropdownPortal,\n    autoHideScrollbar: autoHideScrollbar,\n    autoHideScrollbarDelay: autoHideScrollbarDelay,\n    observableRefs: scrollBoxRef\n  }, resolvedContent));\n}","map":{"version":3,"mappings":"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","names":["React","SelectMimicry","debounce","multiRef","getTitleFromChildren","classNames","CustomSelectOption","Input","DropdownIcon","Footnote","warnOnce","defaultFilterFn","getFormFieldModeFromSelectType","CustomSelectDropdown","useIsomorphicLayoutEffect","findIndexAfter","options","startIndex","length","findIndex","option","i","disabled","findIndexBefore","endIndex","result","warn","checkOptionsValueType","Set","map","item","value","size","defaultRenderOptionFn","_ref","props","handleOptionDown","e","preventDefault","findSelectedIndex","Number","_options$findIndex","filter","inputValue","filterFn","defaultOptions","CustomSelect","useState","_React$useState2","opened","setOpened","before","name","className","getRef","getRootRef","popupDirection","style","onChange","children","onInputChangeProp","onInputChange","renderDropdown","onOpen","onClose","fetching","forceDropdownPortal","_props$selectType","selectType","autoHideScrollbar","autoHideScrollbarDelay","_props$searchable","searchable","_props$renderOption","renderOption","renderOptionProp","_props$options","optionsProp","_props$emptyText","emptyText","_props$filterFn","_props$icon","icon","_props$dropdownOffset","dropdownOffsetDistance","_props$fixDropdownWid","fixDropdownWidth","restProps","_excluded2","process","env","NODE_ENV","containerRef","useRef","scrollBoxRef","selectElRef","_React$useState4","focusedOptionIndex","setFocusedOptionIndex","undefined","_React$useState6","isControlledOutside","setIsControlledOutside","_React$useState8","setInputValue","_props$value","defaultValue","_React$useState10","nativeSelectValue","setNativeSelectValue","_React$useState12","keyboardInput","setKeyboardInput","_React$useState14","popperPlacement","setPopperPlacement","_React$useState16","setOptions","_props$value2","_React$useState18","selectedOptionIndex","setSelectedOptionIndex","useEffect","_props$value3","event","Event","bubbles","current","_selectElRef$current","dispatchEvent","selected","useMemo","openedClassNames","includes","resetKeyboardInput","useCallback","scrollToElement","index","center","dropdown","dropdownHeight","offsetHeight","scrollTop","itemTop","offsetTop","itemHeight","isValidIndex","_options$length","focusOptionByIndex","scrollTo","_options$length2","areOptionsShown","setScrollBoxRef","ref","onKeyboardInput","key","fullInput","optionIndex","label","toLowerCase","close","selectFocused","open","onBlur","_selectElRef$current2","resetFocusedOption","onFocus","_selectElRef$current3","onClick","handleKeyUp","focusOption","type","nextIndex","beforeIndex","updateOptionsAndSelectedOptionIndex","_props$value4","_ref2","onLabelClick","_scrollBoxRef$current","contains","target","onNativeSelectChange","newSelectedOptionIndex","currentTarget","onInputKeyDown","handleKeyDownSelect","handleOptionClick","Array","prototype","indexOf","call","parentNode","_e$currentTarget$pare","handleOptionHover","_e$currentTarget$pare2","hovered","Fragment","onMouseDown","onMouseOver","resolvedContent","defaultDropdownContent","_extends","autoFocus","onKeyDown","after","placeholder","mode","onKeyUp","targetRef","placement","onPlacementChange","onMouseLeave","offsetDistance","sameWidth","forcePortal","observableRefs"],"sources":["/Users/pitus_anonimous/Desktop/youth_bit_hack/youth_bit_vk/node_modules/@vkontakte/vkui/src/components/CustomSelect/CustomSelect.tsx"],"sourcesContent":["import * as React from 'react';\nimport { SelectMimicry } from '../SelectMimicry/SelectMimicry';\nimport { debounce, multiRef, getTitleFromChildren } from '../../lib/utils';\nimport { classNames } from '@vkontakte/vkjs';\nimport { NativeSelectProps } from '../NativeSelect/NativeSelect';\nimport {\n  CustomSelectOption,\n  CustomSelectOptionProps,\n} from '../CustomSelectOption/CustomSelectOption';\nimport { FormFieldProps } from '../FormField/FormField';\nimport { Input } from '../Input/Input';\nimport { DropdownIcon } from '../DropdownIcon/DropdownIcon';\nimport { Footnote } from '../Typography/Footnote/Footnote';\nimport { warnOnce } from '../../lib/warnOnce';\nimport { defaultFilterFn, getFormFieldModeFromSelectType } from '../../lib/select';\nimport { Placement } from '../Popper/Popper';\nimport { CustomSelectDropdown } from '../CustomSelectDropdown/CustomSelectDropdown';\nimport { TrackerOptionsProps } from '../CustomScrollView/useTrackerVisibility';\nimport { SelectType } from '../Select/Select';\nimport { useIsomorphicLayoutEffect } from '../../lib/useIsomorphicLayoutEffect';\nimport styles from './CustomSelect.module.css';\n\nconst findIndexAfter = (options: CustomSelectOptionInterface[] = [], startIndex = -1) => {\n  if (startIndex >= options.length - 1) {\n    return -1;\n  }\n  return options.findIndex((option, i) => i > startIndex && !option.disabled);\n};\n\nconst findIndexBefore = (\n  options: CustomSelectOptionInterface[] = [],\n  endIndex: number = options.length,\n) => {\n  let result = -1;\n  if (endIndex <= 0) {\n    return result;\n  }\n  for (let i = endIndex - 1; i >= 0; i--) {\n    let option = options[i];\n\n    if (!option.disabled) {\n      result = i;\n      break;\n    }\n  }\n  return result;\n};\n\nconst warn = warnOnce('CustomSelect');\n\nconst checkOptionsValueType = (options: CustomSelectOptionInterface[]) => {\n  if (new Set(options.map((item) => typeof item.value)).size > 1) {\n    warn(\n      'Некоторые значения ваших опций имеют разные типы. onChange всегда возвращает строковый тип.',\n      'error',\n    );\n  }\n};\n\nfunction defaultRenderOptionFn({ option, ...props }: CustomSelectOptionProps): React.ReactNode {\n  return <CustomSelectOption {...props} />;\n}\n\nconst handleOptionDown: MouseEventHandler = (e: React.MouseEvent<HTMLElement>) => {\n  e.preventDefault();\n};\n\nfunction findSelectedIndex(options: CustomSelectOptionInterface[], value: SelectValue) {\n  return (\n    options.findIndex((item) => {\n      value = typeof item.value === 'number' ? Number(value) : value;\n      return item.value === value;\n    }) ?? -1\n  );\n}\n\nconst filter = (\n  options: SelectProps['options'],\n  inputValue: string,\n  filterFn: SelectProps['filterFn'],\n) => {\n  return typeof filterFn === 'function'\n    ? options.filter((option) => filterFn(inputValue, option))\n    : options;\n};\n\nconst defaultOptions: CustomSelectOptionInterface[] = [];\n\ntype SelectValue = React.SelectHTMLAttributes<HTMLSelectElement>['value'];\n\nexport interface CustomSelectOptionInterface {\n  value: SelectValue;\n  label: React.ReactElement | string;\n  disabled?: boolean;\n  [index: string]: any;\n}\n\nexport interface SelectProps extends NativeSelectProps, FormFieldProps, TrackerOptionsProps {\n  /**\n   * Если `true`, то при клике на селект в нём появится текстовое поле для поиска по `options`. По умолчанию поиск\n   * производится по `option.label`.\n   */\n  searchable?: boolean;\n  /**\n   * Текст, который будет отображен, если приходит пустой `options`.\n   */\n  emptyText?: string;\n  /**\n   * > ⚠️ В v6 из возвращаемых типов будет удалён `CustomSelectOptionInterface[]`. Для кастомной фильтрации используйте\n   * > `filterFn`.\n   */\n  onInputChange?: (\n    e: React.ChangeEvent,\n    options: CustomSelectOptionInterface[],\n  ) => void | CustomSelectOptionInterface[];\n  options: CustomSelectOptionInterface[];\n  /**\n   * Функция для кастомной фильтрации. По умолчанию поиск производится по `option.label`.\n   */\n  filterFn?:\n    | false\n    | ((\n        value: string,\n        option: CustomSelectOptionInterface,\n        getOptionLabel?: (option: Partial<CustomSelectOptionInterface>) => string,\n      ) => boolean);\n  popupDirection?: 'top' | 'bottom';\n  /**\n   * Рендер-проп для кастомного рендера опции.\n   * В объекте аргумента приходят [свойства опции](https://vkcom.github.io/VKUI/#/CustomSelectOption?id=props)\n   */\n  renderOption?: (props: CustomSelectOptionProps) => React.ReactNode;\n  /**\n   * Рендер-проп для кастомного рендера содержимого дропдауна.\n   * В `defaultDropdownContent` содержится список опций в виде скроллящегося блока.\n   */\n  renderDropdown?: ({\n    defaultDropdownContent,\n  }: {\n    defaultDropdownContent: React.ReactNode;\n  }) => React.ReactNode;\n  /**\n   * Если `true`, то в дропдауне вместо списка опций рисуется спиннер. При переданных `renderDropdown` и `fetching: true`\n   * \"победит\" `renderDropdown`.\n   */\n  fetching?: boolean;\n  onClose?: VoidFunction;\n  onOpen?: VoidFunction;\n  icon?: React.ReactNode;\n  dropdownOffsetDistance?: number;\n  fixDropdownWidth?: boolean;\n  forceDropdownPortal?: boolean;\n  selectType?: SelectType;\n}\n\ntype MouseEventHandler = (event: React.MouseEvent<HTMLElement>) => void;\n\n/**\n * @see https://vkcom.github.io/VKUI/#/CustomSelect\n */\nexport function CustomSelect(props: SelectProps) {\n  const [opened, setOpened] = React.useState(false);\n  const {\n    before,\n    name,\n    className,\n    getRef,\n    getRootRef,\n    popupDirection,\n    style,\n    onChange,\n    children,\n    onInputChange: onInputChangeProp,\n    renderDropdown,\n    onOpen,\n    onClose,\n    fetching,\n    forceDropdownPortal,\n    selectType = 'default',\n    autoHideScrollbar,\n    autoHideScrollbarDelay,\n    searchable = false,\n    renderOption: renderOptionProp = defaultRenderOptionFn,\n    options: optionsProp = defaultOptions,\n    emptyText = 'Ничего не найдено',\n    filterFn = defaultFilterFn,\n    icon = <DropdownIcon opened={opened} />,\n    dropdownOffsetDistance = 0,\n    fixDropdownWidth = true,\n    ...restProps\n  } = props;\n\n  if (process.env.NODE_ENV === 'development') {\n    checkOptionsValueType(optionsProp);\n  }\n\n  const containerRef = React.useRef<HTMLLabelElement>(null);\n  const scrollBoxRef = React.useRef<HTMLDivElement | null>(null);\n  const selectElRef = React.useRef<HTMLSelectElement>(null);\n\n  const [focusedOptionIndex, setFocusedOptionIndex] = React.useState<number | undefined>(-1);\n  const [isControlledOutside, setIsControlledOutside] = React.useState(props.value !== undefined);\n  const [inputValue, setInputValue] = React.useState('');\n  const [nativeSelectValue, setNativeSelectValue] = React.useState(\n    props.value ?? props.defaultValue,\n  );\n  const [keyboardInput, setKeyboardInput] = React.useState('');\n  const [popperPlacement, setPopperPlacement] = React.useState<Placement | undefined>(undefined);\n  const [options, setOptions] = React.useState(optionsProp);\n  const [selectedOptionIndex, setSelectedOptionIndex] = React.useState<number | undefined>(\n    findSelectedIndex(optionsProp, props.value ?? props.defaultValue),\n  );\n\n  React.useEffect(() => {\n    setIsControlledOutside(props.value !== undefined);\n    setNativeSelectValue((nativeSelectValue) => props.value ?? nativeSelectValue);\n  }, [props.value]);\n\n  useIsomorphicLayoutEffect(() => {\n    if (nativeSelectValue !== undefined) {\n      const event = new Event('change', { bubbles: true });\n\n      selectElRef.current?.dispatchEvent(event);\n    }\n  }, [nativeSelectValue]);\n\n  const selected = React.useMemo(() => {\n    if (!options.length) {\n      return null;\n    }\n\n    return selectedOptionIndex !== undefined ? options[selectedOptionIndex] : undefined;\n  }, [options, selectedOptionIndex]);\n\n  const openedClassNames = React.useMemo(\n    () =>\n      classNames(\n        opened &&\n          dropdownOffsetDistance === 0 &&\n          (popperPlacement?.includes('top')\n            ? styles['CustomSelect--pop-up']\n            : styles['CustomSelect--pop-down']),\n      ),\n    [dropdownOffsetDistance, opened, popperPlacement],\n  );\n\n  const resetKeyboardInput = React.useCallback(() => {\n    setKeyboardInput('');\n  }, []);\n\n  const scrollToElement = React.useCallback((index: number, center = false) => {\n    const dropdown = scrollBoxRef.current;\n    const item = dropdown ? (dropdown.children[index] as HTMLElement) : null;\n\n    if (!item || !dropdown) {\n      return;\n    }\n\n    const dropdownHeight = dropdown.offsetHeight;\n    const scrollTop = dropdown.scrollTop;\n    const itemTop = item.offsetTop;\n    const itemHeight = item.offsetHeight;\n\n    if (center) {\n      dropdown.scrollTop = itemTop - dropdownHeight / 2 + itemHeight / 2;\n    } else if (itemTop + itemHeight > dropdownHeight + scrollTop) {\n      dropdown.scrollTop = itemTop - dropdownHeight + itemHeight;\n    } else if (itemTop < scrollTop) {\n      dropdown.scrollTop = itemTop;\n    }\n  }, []);\n\n  const isValidIndex = React.useCallback(\n    (index: number) => {\n      return index >= 0 && index < (options.length ?? 0);\n    },\n    [options.length],\n  );\n\n  const focusOptionByIndex = React.useCallback(\n    (index: number | undefined, scrollTo = true) => {\n      if (index === undefined || index < 0 || index > (options.length ?? 0) - 1) {\n        return;\n      }\n\n      const option = options[index];\n\n      if (option?.disabled) {\n        return;\n      }\n\n      if (scrollTo) {\n        scrollToElement(index);\n      }\n\n      // Это оптимизация, прежде всего, под `onMouseOver`\n      setFocusedOptionIndex((focusedOptionIndex) =>\n        focusedOptionIndex !== index ? index : focusedOptionIndex,\n      );\n    },\n    [options, scrollToElement],\n  );\n\n  const areOptionsShown = React.useCallback(() => {\n    return scrollBoxRef.current !== null;\n  }, []);\n\n  const setScrollBoxRef = React.useCallback(\n    (ref: HTMLDivElement | null) => {\n      scrollBoxRef.current = ref;\n\n      if (ref && selectedOptionIndex !== undefined && isValidIndex(selectedOptionIndex)) {\n        {\n          scrollToElement(selectedOptionIndex, true);\n        }\n      }\n    },\n    [isValidIndex, scrollToElement, selectedOptionIndex],\n  );\n\n  const onKeyboardInput = React.useCallback(\n    (key: string) => {\n      const fullInput = keyboardInput + key;\n\n      const optionIndex = options.findIndex((option) => {\n        return getTitleFromChildren(option.label).toLowerCase().includes(fullInput);\n      });\n\n      if (optionIndex !== undefined && optionIndex > -1) {\n        focusOptionByIndex(optionIndex);\n      }\n\n      setKeyboardInput(fullInput);\n    },\n    [focusOptionByIndex, keyboardInput, options],\n  );\n\n  /**\n   * Note: сбрасывать `options` через `setOptions(optionsProp)` не нужно.\n   *  Сброс происходит в одном из эффекте `updateOptionsAndSelectedOptionIndex()`.\n   */\n  const close = React.useCallback(() => {\n    resetKeyboardInput();\n\n    setInputValue('');\n    setOpened(false);\n    setFocusedOptionIndex(-1);\n    onClose?.();\n  }, [onClose, resetKeyboardInput]);\n\n  const selectFocused = React.useCallback(() => {\n    if (focusedOptionIndex !== undefined && isValidIndex(focusedOptionIndex)) {\n      const item = options[focusedOptionIndex];\n\n      setNativeSelectValue(item?.value);\n      close();\n    }\n  }, [close, focusedOptionIndex, isValidIndex, options]);\n\n  const open = React.useCallback(() => {\n    setOpened(true);\n    setFocusedOptionIndex(selectedOptionIndex);\n\n    if (typeof onOpen === 'function') {\n      onOpen();\n    }\n  }, [onOpen, selectedOptionIndex]);\n\n  const onBlur = React.useCallback(() => {\n    close();\n    const event = new Event('blur');\n    selectElRef.current?.dispatchEvent(event);\n  }, [close]);\n\n  const resetFocusedOption = React.useCallback(() => {\n    setFocusedOptionIndex(-1);\n  }, []);\n\n  const onFocus = React.useCallback(() => {\n    const event = new Event('focus');\n    selectElRef.current?.dispatchEvent(event);\n  }, []);\n\n  const onClick = React.useCallback(() => {\n    if (opened) {\n      close();\n    } else {\n      open();\n    }\n  }, [close, open, opened]);\n\n  const handleKeyUp = React.useMemo(() => debounce(resetKeyboardInput, 1000), [resetKeyboardInput]);\n\n  const focusOption = React.useCallback(\n    (type: 'next' | 'prev') => {\n      let index = focusedOptionIndex;\n\n      if (type === 'next') {\n        const nextIndex = findIndexAfter(options, index);\n        index = nextIndex === -1 ? findIndexAfter(options) : nextIndex; // Следующий за index или первый валидный до index\n      } else if (type === 'prev') {\n        const beforeIndex = findIndexBefore(options, index);\n        index = beforeIndex === -1 ? findIndexBefore(options) : beforeIndex; // Предшествующий index или последний валидный после index\n      }\n\n      focusOptionByIndex(index);\n    },\n    [focusOptionByIndex, focusedOptionIndex, options],\n  );\n\n  React.useEffect(\n    function updateOptionsAndSelectedOptionIndex() {\n      const value = props.value ?? nativeSelectValue ?? props.defaultValue;\n\n      const options =\n        searchable && inputValue !== undefined\n          ? filter(optionsProp, inputValue, filterFn)\n          : optionsProp;\n\n      setOptions(options);\n      setSelectedOptionIndex(findSelectedIndex(options, value));\n    },\n    [\n      filterFn,\n      inputValue,\n      nativeSelectValue,\n      optionsProp,\n      props.defaultValue,\n      props.value,\n      searchable,\n    ],\n  );\n\n  /**\n   * Нужен для правильного поведения обработчика onClick на select. Фильтрует клики, которые были сделаны по\n   * выпадающему списку.\n   */\n  const onLabelClick = React.useCallback((e: React.MouseEvent<HTMLLabelElement>) => {\n    if (scrollBoxRef.current?.contains(e.target as Node)) {\n      e.preventDefault();\n    }\n  }, []);\n\n  const onNativeSelectChange: React.ChangeEventHandler<HTMLSelectElement> = (e) => {\n    const newSelectedOptionIndex = findSelectedIndex(options, e.currentTarget.value);\n\n    if (selectedOptionIndex !== newSelectedOptionIndex) {\n      if (!isControlledOutside) {\n        setSelectedOptionIndex(newSelectedOptionIndex);\n      }\n      onChange?.(e);\n    }\n  };\n\n  const onInputKeyDown: React.KeyboardEventHandler<HTMLInputElement> = React.useCallback(\n    (event) => {\n      ['ArrowUp', 'ArrowDown', 'Escape', 'Enter'].includes(event.key) &&\n        areOptionsShown() &&\n        event.preventDefault();\n\n      switch (event.key) {\n        case 'ArrowUp':\n          areOptionsShown() && focusOption('prev');\n          break;\n        case 'ArrowDown':\n          areOptionsShown() && focusOption('next');\n          break;\n        case 'Escape':\n          close();\n          break;\n        case 'Enter':\n          areOptionsShown() && selectFocused();\n          break;\n      }\n    },\n    [areOptionsShown, close, focusOption, selectFocused],\n  );\n\n  const onInputChange: React.ChangeEventHandler<HTMLInputElement> = React.useCallback(\n    (e) => {\n      // TODO v6 удалить `onInputChangeProp`.\n      if (onInputChangeProp) {\n        const options = onInputChangeProp(e, optionsProp);\n        if (options) {\n          if (process.env.NODE_ENV === 'development') {\n            warn(\n              'Этот метод фильтрации устарел. Возвращаемое значение onInputChange будет ' +\n                'проигнорировано в v6.0.0. Для фильтрации обновляйте props.options самостоятельно или используйте свойство filterFn.',\n            );\n          }\n          setOptions(options);\n          setSelectedOptionIndex(findSelectedIndex(options, nativeSelectValue));\n        }\n      } else {\n        const options = filter(optionsProp, e.target.value, filterFn);\n        setOptions(options);\n        setSelectedOptionIndex(findSelectedIndex(options, nativeSelectValue));\n      }\n      setInputValue(e.target.value);\n    },\n    [filterFn, nativeSelectValue, onInputChangeProp, optionsProp],\n  );\n\n  const handleKeyDownSelect = React.useCallback(\n    (event: React.KeyboardEvent) => {\n      if (event.key.length === 1 && event.key !== ' ') {\n        onKeyboardInput(event.key);\n        return;\n      }\n\n      ['ArrowUp', 'ArrowDown', 'Escape', 'Enter'].includes(event.key) &&\n        areOptionsShown() &&\n        event.preventDefault();\n\n      switch (event.key) {\n        case 'ArrowUp':\n          if (opened) {\n            areOptionsShown() && focusOption('prev');\n          } else {\n            open();\n          }\n          break;\n        case 'ArrowDown':\n          if (opened) {\n            areOptionsShown() && focusOption('next');\n          } else {\n            open();\n          }\n          break;\n        case 'Escape':\n          close();\n          break;\n        case 'Enter':\n        case 'Spacebar':\n        case ' ':\n          if (opened) {\n            areOptionsShown() && selectFocused();\n          } else {\n            open();\n          }\n          break;\n      }\n    },\n    [areOptionsShown, close, focusOption, onKeyboardInput, open, opened, selectFocused],\n  );\n\n  const handleOptionClick = React.useCallback(\n    (e: React.MouseEvent<HTMLElement>) => {\n      const index = Array.prototype.indexOf.call(\n        e.currentTarget.parentNode?.children,\n        e.currentTarget,\n      );\n      const option = options[index];\n\n      if (option && !option.disabled) {\n        selectFocused();\n      }\n    },\n    [options, selectFocused],\n  );\n\n  const handleOptionHover = React.useCallback(\n    (e: React.MouseEvent<HTMLElement>) => {\n      focusOptionByIndex(\n        Array.prototype.indexOf.call(e.currentTarget.parentNode?.children, e.currentTarget),\n        false,\n      );\n    },\n    [focusOptionByIndex],\n  );\n\n  const renderOption = React.useCallback(\n    (option: CustomSelectOptionInterface, index: number) => {\n      const hovered = index === focusedOptionIndex;\n      const selected = index === selectedOptionIndex;\n\n      return (\n        <React.Fragment key={`${option.value}`}>\n          {renderOptionProp({\n            option,\n            hovered,\n            children: option.label,\n            selected,\n            disabled: option.disabled,\n            onClick: handleOptionClick,\n            onMouseDown: handleOptionDown,\n            // Используем `onMouseOver` вместо `onMouseEnter`.\n            // При параметре `searchable`, обновляется \"ребёнок\", из-за чего `onMouseEnter` не срабатывает в следующих кейсах:\n            //  1. До загрузки выпадающего списка, курсор мышки находится над произвольным элементом этого списка.\n            //     > Лечение: только увод курсора мыши и возвращении его обратно вызывает событие `onMouseEnter` на этот элемент.\n            //  2. Если это тач-устройство.\n            //     > Лечение: нужно нажать на какой-нибудь произвольный элемент списка, после чего `onMouseEnter` будет работать на соседние элементы,\n            //     но не на тот, на который нажали в первый раз.\n            // Более подробно по ссылке https://github.com/facebook/react/issues/13956#issuecomment-1082055744\n            onMouseOver: handleOptionHover,\n          })}\n        </React.Fragment>\n      );\n    },\n    [\n      focusedOptionIndex,\n      handleOptionClick,\n      handleOptionHover,\n      renderOptionProp,\n      selectedOptionIndex,\n    ],\n  );\n\n  const resolvedContent = React.useMemo(() => {\n    const defaultDropdownContent =\n      options?.length > 0 ? (\n        options.map(renderOption)\n      ) : (\n        <Footnote className={styles['CustomSelect__empty']}>{emptyText}</Footnote>\n      );\n\n    if (typeof renderDropdown === 'function') {\n      return renderDropdown({ defaultDropdownContent });\n    } else {\n      return defaultDropdownContent;\n    }\n  }, [emptyText, options, renderDropdown, renderOption]);\n\n  return (\n    <label\n      className={classNames(styles['CustomSelect'], className)}\n      style={style}\n      ref={multiRef(containerRef, getRootRef)}\n      onClick={onLabelClick}\n    >\n      {opened && searchable ? (\n        <Input\n          {...restProps}\n          autoFocus\n          onBlur={onBlur}\n          className={openedClassNames}\n          value={inputValue}\n          onKeyDown={onInputKeyDown}\n          onChange={onInputChange}\n          // TODO Ожидается, что клик поймает нативный select, но его перехватывает Input. К сожалению, это приводит к конфликтам типизации.\n          // TODO Нужно перестать пытаться превратить CustomSelect в select. Тогда эта проблема уйдёт.\n          // @ts-expect-error: TS2322 MouseEventHandler<HTMLSelectElement> !== MouseEventHandler<HTMLInputElement>\n          onClick={props.onClick}\n          before={before}\n          after={icon}\n          placeholder={restProps.placeholder}\n          mode={getFormFieldModeFromSelectType(selectType)}\n        />\n      ) : (\n        <SelectMimicry\n          {...restProps}\n          aria-hidden\n          onClick={onClick}\n          onKeyDown={handleKeyDownSelect}\n          onKeyUp={handleKeyUp}\n          onFocus={onFocus}\n          onBlur={onBlur}\n          className={openedClassNames}\n          after={icon}\n          selectType={selectType}\n        >\n          {selected?.label}\n        </SelectMimicry>\n      )}\n      <select\n        ref={selectElRef}\n        name={name}\n        onChange={onNativeSelectChange}\n        onBlur={props.onBlur}\n        onFocus={props.onFocus}\n        onClick={props.onClick}\n        value={nativeSelectValue}\n        aria-hidden\n        className={styles['CustomSelect__control']}\n      >\n        {optionsProp.map((item) => (\n          <option key={`${item.value}`} value={item.value} />\n        ))}\n      </select>\n      {opened && (\n        <CustomSelectDropdown\n          targetRef={containerRef}\n          placement={popupDirection}\n          scrollBoxRef={setScrollBoxRef}\n          onPlacementChange={setPopperPlacement}\n          onMouseLeave={resetFocusedOption}\n          fetching={fetching}\n          offsetDistance={dropdownOffsetDistance}\n          sameWidth={fixDropdownWidth}\n          forcePortal={forceDropdownPortal}\n          autoHideScrollbar={autoHideScrollbar}\n          autoHideScrollbarDelay={autoHideScrollbarDelay}\n          observableRefs={scrollBoxRef}\n        >\n          {resolvedContent}\n        </CustomSelectDropdown>\n      )}\n    </label>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}