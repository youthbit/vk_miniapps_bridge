{"ast":null,"code":"export function getSizeYClassName(base) {\n  var sizeY = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'none';\n  var\n  /**\n   * Note: ввиду того, что Typescript не поддерживает `typescript-plugin-css-modules` во время компиляции,\n   *  не удалось покрыть дженерик типом параметр `styles`. Поэтому может вернуться undefined.\n   */\n  styles = arguments.length > 2 ? arguments[2] : undefined;\n  var sizeYClassName = \"\".concat(String(base), \"--sizeY-\").concat(sizeY);\n  return styles ? styles[sizeYClassName] : sizeYClassName;\n}","map":{"version":3,"mappings":"AAUA,OAAO,SAASA,iBAAT,CACLC,IADK,EAQe;EAAA,IANpBC,KAAgB,uEAAG,MAMC;EANK;EACzB;AACF;AACA;AACA;EACEC,MAAe,kDALU;EAOzB,IAAMC,cAAc,aAAMC,MAAM,CAACJ,IAAD,CAAZ,EAAkB,UAAlB,EAAkBK,MAAlB,CAA6BJ,KAA7B,CAApB;EACA,OAAOC,MAAM,GAAGA,MAAM,CAACC,cAAD,CAAT,GAA4BA,cAAzC;AACF","names":["getSizeYClassName","base","sizeY","styles","sizeYClassName","String","concat"],"sources":["/Users/pitus_anonimous/Desktop/youth_bit_hack/youth_bit_vk/node_modules/@vkontakte/vkui/src/helpers/getSizeYClassName.ts"],"sourcesContent":["import { SizeType } from '../lib/adaptivity';\n\ntype SizeYType = SizeType | 'none';\n\nexport function getSizeYClassName(base: string, sizeY?: SizeYType): string;\nexport function getSizeYClassName<Styles extends Record<string, string>>(\n  base: keyof Styles,\n  sizeY?: SizeYType,\n  styles?: Styles,\n): string | undefined;\nexport function getSizeYClassName<Styles extends Record<string, string>>(\n  base: keyof Styles,\n  sizeY: SizeYType = 'none',\n  /**\n   * Note: ввиду того, что Typescript не поддерживает `typescript-plugin-css-modules` во время компиляции,\n   *  не удалось покрыть дженерик типом параметр `styles`. Поэтому может вернуться undefined.\n   */\n  styles?: Styles,\n): string | undefined {\n  const sizeYClassName = `${String(base)}--sizeY-${sizeY}`;\n  return styles ? styles[sizeYClassName] : sizeYClassName;\n}\n"]},"metadata":{},"sourceType":"module"}