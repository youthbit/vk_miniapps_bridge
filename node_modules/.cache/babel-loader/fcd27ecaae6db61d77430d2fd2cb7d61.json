{"ast":null,"code":"export var Scheme;\n\n(function (Scheme) {\n  Scheme[\"BRIGHT_LIGHT\"] = \"bright_light\";\n  Scheme[\"SPACE_GRAY\"] = \"space_gray\";\n  Scheme[\"VKCOM_LIGHT\"] = \"vkcom_light\";\n  Scheme[\"VKCOM_DARK\"] = \"vkcom_dark\";\n})(Scheme || (Scheme = {}));\n\nexport var Appearance;\n\n(function (Appearance) {\n  Appearance[\"DARK\"] = \"dark\";\n  Appearance[\"LIGHT\"] = \"light\";\n})(Appearance || (Appearance = {}));\n\nexport var deriveAppearance = function deriveAppearance(scheme) {\n  return scheme === Scheme.SPACE_GRAY || scheme === Scheme.VKCOM_DARK ? 'dark' : 'light';\n};\nexport function resolveAppearance(data) {\n  var scheme = data.scheme,\n      appearance = data.appearance; // appearance пока приходит только на IOS и ANDROID\n\n  if (appearance) {\n    return appearance;\n  } // Проверяем scheme если appearance не пришел\n\n\n  return deriveAppearance(scheme);\n}","map":{"version":3,"mappings":"AAEA,WAAYA,MAAZ;;AAKC,WALWA,MAKX,EALiB;EAANA,MAAM,gBAANA,GAAM,cAANA;EAAAA,MAAM,cAANA,GAAM,YAANA;EAAAA,MAAM,eAANA,GAAM,aAANA;EAAAA,MAAM,cAANA,GAAM,YAANA;AAAM,CAKjB,EALWA,MAAM,KAANA,MAAM,MAKjB;;AAID,WAAYC,UAAZ;;AAGC,WAHWA,UAGX,EAHqB;EAAVA,UAAU,QAAVA,GAAU,MAAVA;EAAAA,UAAU,SAAVA,GAAU,OAAVA;AAAU,CAGrB,EAHWA,UAAU,KAAVA,UAAU,MAGrB;;AAED,OAAO,IAAMC,gBAAgB,GAAG,SAAnBA,gBAAmB,CAACC,MAAD,EAAqC;EAAA,OACnEA,MAAM,KAAKH,MAAM,CAACI,UAAlBD,IAAgCA,MAAM,KAAKH,MAAM,CAACK,UAAlDF,GAA+D,MAA/DA,GAAwE,OADL;AACY,CAD1E;AAQP,OAAO,SAASG,iBAAT,CAA2BC,IAA3B,EAA4E;EACjF,IAAQJ,MAAM,GAAiBI,IAAI,CAA3BJ,MAAR;EAAA,IAAgBK,UAAU,GAAKD,IAAI,CAAnBC,UAAhB,CADiF,CAGjF;;EACA,IAAIA,UAAJ,EAAgB;IACd,OAAOA,UAAP;EACF,CANiF,CAQjF;;;EACA,OAAON,gBAAgB,CAACC,MAAD,CAAvB;AACF","names":["Scheme","Appearance","deriveAppearance","scheme","SPACE_GRAY","VKCOM_DARK","resolveAppearance","data","appearance"],"sources":["/Users/pitus_anonimous/Desktop/youth_bit_hack/youth_bit_vk/node_modules/@vkontakte/vkui/src/helpers/appearance.ts"],"sourcesContent":["import { AppearanceSchemeType, AppearanceType } from '@vkontakte/vk-bridge';\n\nexport enum Scheme {\n  BRIGHT_LIGHT = 'bright_light',\n  SPACE_GRAY = 'space_gray',\n  VKCOM_LIGHT = 'vkcom_light',\n  VKCOM_DARK = 'vkcom_dark',\n}\n\nexport type AppearanceScheme = AppearanceSchemeType | Scheme.VKCOM_DARK | Scheme.VKCOM_LIGHT;\n\nexport enum Appearance {\n  DARK = 'dark',\n  LIGHT = 'light',\n}\n\nexport const deriveAppearance = (scheme: AppearanceScheme | undefined): AppearanceType =>\n  scheme === Scheme.SPACE_GRAY || scheme === Scheme.VKCOM_DARK ? 'dark' : 'light';\n\nexport interface VKBridgeConfigData {\n  appearance?: AppearanceType;\n  scheme: AppearanceScheme;\n}\n\nexport function resolveAppearance(data: VKBridgeConfigData): AppearanceType | null {\n  const { scheme, appearance } = data;\n\n  // appearance пока приходит только на IOS и ANDROID\n  if (appearance) {\n    return appearance;\n  }\n\n  // Проверяем scheme если appearance не пришел\n  return deriveAppearance(scheme);\n}\n"]},"metadata":{},"sourceType":"module"}