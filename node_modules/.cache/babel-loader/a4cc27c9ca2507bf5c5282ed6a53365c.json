{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport * as React from 'react';\nimport { clamp } from '../helpers/math';\nimport { rangeIncrement } from '../helpers/range';\n/**\n * Хук позаимствован у @mui с некоторыми изменениями.\n *  [usePagination.js](https://github.com/mui/material-ui/blob/master/packages/mui-material/src/usePagination/usePagination.js).\n *\n * Примеры вывода:\n *           v\n * [1, 2, 3, 4, 5, 'end-ellipsis', 10]\n *                          v\n * [1, 'start-ellipsis', 4, 5, 6, 'end-ellipsis', 10]\n *                          v\n * [1, 'start-ellipsis', 6, 7, 8, 9, 10]\n */\n\nexport var usePagination = function usePagination() {\n  var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n      _ref$currentPage = _ref.currentPage,\n      currentPage = _ref$currentPage === void 0 ? 1 : _ref$currentPage,\n      _ref$siblingCount = _ref.siblingCount,\n      siblingCount = _ref$siblingCount === void 0 ? 1 : _ref$siblingCount,\n      _ref$boundaryCount = _ref.boundaryCount,\n      boundaryCount = _ref$boundaryCount === void 0 ? 1 : _ref$boundaryCount,\n      _ref$totalPages = _ref.totalPages,\n      endPage = _ref$totalPages === void 0 ? 1 : _ref$totalPages;\n\n  return React.useMemo(function () {\n    var startPages = rangeIncrement(1, Math.min(boundaryCount, endPage));\n    var endPages = rangeIncrement(Math.max(endPage - boundaryCount + 1, boundaryCount + 1), endPage);\n    var lowerBoundaryWhenCurrentPageHigh = endPage - boundaryCount - 1 - 2 * siblingCount;\n    var siblingsStart = clamp(currentPage - siblingCount, boundaryCount + 2, lowerBoundaryWhenCurrentPageHigh);\n    var upperBoundaryWhenCurrentPageLow = boundaryCount + 2 + 2 * siblingCount;\n    var siblingsEnd = Math.min(Math.max(currentPage + siblingCount, upperBoundaryWhenCurrentPageLow), endPages.length > 0 ? endPages[0] - 2 : endPage - 1);\n    var pages = startPages;\n\n    if (siblingsStart > boundaryCount + 2) {\n      pages.push('start-ellipsis');\n    } else if (boundaryCount + 1 < endPage - boundaryCount) {\n      pages.push(boundaryCount + 1);\n    }\n\n    pages.push.apply(pages, _toConsumableArray(rangeIncrement(siblingsStart, siblingsEnd)));\n\n    if (siblingsEnd < endPage - boundaryCount - 1) {\n      pages.push('end-ellipsis');\n    } else if (endPage - boundaryCount > boundaryCount) {\n      pages.push(endPage - boundaryCount);\n    }\n\n    pages.push.apply(pages, _toConsumableArray(endPages));\n    return pages;\n  }, [currentPage, endPage, siblingCount, boundaryCount]);\n};","map":{"version":3,"mappings":";AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,KAAT,QAAsB,iBAAtB;AACA,SAASC,cAAT,QAA+B,kBAA/B;AAyBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,GAAH;EAAA,+EAKF,EALE;EAAA,IAKAC,wBAJxBC,WADwB;EAAA,IACxBA,WAAW,iCAAG,CAAH,GAAID,gBADS;EAAA,IACTE,yBACfC,YAFwB;EAAA,IAExBA,YAAY,kCAAG,CAAH,GAAID,iBAFQ;EAAA,IAERE,0BAChBC,aAHwB;EAAA,IAGxBA,aAAa,mCAAG,CAAH,GAAID,kBAHO;EAAA,IAGPE,uBACjBC,UAJwB;EAAA,IAIZC,OAAO,gCAAG,CAAH,GAAIF,eAJC;;EAID,OAEvBV,KAAK,CAACa,OAANb,CAAc,YAAM;IAClB,IAAMc,UAAU,GAAGZ,cAAc,CAAC,CAAD,EAAIa,IAAI,CAACC,GAALD,CAASN,aAATM,EAAwBH,OAAxBG,CAAJ,CAAjC;IACA,IAAME,QAAQ,GAAGf,cAAc,CAC7Ba,IAAI,CAACG,GAALH,CAASH,OAAO,GAAGH,aAAVG,GAA0B,CAAnCG,EAAsCN,aAAa,GAAG,CAAtDM,CAD6B,EAE7BH,OAF6B,CAA/B;IAKA,IAAMO,gCAAgC,GAAGP,OAAO,GAAGH,aAAVG,GAA0B,CAA1BA,GAA8B,IAAIL,YAA3E;IACA,IAAMa,aAAa,GAAGnB,KAAK,CACzBI,WAAW,GAAGE,YADW,EAEzBE,aAAa,GAAG,CAFS,EAGzBU,gCAHyB,CAA3B;IAMA,IAAME,+BAA+B,GAAGZ,aAAa,GAAG,CAAhBA,GAAoB,IAAIF,YAAhE;IACA,IAAMe,WAAW,GAAGP,IAAI,CAACC,GAALD,CAClBA,IAAI,CAACG,GAALH,CAASV,WAAW,GAAGE,YAAvBQ,EAAqCM,+BAArCN,CADkBA,EAElBE,QAAQ,CAACM,MAATN,GAAkB,CAAlBA,GAAsBA,QAAQ,CAAC,CAAD,CAARA,GAAc,CAApCA,GAAwCL,OAAO,GAAG,CAFhCG,CAApB;IAKA,IAAMS,KAA0B,GAAGV,UAAnC;;IAEA,IAAIM,aAAa,GAAGX,aAAa,GAAG,CAApC,EAAuC;MACrCe,KAAK,CAACC,IAAND,CAAW,gBAAXA;IACD,CAFD,MAEO,IAAIf,aAAa,GAAG,CAAhBA,GAAoBG,OAAO,GAAGH,aAAlC,EAAiD;MACtDe,KAAK,CAACC,IAAND,CAAWf,aAAa,GAAG,CAA3Be;IACF;;IAEAA,KAAK,CAACC,IAAND,CAAUE,KAAVF,QAAKG,mBAASzB,cAAc,CAACkB,aAAD,EAAgBE,WAAhB,CAAvB,CAALE;;IAEA,IAAIF,WAAW,GAAGV,OAAO,GAAGH,aAAVG,GAA0B,CAA5C,EAA+C;MAC7CY,KAAK,CAACC,IAAND,CAAW,cAAXA;IACD,CAFD,MAEO,IAAIZ,OAAO,GAAGH,aAAVG,GAA0BH,aAA9B,EAA6C;MAClDe,KAAK,CAACC,IAAND,CAAWZ,OAAO,GAAGH,aAArBe;IACF;;IAEAA,KAAK,CAACC,IAAND,CAAUE,KAAVF,QAAKG,mBAASV,QAAT,CAALO;IAEA,OAAOA,KAAP;EACD,CAvCDxB,EAuCG,CAACK,WAAD,EAAcO,OAAd,EAAuBL,YAAvB,EAAqCE,aAArC,CAvCHT,CAFuB;AAyCgC,CA7ClD","names":["React","clamp","rangeIncrement","usePagination","_ref$currentPage","currentPage","_ref$siblingCount","siblingCount","_ref$boundaryCount","boundaryCount","_ref$totalPages","totalPages","endPage","useMemo","startPages","Math","min","endPages","max","lowerBoundaryWhenCurrentPageHigh","siblingsStart","upperBoundaryWhenCurrentPageLow","siblingsEnd","length","pages","push","apply","_toConsumableArray"],"sources":["/Users/pitus_anonimous/Desktop/youth_bit_hack/youth_bit_vk/node_modules/@vkontakte/vkui/src/hooks/usePagination.ts"],"sourcesContent":["import * as React from 'react';\nimport { clamp } from '../helpers/math';\nimport { rangeIncrement } from '../helpers/range';\n\ninterface UsePaginationProps {\n  /**\n   * Текущая страница.\n   */\n  currentPage?: number;\n  /**\n   * Кол-во всегда видимых страниц по краям текущей страницы.\n   */\n  siblingCount?: number;\n  /**\n   * Кол-во всегда видимых страниц в начале и в конце.\n   */\n  boundaryCount?: number;\n  /**\n   * Общее кол-во страниц.\n   */\n  totalPages?: number;\n}\n\nexport type PaginationPageType = 'start-ellipsis' | 'end-ellipsis' | number;\n\nexport type UsePaginationResult = PaginationPageType[];\n\n/**\n * Хук позаимствован у @mui с некоторыми изменениями.\n *  [usePagination.js](https://github.com/mui/material-ui/blob/master/packages/mui-material/src/usePagination/usePagination.js).\n *\n * Примеры вывода:\n *           v\n * [1, 2, 3, 4, 5, 'end-ellipsis', 10]\n *                          v\n * [1, 'start-ellipsis', 4, 5, 6, 'end-ellipsis', 10]\n *                          v\n * [1, 'start-ellipsis', 6, 7, 8, 9, 10]\n */\nexport const usePagination = ({\n  currentPage = 1,\n  siblingCount = 1,\n  boundaryCount = 1,\n  totalPages: endPage = 1,\n}: UsePaginationProps = {}): UsePaginationResult =>\n  React.useMemo(() => {\n    const startPages = rangeIncrement(1, Math.min(boundaryCount, endPage));\n    const endPages = rangeIncrement(\n      Math.max(endPage - boundaryCount + 1, boundaryCount + 1),\n      endPage,\n    );\n\n    const lowerBoundaryWhenCurrentPageHigh = endPage - boundaryCount - 1 - 2 * siblingCount;\n    const siblingsStart = clamp(\n      currentPage - siblingCount,\n      boundaryCount + 2,\n      lowerBoundaryWhenCurrentPageHigh,\n    );\n\n    const upperBoundaryWhenCurrentPageLow = boundaryCount + 2 + 2 * siblingCount;\n    const siblingsEnd = Math.min(\n      Math.max(currentPage + siblingCount, upperBoundaryWhenCurrentPageLow),\n      endPages.length > 0 ? endPages[0] - 2 : endPage - 1,\n    );\n\n    const pages: UsePaginationResult = startPages;\n\n    if (siblingsStart > boundaryCount + 2) {\n      pages.push('start-ellipsis');\n    } else if (boundaryCount + 1 < endPage - boundaryCount) {\n      pages.push(boundaryCount + 1);\n    }\n\n    pages.push(...rangeIncrement(siblingsStart, siblingsEnd));\n\n    if (siblingsEnd < endPage - boundaryCount - 1) {\n      pages.push('end-ellipsis');\n    } else if (endPage - boundaryCount > boundaryCount) {\n      pages.push(endPage - boundaryCount);\n    }\n\n    pages.push(...endPages);\n\n    return pages;\n  }, [currentPage, endPage, siblingCount, boundaryCount]);\n"]},"metadata":{},"sourceType":"module"}