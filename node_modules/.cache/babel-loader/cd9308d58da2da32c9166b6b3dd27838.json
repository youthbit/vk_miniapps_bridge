{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"onChange\", \"min\", \"max\", \"defaultValue\"];\nimport * as React from 'react';\nimport { clamp } from '../../helpers/math';\nimport { UniversalSlider } from '../RangeSlider/UniversalSlider';\n/**\n * @see https://vkcom.github.io/VKUI/#/Slider\n */\n\nexport var Slider = function Slider(_ref) {\n  var onChange = _ref.onChange,\n      _ref$min = _ref.min,\n      min = _ref$min === void 0 ? 0 : _ref$min,\n      _ref$max = _ref.max,\n      max = _ref$max === void 0 ? 100 : _ref$max,\n      _ref$defaultValue = _ref.defaultValue,\n      defaultValue = _ref$defaultValue === void 0 ? min : _ref$defaultValue,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  var isControlled = props.value !== undefined;\n\n  var _React$useState = React.useState(defaultValue),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      localValue = _React$useState2[0],\n      setValue = _React$useState2[1];\n\n  var _value = clamp(props.value || localValue, min, max);\n\n  var handleChange = React.useCallback(function (nextValue, event) {\n    if (props.disabled || _value === nextValue[1]) {\n      return;\n    }\n\n    !isControlled && setValue(nextValue[1]);\n    onChange && onChange(nextValue[1], event);\n  }, [props.disabled, _value, isControlled, onChange]);\n  var rangeValue = React.useMemo(function () {\n    return [null, _value];\n  }, [_value]);\n  return /*#__PURE__*/React.createElement(UniversalSlider, _extends({}, props, {\n    value: rangeValue,\n    onChange: handleChange,\n    min: min,\n    max: max\n  }));\n};","map":{"version":3,"mappings":";;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,KAAT,QAAsB,oBAAtB;AACA,SACEC,eADF,QAIO,gCAJP;AASA;AACA;AACA;;AACA,OAAO,IAAMC,MAAM,GAAG,SAATA,MAAS,CAAHC,IAAG,EAMH;EAAA,IALjBC,QAAQ,QAARA,QAKiB;EAAA,IALTC,gBACRC,GAIiB;EAAA,IAJjBA,GAAG,yBAAG,CAAH,GAAID,QAIU;EAAA,IAJVE,gBACPC,GAGiB;EAAA,IAHjBA,GAAG,yBAAG,GAAH,GAAMD,QAGQ;EAAA,IAHRE,yBACTC,YAEiB;EAAA,IAFjBA,YAAY,kCAAGJ,GAAH,GAAMG,iBAED;EAAA,IADdE,KAAK,4CACS;;EACjB,IAAMC,YAAY,GAAGD,KAAK,CAACE,KAANF,KAAgBG,SAArC;;EAEA,sBAA+Bf,KAAK,CAACgB,QAANhB,CAAeW,YAAfX,CAA/B;EAAA,IAA2DiB,qDAA3D;EAAA,IAAOC,UAAU,sBAAjB;EAAA,IAAmBC,QAAQ,sBAA3B;;EACA,IAAMC,MAAM,GAAGnB,KAAK,CAACW,KAAK,CAACE,KAANF,IAAeM,UAAhB,EAA4BX,GAA5B,EAAiCE,GAAjC,CAApB;;EAEA,IAAMY,YAA8D,GAAGrB,KAAK,CAACsB,WAANtB,CACrE,UAACuB,SAAD,EAA4BC,KAA5B,EAAkD;IAChD,IAAIZ,KAAK,CAACa,QAANb,IAAkBQ,MAAM,KAAKG,SAAS,CAAC,CAAD,CAA1C,EAA+C;MAC7C;IACF;;IACA,CAACV,YAAD,IAAiBM,QAAQ,CAACI,SAAS,CAAC,CAAD,CAAV,CAAzB;IACAlB,QAAQ,IAAIA,QAAQ,CAACkB,SAAS,CAAC,CAAD,CAAV,EAAeC,KAAf,CAApBnB;EACD,CAPoEL,EAQrE,CAACY,KAAK,CAACa,QAAP,EAAiBL,MAAjB,EAAyBP,YAAzB,EAAuCR,QAAvC,CARqEL,CAAvE;EAWA,IAAM0B,UAA0B,GAAG1B,KAAK,CAAC2B,OAAN3B,CAAc;IAAA,OAAM,CAAC,IAAD,EAAOoB,MAAP,CAAN;EAAoB,CAAlCpB,EAAoC,CAACoB,MAAD,CAApCpB,CAAnC;EACA,oBACEA,oBAACE,eAAD,EAAgB0B,aAAKhB,KAAL,EAAU;IAAEE,KAAK,EAAEY,UAAT;IAAqBrB,QAAQ,EAAEgB,YAA/B;IAA6Cd,GAAG,EAAEA,GAAlD;IAAuDE,GAAG,EAAEA;EAA5D,CAAV,CAAhB,CADF;AAGD,CA3BM","names":["React","clamp","UniversalSlider","Slider","_ref","onChange","_ref$min","min","_ref$max","max","_ref$defaultValue","defaultValue","props","isControlled","value","undefined","useState","_React$useState2","localValue","setValue","_value","handleChange","useCallback","nextValue","event","disabled","rangeValue","useMemo","_extends"],"sources":["/Users/pitus_anonimous/Desktop/youth_bit_hack/youth_bit_vk/node_modules/@vkontakte/vkui/src/components/Slider/Slider.tsx"],"sourcesContent":["import * as React from 'react';\nimport { clamp } from '../../helpers/math';\nimport {\n  UniversalSlider,\n  UniversalSliderProps,\n  UniversalValue,\n} from '../RangeSlider/UniversalSlider';\nimport { TouchEvent } from '../Touch/Touch';\n\nexport type SliderProps = UniversalSliderProps<number>;\n\n/**\n * @see https://vkcom.github.io/VKUI/#/Slider\n */\nexport const Slider = ({\n  onChange,\n  min = 0,\n  max = 100,\n  defaultValue = min,\n  ...props\n}: SliderProps) => {\n  const isControlled = props.value !== undefined;\n\n  const [localValue, setValue] = React.useState(defaultValue);\n  const _value = clamp(props.value || localValue, min, max);\n\n  const handleChange: UniversalSliderProps<UniversalValue>['onChange'] = React.useCallback(\n    (nextValue: UniversalValue, event: TouchEvent) => {\n      if (props.disabled || _value === nextValue[1]) {\n        return;\n      }\n      !isControlled && setValue(nextValue[1]);\n      onChange && onChange(nextValue[1], event);\n    },\n    [props.disabled, _value, isControlled, onChange],\n  );\n\n  const rangeValue: [null, number] = React.useMemo(() => [null, _value], [_value]);\n  return (\n    <UniversalSlider {...props} value={rangeValue} onChange={handleChange} min={min} max={max} />\n  );\n};\n"]},"metadata":{},"sourceType":"module"}