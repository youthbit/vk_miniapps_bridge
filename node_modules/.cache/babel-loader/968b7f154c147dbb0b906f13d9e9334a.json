{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"size\", \"direction\", \"onClick\", \"className\"];\nimport * as React from 'react';\nimport { Icon24Chevron, Icon24ChevronCompactLeft, Icon16Chevron, Icon16ChevronLeft } from '@vkontakte/icons';\nimport { classNames } from '@vkontakte/vkjs';\nimport { Tappable } from '../Tappable/Tappable';\nexport var HorizontalScrollArrow = function HorizontalScrollArrow(_ref) {\n  var _ref$size = _ref.size,\n      size = _ref$size === void 0 ? 'l' : _ref$size,\n      direction = _ref.direction,\n      onClick = _ref.onClick,\n      className = _ref.className,\n      restProps = _objectWithoutProperties(_ref, _excluded);\n\n  var ArrowIcon;\n\n  if (size === 'm') {\n    ArrowIcon = direction === 'left' ? Icon16ChevronLeft : Icon16Chevron;\n  } else {\n    ArrowIcon = direction === 'left' ? Icon24ChevronCompactLeft : Icon24Chevron;\n  }\n\n  return /*#__PURE__*/React.createElement(Tappable, _extends({}, restProps, {\n    Component: \"button\",\n    hasHover: false,\n    hasActive: false,\n    className: classNames(\"vkuiHorizontalScrollArrow\", styles[\"HorizontalScrollArrow--size-\".concat(size)], styles[\"HorizontalScrollArrow--direction-\".concat(direction)], className),\n    onClick: onClick\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"vkuiHorizontalScrollArrow__icon\"\n  }, /*#__PURE__*/React.createElement(ArrowIcon, null)));\n};\nvar styles = {\n  \"HorizontalScrollArrow--size-m\": \"vkuiHorizontalScrollArrow--size-m\",\n  \"HorizontalScrollArrow--size-l\": \"vkuiHorizontalScrollArrow--size-l\",\n  \"HorizontalScrollArrow--direction-left\": \"vkuiHorizontalScrollArrow--direction-left\",\n  \"HorizontalScrollArrow--direction-right\": \"vkuiHorizontalScrollArrow--direction-right\"\n};","map":{"version":3,"mappings":";;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SACEC,aADF,EAEEC,wBAFF,EAGEC,aAHF,EAIEC,iBAJF,QAKO,kBALP;AAMA,SAASC,UAAT,QAA2B,iBAA3B;AACA,SAASC,QAAT,QAAyB,sBAAzB;AAUA,OAAO,IAAMC,qBAAqB,GAAG,SAAxBA,qBAAwB,CAAHC,IAAG,EAMH;EAAA,qBALhCC,IAKgC;EAAA,IALhCA,IAAI,0BAAG,GAAH,GAAMC,SAKsB;EAAA,IAJhCC,SAAS,QAATA,SAIgC;EAAA,IAHhCC,OAAO,QAAPA,OAGgC;EAAA,IAFhCC,SAAS,QAATA,SAEgC;EAAA,IAD7BC,SAAS,4CACoB;;EAChC,IAAIC,SAAJ;;EAEA,IAAIN,IAAI,KAAK,GAAb,EAAkB;IAChBM,SAAS,GAAGJ,SAAS,KAAK,MAAdA,GAAuBP,iBAAvBO,GAA2CR,aAAvDY;EACD,CAFD,MAEO;IACLA,SAAS,GAAGJ,SAAS,KAAK,MAAdA,GAAuBT,wBAAvBS,GAAkDV,aAA9Dc;EACF;;EAEA,oBACEf,oBAACM,QAAD,EAASU,aACHF,SADG,EACM;IACbG,SAAS,EAAC,QADG;IAEbC,QAAQ,EAAE,KAFG;IAGbC,SAAS,EAAE,KAHE;IAIbN,SAAS,EAAER,UAAU,8BAEnBe,MAAM,uCAAgCX,IAAhC,EAFa,EAGnBW,MAAM,4CAAqCT,SAArC,EAHa,EAInBE,SAJmB,CAJR;IAUbD,OAAO,EAAEA;EAVI,CADN,CAAT,EAWmB,aAEjBZ;IAAMa,SAAS;EAAf,GAAuD,aACrDb,oBAACe,SAAD,EAAU,IAAV,CADF,CAbF,CADF;AAmBD,CAlCM;AAkCL;EAAA;EAAA;EAAA;EAAA;AAAA","names":["React","Icon24Chevron","Icon24ChevronCompactLeft","Icon16Chevron","Icon16ChevronLeft","classNames","Tappable","HorizontalScrollArrow","_ref","size","_ref$size","direction","onClick","className","restProps","ArrowIcon","_extends","Component","hasHover","hasActive","styles"],"sources":["/Users/pitus_anonimous/Desktop/youth_bit_hack/youth_bit_vk/node_modules/@vkontakte/vkui/src/components/HorizontalScroll/HorizontalScrollArrow.tsx"],"sourcesContent":["import * as React from 'react';\nimport {\n  Icon24Chevron,\n  Icon24ChevronCompactLeft,\n  Icon16Chevron,\n  Icon16ChevronLeft,\n} from '@vkontakte/icons';\nimport { classNames } from '@vkontakte/vkjs';\nimport { Tappable } from '../Tappable/Tappable';\nimport styles from './HorizontalScrollArrow.module.css';\n\nexport interface HorizontalScrollArrowProps {\n  direction: 'left' | 'right';\n  size?: 'm' | 'l';\n  onClick(event: React.MouseEvent): void;\n  className?: string;\n}\n\nexport const HorizontalScrollArrow = ({\n  size = 'l',\n  direction,\n  onClick,\n  className,\n  ...restProps\n}: HorizontalScrollArrowProps) => {\n  let ArrowIcon: React.ComponentType<unknown>;\n\n  if (size === 'm') {\n    ArrowIcon = direction === 'left' ? Icon16ChevronLeft : Icon16Chevron;\n  } else {\n    ArrowIcon = direction === 'left' ? Icon24ChevronCompactLeft : Icon24Chevron;\n  }\n\n  return (\n    <Tappable\n      {...restProps}\n      Component=\"button\"\n      hasHover={false}\n      hasActive={false}\n      className={classNames(\n        styles['HorizontalScrollArrow'],\n        styles[`HorizontalScrollArrow--size-${size}`],\n        styles[`HorizontalScrollArrow--direction-${direction}`],\n        className,\n      )}\n      onClick={onClick}\n    >\n      <span className={styles['HorizontalScrollArrow__icon']}>\n        <ArrowIcon />\n      </span>\n    </Tappable>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}