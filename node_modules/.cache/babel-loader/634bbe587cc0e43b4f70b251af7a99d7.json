{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _typeof from \"@babel/runtime/helpers/typeof\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"className\"],\n    _excluded2 = [\"children\", \"isShown\", \"offsetX\", \"offsetY\", \"alignX\", \"alignY\", \"onClose\", \"cornerOffset\", \"cornerAbsoluteOffset\", \"appearance\", \"arrow\", \"placement\"];\nimport * as React from 'react';\nimport ReactDOM from 'react-dom';\nimport { classNames, hasReactNode } from '@vkontakte/vkjs';\nimport { Subhead } from '../Typography/Subhead/Subhead';\nimport { useNavTransition } from '../NavTransitionContext/NavTransitionContext';\nimport { PopperArrow } from '../PopperArrow/PopperArrow';\nimport { usePopper } from 'react-popper';\nimport { tooltipContainerAttr } from './TooltipContainer';\nimport { useExternRef } from '../../hooks/useExternRef';\nimport { useDOM } from '../../lib/dom';\nimport { warnOnce } from '../../lib/warnOnce';\nimport { useGlobalEventListener } from '../../hooks/useGlobalEventListener';\n\nvar isDOMTypeElement = function isDOMTypeElement(element) {\n  return /*#__PURE__*/React.isValidElement(element) && typeof element.type === 'string';\n};\n\nvar warn = warnOnce('Tooltip');\nvar IS_DEV = process.env.NODE_ENV === 'development';\nvar SimpleTooltip = /*#__PURE__*/React.forwardRef(function SimpleTooltip(_ref, ref) {\n  var _attributes$container;\n\n  var _ref$appearance = _ref.appearance,\n      appearance = _ref$appearance === void 0 ? 'accent' : _ref$appearance,\n      header = _ref.header,\n      text = _ref.text,\n      arrow = _ref.arrow,\n      _ref$style = _ref.style,\n      popperStyles = _ref$style === void 0 ? {} : _ref$style,\n      attributes = _ref.attributes,\n      className = _ref.className;\n\n  var _ref2 = (_attributes$container = attributes === null || attributes === void 0 ? void 0 : attributes.container) !== null && _attributes$container !== void 0 ? _attributes$container : {},\n      containerClassName = _ref2.className,\n      restContainerAttributes = _objectWithoutProperties(_ref2, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classNames(\"vkuiTooltip\", styles[\"Tooltip--appearance-\".concat(appearance)], className)\n  }, /*#__PURE__*/React.createElement(\"div\", _extends({\n    className: classNames(\"vkuiTooltip__container\", containerClassName),\n    ref: ref,\n    style: popperStyles.container\n  }, restContainerAttributes), arrow && /*#__PURE__*/React.createElement(PopperArrow, {\n    style: popperStyles.arrow,\n    attributes: attributes === null || attributes === void 0 ? void 0 : attributes.arrow,\n    arrowClassName: \"vkuiTooltip__arrow\"\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"vkuiTooltip__content\"\n  }, header && /*#__PURE__*/React.createElement(Subhead, {\n    weight: \"2\",\n    className: \"vkuiTooltip__title\"\n  }, header), text && /*#__PURE__*/React.createElement(Subhead, {\n    className: \"vkuiTooltip__text\"\n  }, text))));\n});\n\nfunction mapAlignX(x) {\n  switch (x) {\n    case 'left':\n      return 'start';\n\n    case 'right':\n      return 'end';\n\n    default:\n      return '';\n  }\n}\n\nfunction getPlacement(alignX, alignY) {\n  return [alignY || 'bottom', mapAlignX(alignX || 'left')].filter(function (p) {\n    return !!p;\n  }).join('-');\n}\n\nfunction isVerticalPlacement(placement) {\n  return placement.startsWith('top') || placement.startsWith('bottom');\n}\n/**\n * @see https://vkcom.github.io/VKUI/#/Tooltip\n */\n\n\nexport var Tooltip = function Tooltip(_ref3) {\n  var _attributes$arrow, _attributes$popper;\n\n  var children = _ref3.children,\n      _ref3$isShown = _ref3.isShown,\n      _isShown = _ref3$isShown === void 0 ? true : _ref3$isShown,\n      _ref3$offsetX = _ref3.offsetX,\n      offsetX = _ref3$offsetX === void 0 ? 0 : _ref3$offsetX,\n      _ref3$offsetY = _ref3.offsetY,\n      offsetY = _ref3$offsetY === void 0 ? 15 : _ref3$offsetY,\n      alignX = _ref3.alignX,\n      alignY = _ref3.alignY,\n      onClose = _ref3.onClose,\n      _ref3$cornerOffset = _ref3.cornerOffset,\n      cornerOffset = _ref3$cornerOffset === void 0 ? 0 : _ref3$cornerOffset,\n      cornerAbsoluteOffset = _ref3.cornerAbsoluteOffset,\n      appearance = _ref3.appearance,\n      _ref3$arrow = _ref3.arrow,\n      arrow = _ref3$arrow === void 0 ? true : _ref3$arrow,\n      placement = _ref3.placement,\n      restProps = _objectWithoutProperties(_ref3, _excluded2);\n\n  var _useNavTransition = useNavTransition(),\n      entering = _useNavTransition.entering;\n\n  var isShown = _isShown && !entering;\n\n  var _React$useState = React.useState(null),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      tooltipRef = _React$useState2[0],\n      setTooltipRef = _React$useState2[1];\n\n  var _React$useState3 = React.useState(),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      target = _React$useState4[0],\n      setTarget = _React$useState4[1];\n\n  if (IS_DEV) {\n    var multiChildren = React.Children.count(children) > 1; // Empty children is a noop\n\n    var primitiveChild = hasReactNode(children) && _typeof(children) !== 'object';\n    (multiChildren || primitiveChild) && warn(['children должен быть одним React элементом, получено', multiChildren && 'несколько', primitiveChild && JSON.stringify(children)].filter(Boolean).join(' '), 'error');\n  }\n  /* eslint-disable no-restricted-properties */\n\n  /* eslint-disable @typescript-eslint/no-unnecessary-type-assertion*/\n\n\n  var tooltipContainer = React.useMemo(function () {\n    return target === null || target === void 0 ? void 0 : target.closest(\"[\".concat(tooltipContainerAttr, \"]\"));\n  }, [target]);\n  var strategy = React.useMemo(function () {\n    return (target === null || target === void 0 ? void 0 : target.style.position) === 'fixed' ? 'fixed' : 'absolute';\n  }, [target]);\n  /* eslint-enable @typescript-eslint/no-unnecessary-type-assertion*/\n\n  /* eslint-enable no-restricted-properties */\n\n  if (IS_DEV && target && !tooltipContainer) {\n    throw new Error('Use TooltipContainer for Tooltip outside Panel (see docs)');\n  }\n\n  var modifiers = React.useMemo(function () {\n    var modifiers = [{\n      name: 'offset',\n      options: {\n        offset: [offsetX, offsetY]\n      }\n    }, {\n      name: 'preventOverflow'\n    }, {\n      name: 'flip'\n    }];\n\n    if (arrow) {\n      modifiers.push({\n        name: 'arrow',\n        options: {\n          padding: 14\n        }\n      });\n      modifiers.push({\n        name: 'arrowOffset',\n        enabled: true,\n        phase: 'main',\n        fn: function fn(_ref4) {\n          var state = _ref4.state;\n\n          if (!state.modifiersData.arrow) {\n            return;\n          }\n\n          if (isVerticalPlacement(state.placement)) {\n            if (cornerAbsoluteOffset !== undefined) {\n              state.modifiersData.arrow.x = cornerAbsoluteOffset;\n            } else {\n              var _state$modifiersData$;\n\n              if (((_state$modifiersData$ = state.modifiersData.arrow) === null || _state$modifiersData$ === void 0 ? void 0 : _state$modifiersData$.x) !== undefined) {\n                state.modifiersData.arrow.x += cornerOffset;\n              }\n            }\n          } else {\n            if (cornerAbsoluteOffset !== undefined) {\n              state.modifiersData.arrow.y = cornerAbsoluteOffset;\n            } else {\n              var _state$modifiersData$2;\n\n              if (((_state$modifiersData$2 = state.modifiersData.arrow) === null || _state$modifiersData$2 === void 0 ? void 0 : _state$modifiersData$2.y) !== undefined) {\n                state.modifiersData.arrow.y += cornerOffset;\n              }\n            }\n          }\n        }\n      });\n    }\n\n    return modifiers;\n  }, [arrow, cornerAbsoluteOffset, cornerOffset, offsetX, offsetY]);\n\n  var _placement = placement !== null && placement !== void 0 ? placement : getPlacement(alignX, alignY);\n\n  var _usePopper = usePopper(target, tooltipRef, {\n    strategy: strategy,\n    placement: _placement,\n    modifiers: modifiers\n  }),\n      popperStyles = _usePopper.styles,\n      attributes = _usePopper.attributes;\n\n  var _useDOM = useDOM(),\n      document = _useDOM.document;\n\n  useGlobalEventListener(document, 'click', isShown && onClose, {\n    passive: true\n  }); // NOTE: setting isShown to true used to trigger usePopper().forceUpdate()\n\n  var childRef = isDOMTypeElement(children) ? children.ref : /*#__PURE__*/React.isValidElement(children) ? children.props.getRootRef : null;\n  var patchedRef = useExternRef(setTarget, childRef);\n  var child = /*#__PURE__*/React.isValidElement(children) ? /*#__PURE__*/React.cloneElement(children, _defineProperty({}, isDOMTypeElement(children) ? 'ref' : 'getRootRef', patchedRef)) : children;\n  return /*#__PURE__*/React.createElement(React.Fragment, null, child, isShown && target != null && /*#__PURE__*/ReactDOM.createPortal( /*#__PURE__*/React.createElement(SimpleTooltip, _extends({}, restProps, {\n    appearance: appearance,\n    arrow: arrow,\n    ref: function ref(el) {\n      return setTooltipRef(el);\n    },\n    style: {\n      arrow: popperStyles.arrow,\n      container: popperStyles.popper\n    },\n    attributes: {\n      arrow: (_attributes$arrow = attributes.arrow) !== null && _attributes$arrow !== void 0 ? _attributes$arrow : null,\n      container: (_attributes$popper = attributes.popper) !== null && _attributes$popper !== void 0 ? _attributes$popper : null\n    }\n  })), tooltipContainer));\n};\nvar styles = {\n  \"Tooltip--appearance-accent\": \"vkuiTooltip--appearance-accent\",\n  \"Tooltip--appearance-white\": \"vkuiTooltip--appearance-white\",\n  \"Tooltip--appearance-black\": \"vkuiTooltip--appearance-black\",\n  \"Tooltip--appearance-inversion\": \"vkuiTooltip--appearance-inversion\",\n  \"Tooltip--appearance-neutral\": \"vkuiTooltip--appearance-neutral\"\n};","map":{"version":3,"mappings":"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","names":["React","ReactDOM","classNames","hasReactNode","Subhead","useNavTransition","PopperArrow","usePopper","tooltipContainerAttr","useExternRef","useDOM","warnOnce","useGlobalEventListener","isDOMTypeElement","element","isValidElement","type","warn","IS_DEV","process","env","NODE_ENV","SimpleTooltip","forwardRef","_ref","ref","appearance","_ref$appearance","header","text","arrow","_ref$style","style","popperStyles","attributes","className","container","_attributes$container","containerClassName","restContainerAttributes","styles","arrowClassName","weight","mapAlignX","x","getPlacement","alignX","alignY","filter","p","join","isVerticalPlacement","placement","startsWith","Tooltip","_ref3","children","_ref3$isShown","isShown","_isShown","_ref3$offsetX","offsetX","_ref3$offsetY","offsetY","onClose","_ref3$cornerOffset","cornerOffset","cornerAbsoluteOffset","_ref3$arrow","restProps","entering","useState","_React$useState2","tooltipRef","setTooltipRef","_React$useState4","target","setTarget","multiChildren","Children","count","primitiveChild","_typeof","JSON","stringify","Boolean","tooltipContainer","useMemo","closest","strategy","position","Error","modifiers","name","options","offset","push","padding","enabled","phase","fn","state","modifiersData","undefined","_state$modifiersData$","y","_state$modifiersData$2","_placement","document","passive","childRef","props","getRootRef","patchedRef","child","cloneElement","_defineProperty","Fragment","createPortal","_extends","el","popper","_attributes$arrow","_attributes$popper"],"sources":["/Users/pitus_anonimous/Desktop/youth_bit_hack/youth_bit_vk/node_modules/@vkontakte/vkui/src/components/Tooltip/Tooltip.tsx"],"sourcesContent":["import * as React from 'react';\nimport ReactDOM from 'react-dom';\nimport { classNames, hasReactNode } from '@vkontakte/vkjs';\nimport { Subhead } from '../Typography/Subhead/Subhead';\nimport { useNavTransition } from '../NavTransitionContext/NavTransitionContext';\nimport { PopperArrow } from '../PopperArrow/PopperArrow';\nimport { Modifier, usePopper } from 'react-popper';\nimport { Placement } from '@popperjs/core';\nimport { tooltipContainerAttr } from './TooltipContainer';\nimport { useExternRef } from '../../hooks/useExternRef';\nimport { useDOM } from '../../lib/dom';\nimport { warnOnce } from '../../lib/warnOnce';\nimport { useGlobalEventListener } from '../../hooks/useGlobalEventListener';\nimport { HasRootRef } from '../../types';\nimport styles from './Tooltip.module.css';\n\ninterface SimpleTooltipProps extends Partial<TooltipProps> {\n  target?: HTMLDivElement;\n  style?: {\n    arrow: React.CSSProperties;\n    container: React.CSSProperties;\n  };\n  attributes?: {\n    arrow: React.HTMLAttributes<HTMLDivElement> | null;\n    container: React.HTMLAttributes<HTMLDivElement> | null;\n  };\n  className?: string;\n}\n\n/**\n * Перебиваем `ref`.\n *\n * В оригинальном `React.DOMElement` задаётся `React.LegacyRef<T>`, в котором есть `string`.\n * Когда как `{ ref: \"string\" }` уже давно депрекейтнут.\n */\ninterface DOMElement<P extends React.HTMLAttributes<T> | React.SVGAttributes<T>, T extends Element>\n  extends React.DOMElement<P, T> {\n  ref: React.Ref<T>;\n}\n\nconst isDOMTypeElement = <\n  P extends React.HTMLAttributes<T> | React.SVGAttributes<T>,\n  T extends Element,\n>(\n  element: React.ReactElement,\n): element is DOMElement<P, T> => {\n  return React.isValidElement(element) && typeof element.type === 'string';\n};\n\nconst warn = warnOnce('Tooltip');\nconst IS_DEV = process.env.NODE_ENV === 'development';\n\nconst SimpleTooltip = React.forwardRef<HTMLDivElement, SimpleTooltipProps>(function SimpleTooltip(\n  { appearance = 'accent', header, text, arrow, style: popperStyles = {}, attributes, className },\n  ref,\n) {\n  const { className: containerClassName, ...restContainerAttributes } = attributes?.container ?? {};\n\n  return (\n    <div\n      className={classNames(\n        styles['Tooltip'],\n        styles[`Tooltip--appearance-${appearance}`],\n        className,\n      )}\n    >\n      <div\n        className={classNames(styles['Tooltip__container'], containerClassName)}\n        ref={ref}\n        style={popperStyles.container}\n        {...restContainerAttributes}\n      >\n        {arrow && (\n          <PopperArrow\n            style={popperStyles.arrow}\n            attributes={attributes?.arrow}\n            arrowClassName={styles['Tooltip__arrow']}\n          />\n        )}\n        <div className={styles['Tooltip__content']}>\n          {header && (\n            <Subhead weight=\"2\" className={styles['Tooltip__title']}>\n              {header}\n            </Subhead>\n          )}\n          {text && <Subhead className={styles['Tooltip__text']}>{text}</Subhead>}\n        </div>\n      </div>\n    </div>\n  );\n});\n\nexport interface TooltipProps {\n  /**\n   * **Важно**: если в `children` передан React-компонент, то необходимо убедиться в том, что он поддерживает\n   * свойство `getRootRef`, которое должно возвращаться ссылку на корневой DOM-элемент компонента,\n   * иначе тултип показан не будет. Если передан React-element, то такой проблемы нет.\n   */\n  children: React.ReactElement<HasRootRef<any>> | React.ReactElement;\n  /**\n   * Стиль отображения подсказки\n   */\n  appearance?: 'accent' | 'neutral' | 'white' | 'black' | 'inversion';\n  /**\n   * Если передан `false`, то рисуется просто `children`.\n   */\n  isShown?: boolean;\n  /**\n   * Текст тултипа.\n   */\n  text?: React.ReactNode;\n  /**\n   * Заголовок тултипа.\n   */\n  header?: React.ReactNode;\n  /**\n   * Положение по горизонтали (прижатие к левому или правому краю `children`).\n   * Если не задано, позиция по горизонтали определятся автоматически\n   */\n  alignX?: 'center' | 'left' | 'right';\n  /**\n   * Положение по вертикали (расположение над или под `children`).\n   * Если не задано, позиция по вертикали определятся автоматически\n   */\n  alignY?: 'top' | 'bottom';\n  /**\n   * Сдвиг по горизонтали (относительно портала, в котором рисуется тултип).\n   */\n  offsetX?: number;\n  /**\n   * Сдвиг по вертикали (относительно портала, в котором рисуется тултип).\n   */\n  offsetY?: number;\n  /**\n   * Отображать ли стрелку, указывающую на якорный элемент\n   */\n  arrow?: boolean;\n  /**\n   * Сдвиг стрелочки относительно центра дочернего элемента.\n   */\n  cornerOffset?: number;\n  /**\n   * Сдвиг стрелочки относительно ширины тултипа\n   */\n  cornerAbsoluteOffset?: number;\n  /**\n   * Callback, который вызывается при клике по любому месту в пределах экрана.\n   */\n  onClose?: () => void;\n  /**\n   * По умолчанию компонент выберет наилучшее расположение сам. Но его можно задать извне с помощью этого свойства\n   */\n  placement?: Placement;\n  /**\n   * Пользовательские css-классы, будут добавлены на root-элемент\n   */\n  className?: string;\n}\n\nfunction mapAlignX(x: TooltipProps['alignX']) {\n  switch (x) {\n    case 'left':\n      return 'start';\n    case 'right':\n      return 'end';\n    default:\n      return '';\n  }\n}\nfunction getPlacement(alignX: TooltipProps['alignX'], alignY: TooltipProps['alignY']): Placement {\n  return [alignY || 'bottom', mapAlignX(alignX || 'left')]\n    .filter((p) => !!p)\n    .join('-') as Placement;\n}\nfunction isVerticalPlacement(placement: Placement) {\n  return placement.startsWith('top') || placement.startsWith('bottom');\n}\n\n/**\n * @see https://vkcom.github.io/VKUI/#/Tooltip\n */\nexport const Tooltip = ({\n  children,\n  isShown: _isShown = true,\n  offsetX = 0,\n  offsetY = 15,\n  alignX,\n  alignY,\n  onClose,\n  cornerOffset = 0,\n  cornerAbsoluteOffset,\n  appearance,\n  arrow = true,\n  placement,\n  ...restProps\n}: TooltipProps) => {\n  const { entering } = useNavTransition();\n  const isShown = _isShown && !entering;\n  const [tooltipRef, setTooltipRef] = React.useState<HTMLElement | null>(null);\n  const [target, setTarget] = React.useState<HTMLElement>();\n\n  if (IS_DEV) {\n    const multiChildren = React.Children.count(children) > 1;\n    // Empty children is a noop\n    const primitiveChild = hasReactNode(children) && typeof children !== 'object';\n    (multiChildren || primitiveChild) &&\n      warn(\n        [\n          'children должен быть одним React элементом, получено',\n          multiChildren && 'несколько',\n          primitiveChild && JSON.stringify(children),\n        ]\n          .filter(Boolean)\n          .join(' '),\n        'error',\n      );\n  }\n\n  /* eslint-disable no-restricted-properties */\n  /* eslint-disable @typescript-eslint/no-unnecessary-type-assertion*/\n  const tooltipContainer = React.useMemo(\n    () => target?.closest(`[${tooltipContainerAttr}]`) as HTMLDivElement,\n    [target],\n  );\n  const strategy = React.useMemo(\n    () => (target?.style.position === 'fixed' ? 'fixed' : 'absolute'),\n    [target],\n  );\n  /* eslint-enable @typescript-eslint/no-unnecessary-type-assertion*/\n  /* eslint-enable no-restricted-properties */\n\n  if (IS_DEV && target && !tooltipContainer) {\n    throw new Error('Use TooltipContainer for Tooltip outside Panel (see docs)');\n  }\n\n  const modifiers = React.useMemo(() => {\n    const modifiers: Array<Modifier<string>> = [\n      {\n        name: 'offset',\n        options: {\n          offset: [offsetX, offsetY],\n        },\n      },\n      {\n        name: 'preventOverflow',\n      },\n      {\n        name: 'flip',\n      },\n    ];\n\n    if (arrow) {\n      modifiers.push({\n        name: 'arrow',\n        options: {\n          padding: 14,\n        },\n      });\n      modifiers.push({\n        name: 'arrowOffset',\n        enabled: true,\n        phase: 'main',\n        fn({ state }) {\n          if (!state.modifiersData.arrow) {\n            return;\n          }\n          if (isVerticalPlacement(state.placement)) {\n            if (cornerAbsoluteOffset !== undefined) {\n              state.modifiersData.arrow.x = cornerAbsoluteOffset;\n            } else {\n              if (state.modifiersData.arrow?.x !== undefined) {\n                state.modifiersData.arrow.x += cornerOffset;\n              }\n            }\n          } else {\n            if (cornerAbsoluteOffset !== undefined) {\n              state.modifiersData.arrow.y = cornerAbsoluteOffset;\n            } else {\n              if (state.modifiersData.arrow?.y !== undefined) {\n                state.modifiersData.arrow.y += cornerOffset;\n              }\n            }\n          }\n        },\n      });\n    }\n\n    return modifiers;\n  }, [arrow, cornerAbsoluteOffset, cornerOffset, offsetX, offsetY]);\n\n  const _placement = placement ?? getPlacement(alignX, alignY);\n  const { styles: popperStyles, attributes } = usePopper(target, tooltipRef, {\n    strategy,\n    placement: _placement,\n    modifiers,\n  });\n\n  const { document } = useDOM();\n  useGlobalEventListener(document, 'click', isShown && onClose, {\n    passive: true,\n  });\n  // NOTE: setting isShown to true used to trigger usePopper().forceUpdate()\n\n  const childRef = isDOMTypeElement<React.HTMLAttributes<HTMLElement>, HTMLElement>(children)\n    ? children.ref\n    : React.isValidElement<HasRootRef<HTMLElement>>(children)\n    ? children.props.getRootRef\n    : null;\n  const patchedRef = useExternRef(setTarget, childRef);\n  const child = React.isValidElement(children)\n    ? React.cloneElement(children, {\n        [isDOMTypeElement(children) ? 'ref' : 'getRootRef']: patchedRef,\n      })\n    : children;\n\n  return (\n    <React.Fragment>\n      {child}\n      {isShown &&\n        target != null &&\n        ReactDOM.createPortal(\n          <SimpleTooltip\n            {...restProps}\n            appearance={appearance}\n            arrow={arrow}\n            ref={(el) => setTooltipRef(el)}\n            style={{\n              arrow: popperStyles.arrow,\n              container: popperStyles.popper,\n            }}\n            attributes={{\n              arrow: attributes.arrow ?? null,\n              container: attributes.popper ?? null,\n            }}\n          />,\n          tooltipContainer,\n        )}\n    </React.Fragment>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}