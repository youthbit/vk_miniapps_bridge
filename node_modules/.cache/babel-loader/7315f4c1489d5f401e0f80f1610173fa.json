{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport * as React from 'react';\nimport { canUseDOM, hasMouse as hasPointerLib, hasHover as hasHoverLib } from '@vkontakte/vkjs';\nimport { AdaptivityContext } from '../components/AdaptivityProvider/AdaptivityContext';\nimport { getOrDefault } from '../helpers/getOrDefault';\nimport { getViewWidthByMediaQueries, getViewHeightByMediaQueries, getSizeX, getSizeY, tryToCheckIsDesktop } from '../lib/adaptivity';\nimport { useMediaQueries } from './useMediaQueries';\nimport { usePlatform } from './usePlatform';\nimport { matchMediaListAddListener, matchMediaListRemoveListener } from '../lib/matchMedia';\n/**\n * Высчитывает и возвращает параметры адаптивности при изменении вьюпорта.\n *\n * Берёт в приоритет значения из `AdaptivityContext`.\n *\n * > ⚠ SSR\n * >\n * > Во избежания ошибок при гидратации, не используйте данный хук, если есть вероятность, что компонент будет отрендерен\n * > на стороне сервера.\n * >\n * > Лучше всего использовать для всплывающих окон, т.к. они вызываются только после загрузки\n * > страницы либо пользователем, либо программно.\n */\n\nexport var useAdaptivityWithJSMediaQueries = function useAdaptivityWithJSMediaQueries() {\n  if (!canUseDOM) {\n    console.error(\"[useAdaptivityWithJSMediaQueries] \\u041F\\u043E\\u0445\\u043E\\u0436\\u0435, \\u0432\\u044B \\u043F\\u044B\\u0442\\u0430\\u0435\\u0442\\u0435\\u0441\\u044C \\u0438\\u0441\\u043F\\u043E\\u043B\\u044C\\u0437\\u043E\\u0432\\u0430\\u0442\\u044C \\u0445\\u0443\\u043A \\u0432\\u043D\\u0435 \\u0431\\u0440\\u0430\\u0443\\u0437\\u0435\\u0440\\u0430.\\n\\n\\u041F\\u043E\\u0441\\u0442\\u0430\\u0440\\u0430\\u0439\\u0442\\u0435\\u0441\\u044C \\u044D\\u0442\\u043E\\u0433\\u043E \\u0438\\u0437\\u0431\\u0435\\u0433\\u0430\\u0442\\u044C, \\u0447\\u0442\\u043E\\u0431\\u044B \\u043D\\u0435 \\u0431\\u044B\\u043B\\u043E \\u043E\\u0448\\u0438\\u0431\\u043E\\u043A \\u043F\\u0440\\u0438 \\u0433\\u0438\\u0434\\u0440\\u0430\\u0442\\u0430\\u0446\\u0438\\u0438: \\u043F\\u0440\\u0438 SSR \\u043D\\u0435\\u0442 \\u0438\\u043D\\u0444\\u043E\\u0440\\u043C\\u0430\\u0446\\u0438\\u0438 \\u043E \\u0440\\u0430\\u0437\\u043C\\u0435\\u0440\\u0430\\u0445 \\u044D\\u043A\\u0440\\u0430\\u043D\\u0430.\\n\\n\\u0418\\u0441\\u043F\\u043E\\u043B\\u044C\\u0437\\u0443\\u0439\\u0442\\u0435 CSS Media Query \\u0438\\u043B\\u0438 \\u0431\\u0438\\u0431\\u043B\\u0438\\u043E\\u0442\\u0435\\u043A\\u0443 \\u043F\\u043E \\u0442\\u0438\\u043F\\u0443 https://github.com/artsy/fresnel.\");\n  }\n\n  var _React$useContext = React.useContext(AdaptivityContext),\n      viewWidthContext = _React$useContext.viewWidth,\n      viewHeightContext = _React$useContext.viewHeight,\n      sizeXContext = _React$useContext.sizeX,\n      sizeYContext = _React$useContext.sizeY,\n      hasPointerContext = _React$useContext.hasPointer,\n      hasHoverContext = _React$useContext.hasHover;\n\n  var platform = usePlatform();\n  var mediaQueries = useMediaQueries();\n\n  var _React$useState = React.useState(function () {\n    return [getOrDefault(viewWidthContext, getViewWidthByMediaQueries(mediaQueries)), getOrDefault(viewHeightContext, getViewHeightByMediaQueries(mediaQueries))];\n  }),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      _React$useState2$ = _slicedToArray(_React$useState2[0], 2),\n      viewWidthLocal = _React$useState2$[0],\n      viewHeightLocal = _React$useState2$[1],\n      setViewSizeLocal = _React$useState2[1];\n\n  var adaptivityProps = React.useMemo(function () {\n    var hasPointer = getOrDefault(hasPointerContext, hasPointerLib);\n    var hasHover = getOrDefault(hasHoverContext, hasHoverLib);\n    var viewWidth = getOrDefault(viewWidthContext, viewWidthLocal);\n    var viewHeight = getOrDefault(viewHeightContext, viewHeightLocal);\n    var sizeX = getOrDefault(sizeXContext, getSizeX(viewWidth));\n    var sizeY = getOrDefault(sizeYContext, getSizeY(viewWidth, viewHeight, hasPointer));\n    var isDesktop = tryToCheckIsDesktop(viewWidth, viewHeight, hasPointer, platform);\n    return {\n      viewWidth: viewWidth,\n      viewHeight: viewHeight,\n      sizeX: sizeX,\n      sizeY: sizeY,\n      hasPointer: hasPointer,\n      hasHover: hasHover,\n      isDesktop: isDesktop\n    };\n  }, [viewWidthLocal, viewHeightLocal, viewWidthContext, viewHeightContext, sizeXContext, sizeYContext, hasPointerContext, hasHoverContext, platform]);\n  React.useEffect(function () {\n    var handleMediaQuery = function handleMediaQuery() {\n      setViewSizeLocal(function (prevSizeLocal) {\n        var newViewWidthLocal = getOrDefault(viewWidthContext, getViewWidthByMediaQueries(mediaQueries));\n        var newViewHeightLocal = getOrDefault(viewHeightContext, getViewHeightByMediaQueries(mediaQueries));\n\n        var _prevSizeLocal = _slicedToArray(prevSizeLocal, 2),\n            prevViewWidthLocal = _prevSizeLocal[0],\n            prevViewHeightLocal = _prevSizeLocal[1];\n\n        if (prevViewWidthLocal !== newViewWidthLocal || prevViewHeightLocal !== newViewHeightLocal) {\n          return [newViewWidthLocal, newViewHeightLocal];\n        }\n\n        return prevSizeLocal;\n      });\n    };\n\n    if (!viewWidthContext) {\n      [mediaQueries.desktopPlus, mediaQueries.tablet, mediaQueries.smallTablet, mediaQueries.mobile].forEach(function (matchMediaListener) {\n        return matchMediaListAddListener(matchMediaListener, handleMediaQuery);\n      });\n    }\n\n    if (!viewHeightContext) {\n      [mediaQueries.mediumHeight, mediaQueries.mobileLandscapeHeight].forEach(function (matchMediaListener) {\n        return matchMediaListAddListener(matchMediaListener, handleMediaQuery);\n      });\n    }\n\n    return function () {\n      [mediaQueries.desktopPlus, mediaQueries.tablet, mediaQueries.smallTablet, mediaQueries.mobile, mediaQueries.mediumHeight, mediaQueries.mobileLandscapeHeight].forEach(function (matchMediaListener) {\n        return matchMediaListRemoveListener(matchMediaListener, handleMediaQuery);\n      });\n    };\n  }, [mediaQueries, viewWidthContext, viewHeightContext]);\n  return adaptivityProps;\n};","map":{"version":3,"mappings":"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","names":["React","canUseDOM","hasMouse","hasPointerLib","hasHover","hasHoverLib","AdaptivityContext","getOrDefault","getViewWidthByMediaQueries","getViewHeightByMediaQueries","getSizeX","getSizeY","tryToCheckIsDesktop","useMediaQueries","usePlatform","matchMediaListAddListener","matchMediaListRemoveListener","useAdaptivityWithJSMediaQueries","console","error","useContext","viewWidthContext","viewWidth","viewHeightContext","viewHeight","sizeXContext","sizeX","sizeYContext","sizeY","hasPointerContext","hasPointer","hasHoverContext","platform","mediaQueries","useState","_React$useState2","_React$useState2$","viewWidthLocal","viewHeightLocal","setViewSizeLocal","adaptivityProps","useMemo","isDesktop","useEffect","handleMediaQuery","prevSizeLocal","newViewWidthLocal","newViewHeightLocal","prevViewWidthLocal","prevViewHeightLocal","desktopPlus","tablet","smallTablet","mobile","forEach","matchMediaListener","mediumHeight","mobileLandscapeHeight"],"sources":["/Users/pitus_anonimous/Desktop/youth_bit_hack/youth_bit_vk/node_modules/@vkontakte/vkui/src/hooks/useAdaptivityWithJSMediaQueries.ts"],"sourcesContent":["import * as React from 'react';\nimport { canUseDOM, hasMouse as hasPointerLib, hasHover as hasHoverLib } from '@vkontakte/vkjs';\nimport {\n  AdaptivityContext,\n  type AdaptivityProps as BaseAdaptivityProps,\n} from '../components/AdaptivityProvider/AdaptivityContext';\nimport { getOrDefault } from '../helpers/getOrDefault';\nimport {\n  getViewWidthByMediaQueries,\n  getViewHeightByMediaQueries,\n  getSizeX,\n  getSizeY,\n  tryToCheckIsDesktop,\n} from '../lib/adaptivity';\nimport { useMediaQueries } from './useMediaQueries';\nimport { usePlatform } from './usePlatform';\nimport { matchMediaListAddListener, matchMediaListRemoveListener } from '../lib/matchMedia';\n\nexport interface UseAdaptivityWithJSMediaQueries extends Required<BaseAdaptivityProps> {\n  isDesktop: boolean;\n}\n\n/**\n * Высчитывает и возвращает параметры адаптивности при изменении вьюпорта.\n *\n * Берёт в приоритет значения из `AdaptivityContext`.\n *\n * > ⚠ SSR\n * >\n * > Во избежания ошибок при гидратации, не используйте данный хук, если есть вероятность, что компонент будет отрендерен\n * > на стороне сервера.\n * >\n * > Лучше всего использовать для всплывающих окон, т.к. они вызываются только после загрузки\n * > страницы либо пользователем, либо программно.\n */\nexport const useAdaptivityWithJSMediaQueries = (): UseAdaptivityWithJSMediaQueries => {\n  if (!canUseDOM) {\n    console.error(`[useAdaptivityWithJSMediaQueries] Похоже, вы пытаетесь использовать хук вне браузера.\n\nПостарайтесь этого избегать, чтобы не было ошибок при гидратации: при SSR нет информации о размерах экрана.\n\nИспользуйте CSS Media Query или библиотеку по типу https://github.com/artsy/fresnel.`);\n  }\n\n  const {\n    viewWidth: viewWidthContext,\n    viewHeight: viewHeightContext,\n    sizeX: sizeXContext,\n    sizeY: sizeYContext,\n    hasPointer: hasPointerContext,\n    hasHover: hasHoverContext,\n  } = React.useContext(AdaptivityContext);\n\n  const platform = usePlatform();\n  const mediaQueries = useMediaQueries();\n\n  const [[viewWidthLocal, viewHeightLocal], setViewSizeLocal] = React.useState(() => [\n    getOrDefault(viewWidthContext, getViewWidthByMediaQueries(mediaQueries)),\n    getOrDefault(viewHeightContext, getViewHeightByMediaQueries(mediaQueries)),\n  ]);\n\n  const adaptivityProps = React.useMemo(() => {\n    const hasPointer = getOrDefault(hasPointerContext, hasPointerLib);\n    const hasHover = getOrDefault(hasHoverContext, hasHoverLib);\n    const viewWidth = getOrDefault(viewWidthContext, viewWidthLocal);\n    const viewHeight = getOrDefault(viewHeightContext, viewHeightLocal);\n    const sizeX = getOrDefault(sizeXContext, getSizeX(viewWidth));\n    const sizeY = getOrDefault(sizeYContext, getSizeY(viewWidth, viewHeight, hasPointer));\n    const isDesktop = tryToCheckIsDesktop(viewWidth, viewHeight, hasPointer, platform);\n\n    return {\n      viewWidth,\n      viewHeight,\n      sizeX,\n      sizeY,\n      hasPointer,\n      hasHover,\n      isDesktop,\n    };\n  }, [\n    viewWidthLocal,\n    viewHeightLocal,\n    viewWidthContext,\n    viewHeightContext,\n    sizeXContext,\n    sizeYContext,\n    hasPointerContext,\n    hasHoverContext,\n    platform,\n  ]);\n\n  React.useEffect(() => {\n    const handleMediaQuery = () => {\n      setViewSizeLocal((prevSizeLocal) => {\n        const newViewWidthLocal = getOrDefault(\n          viewWidthContext,\n          getViewWidthByMediaQueries(mediaQueries),\n        );\n        const newViewHeightLocal = getOrDefault(\n          viewHeightContext,\n          getViewHeightByMediaQueries(mediaQueries),\n        );\n\n        const [prevViewWidthLocal, prevViewHeightLocal] = prevSizeLocal;\n\n        if (\n          prevViewWidthLocal !== newViewWidthLocal ||\n          prevViewHeightLocal !== newViewHeightLocal\n        ) {\n          return [newViewWidthLocal, newViewHeightLocal];\n        }\n\n        return prevSizeLocal;\n      });\n    };\n\n    if (!viewWidthContext) {\n      [\n        mediaQueries.desktopPlus,\n        mediaQueries.tablet,\n        mediaQueries.smallTablet,\n        mediaQueries.mobile,\n      ].forEach((matchMediaListener) =>\n        matchMediaListAddListener(matchMediaListener, handleMediaQuery),\n      );\n    }\n\n    if (!viewHeightContext) {\n      [mediaQueries.mediumHeight, mediaQueries.mobileLandscapeHeight].forEach(\n        (matchMediaListener) => matchMediaListAddListener(matchMediaListener, handleMediaQuery),\n      );\n    }\n\n    return () => {\n      [\n        mediaQueries.desktopPlus,\n        mediaQueries.tablet,\n        mediaQueries.smallTablet,\n        mediaQueries.mobile,\n        mediaQueries.mediumHeight,\n        mediaQueries.mobileLandscapeHeight,\n      ].forEach((matchMediaListener) =>\n        matchMediaListRemoveListener(matchMediaListener, handleMediaQuery),\n      );\n    };\n  }, [mediaQueries, viewWidthContext, viewHeightContext]);\n\n  return adaptivityProps;\n};\n"]},"metadata":{},"sourceType":"module"}