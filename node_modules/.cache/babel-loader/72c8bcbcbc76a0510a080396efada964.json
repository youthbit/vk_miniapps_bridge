{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"activePanel\", \"history\", \"nav\", \"onTransition\", \"onSwipeBack\", \"onSwipeBackStart\", \"onSwipeBackCancel\", \"children\", \"className\"];\nimport * as React from 'react';\nimport { classNames, noop } from '@vkontakte/vkjs';\nimport { animationEvent } from '../../lib/supportEvents';\nimport { Platform } from '../../lib/platform';\nimport { Touch } from '../Touch/Touch';\nimport { useConfigProvider } from '../ConfigProvider/ConfigProviderContext';\nimport { useSplitCol } from '../SplitCol/SplitCol';\nimport { canUseDOM, useDOM, blurActiveElement } from '../../lib/dom';\nimport { useScroll } from '../AppRoot/ScrollContext';\nimport { NavTransitionProvider } from '../NavTransitionContext/NavTransitionContext';\nimport { getNavId } from '../../lib/getNavId';\nimport { warnOnce } from '../../lib/warnOnce';\nimport { usePlatform } from '../../hooks/usePlatform';\nimport { swipeBackExcluded } from './utils';\nimport { useWaitTransitionFinish } from '../../hooks/useWaitTransitionFinish';\nimport { useTimeout } from '../../hooks/useTimeout';\nimport { usePrevious } from '../../hooks/usePrevious';\nimport { useIsomorphicLayoutEffect } from '../../lib/useIsomorphicLayoutEffect';\nvar SWIPE_BACK_AREA = 70;\nvar SwipeBackResults;\n\n(function (SwipeBackResults) {\n  SwipeBackResults[SwipeBackResults[\"fail\"] = 1] = \"fail\";\n  SwipeBackResults[SwipeBackResults[\"success\"] = 2] = \"success\";\n})(SwipeBackResults || (SwipeBackResults = {}));\n\nexport var scrollsCache = {};\nvar warn = warnOnce('View');\n/**\n * @see https://vkcom.github.io/VKUI/#/View\n */\n\nexport var View = function View(_ref) {\n  var activePanelProp = _ref.activePanel,\n      history = _ref.history,\n      nav = _ref.nav,\n      onTransition = _ref.onTransition,\n      onSwipeBack = _ref.onSwipeBack,\n      onSwipeBackStart = _ref.onSwipeBackStart,\n      onSwipeBackCancelProp = _ref.onSwipeBackCancel,\n      children = _ref.children,\n      className = _ref.className,\n      restProps = _objectWithoutProperties(_ref, _excluded);\n\n  var scrolls = React.useRef(scrollsCache[getNavId({\n    nav: nav,\n    id: restProps.id\n  })] || {});\n  var afterTransition = React.useRef(noop);\n  React.useEffect(function () {\n    return function () {\n      var id = getNavId({\n        nav: nav,\n        id: restProps.id\n      });\n\n      if (id) {\n        scrollsCache[id] = scrolls.current;\n      }\n    };\n  });\n  var panelNodes = React.useRef({});\n\n  var _useDOM = useDOM(),\n      window = _useDOM.window,\n      document = _useDOM.document;\n\n  var scroll = useScroll();\n  var configProvider = useConfigProvider();\n  var splitCol = useSplitCol();\n  var platform = usePlatform();\n\n  var _React$useState = React.useState(false),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      animated = _React$useState2[0],\n      setAnimated = _React$useState2[1];\n\n  var _React$useState3 = React.useState([activePanelProp]),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      visiblePanels = _React$useState4[0],\n      setVisiblePanels = _React$useState4[1];\n\n  var _React$useState5 = React.useState(activePanelProp),\n      _React$useState6 = _slicedToArray(_React$useState5, 2),\n      activePanel = _React$useState6[0],\n      setActivePanel = _React$useState6[1];\n\n  var _React$useState7 = React.useState(undefined),\n      _React$useState8 = _slicedToArray(_React$useState7, 2),\n      isBack = _React$useState8[0],\n      setIsBack = _React$useState8[1];\n\n  var _React$useState9 = React.useState(null),\n      _React$useState10 = _slicedToArray(_React$useState9, 2),\n      prevPanel = _React$useState10[0],\n      setPrevPanel = _React$useState10[1];\n\n  var _React$useState11 = React.useState(null),\n      _React$useState12 = _slicedToArray(_React$useState11, 2),\n      nextPanel = _React$useState12[0],\n      setNextPanel = _React$useState12[1];\n\n  var _React$useState13 = React.useState(false),\n      _React$useState14 = _slicedToArray(_React$useState13, 2),\n      swipingBack = _React$useState14[0],\n      setSwipingBack = _React$useState14[1];\n\n  var _React$useState15 = React.useState(false),\n      _React$useState16 = _slicedToArray(_React$useState15, 2),\n      swipeBackPrevented = _React$useState16[0],\n      setSwipeBackPrevented = _React$useState16[1];\n\n  var _React$useState17 = React.useState(0),\n      _React$useState18 = _slicedToArray(_React$useState17, 2),\n      swipeBackStartX = _React$useState18[0],\n      setSwipeBackStartX = _React$useState18[1];\n\n  var _React$useState19 = React.useState(0),\n      _React$useState20 = _slicedToArray(_React$useState19, 2),\n      swipeBackShift = _React$useState20[0],\n      setSwipeBackShift = _React$useState20[1];\n\n  var _React$useState21 = React.useState(null),\n      _React$useState22 = _slicedToArray(_React$useState21, 2),\n      swipeBackNextPanel = _React$useState22[0],\n      setSwipeBackNextPanel = _React$useState22[1];\n\n  var _React$useState23 = React.useState(null),\n      _React$useState24 = _slicedToArray(_React$useState23, 2),\n      swipeBackPrevPanel = _React$useState24[0],\n      setSwipeBackPrevPanel = _React$useState24[1];\n\n  var _React$useState25 = React.useState(null),\n      _React$useState26 = _slicedToArray(_React$useState25, 2),\n      swipeBackResult = _React$useState26[0],\n      setSwipeBackResult = _React$useState26[1];\n\n  var _React$useState27 = React.useState(false),\n      _React$useState28 = _slicedToArray(_React$useState27, 2),\n      browserSwipe = _React$useState28[0],\n      setBrowserSwipe = _React$useState28[1];\n\n  var prevActivePanel = usePrevious(activePanelProp);\n  var prevSwipingBack = usePrevious(swipingBack);\n  var prevBrowserSwipe = usePrevious(browserSwipe);\n  var prevSwipeBackResult = usePrevious(swipeBackResult);\n  var prevSwipeBackPrevPanel = usePrevious(swipeBackPrevPanel);\n  var prevOnTransition = usePrevious(onTransition);\n  var panels = React.Children.toArray(children).filter(function (panel) {\n    var panelId = getNavId(panel.props, warn);\n    return panelId !== undefined && visiblePanels.includes(panelId) || panelId === swipeBackPrevPanel || panelId === swipeBackNextPanel;\n  });\n  var disableAnimation = (configProvider === null || configProvider === void 0 ? void 0 : configProvider.transitionMotionEnabled) === false || !(splitCol !== null && splitCol !== void 0 && splitCol.animate) || platform === Platform.VKCOM;\n\n  var pickPanel = function pickPanel(id) {\n    if (id === null) {\n      return null;\n    }\n\n    return panelNodes.current[id];\n  };\n\n  var flushTransition = React.useCallback(function (prevPanel, isBackTransition) {\n    if (isBackTransition) {\n      scrolls.current[prevPanel] = 0;\n    }\n\n    setPrevPanel(null);\n    setNextPanel(null);\n    setVisiblePanels([activePanelProp]);\n    setActivePanel(activePanelProp);\n    setAnimated(false);\n    setIsBack(undefined);\n\n    afterTransition.current = function () {\n      scroll === null || scroll === void 0 ? void 0 : scroll.scrollTo(0, isBackTransition ? scrolls.current[activePanelProp] : 0);\n      onTransition && onTransition({\n        isBack: isBackTransition,\n        from: prevPanel,\n        to: activePanelProp\n      });\n    };\n  }, [activePanelProp, onTransition, scroll]);\n  useIsomorphicLayoutEffect(function () {\n    afterTransition.current();\n    afterTransition.current = noop;\n  }, [afterTransition.current]);\n  var transitionEndHandler = React.useCallback(function (e) {\n    if ((!e || ['vkui-animation-ios-next-forward', 'vkui-animation-ios-prev-back', 'vkui-animation-view-next-forward', 'vkui-animation-view-prev-back'].includes(e.animationName)) && prevPanel !== null) {\n      flushTransition(prevPanel, Boolean(isBack));\n    }\n  }, [flushTransition, isBack, prevPanel]);\n\n  var _useWaitTransitionFin = useWaitTransitionFinish(),\n      waitTransitionFinish = _useWaitTransitionFin.waitTransitionFinish;\n\n  var animationFinishTimeout = useTimeout(transitionEndHandler, platform === Platform.IOS ? 600 : 300);\n  var onSwipeBackSuccess = React.useCallback(function () {\n    onSwipeBack && onSwipeBack();\n  }, [onSwipeBack]);\n  var onSwipeBackCancel = React.useCallback(function () {\n    onSwipeBackCancelProp && onSwipeBackCancelProp();\n    setSwipeBackPrevPanel(null);\n    setSwipeBackNextPanel(null);\n    setSwipingBack(false);\n    setSwipeBackResult(null);\n    setSwipeBackStartX(0);\n    setSwipeBackShift(0);\n  }, [onSwipeBackCancelProp]);\n  var swipingBackTransitionEndHandler = React.useCallback(function (e) {\n    // indexOf because of vendor prefixes in old browsers\n    if (!e || e !== null && e !== void 0 && e.propertyName.includes('transform') && (e === null || e === void 0 ? void 0 : e.target) === pickPanel(swipeBackNextPanel)) {\n      switch (swipeBackResult) {\n        case SwipeBackResults.fail:\n          onSwipeBackCancel();\n          break;\n\n        case SwipeBackResults.success:\n          onSwipeBackSuccess();\n      }\n    }\n  }, [onSwipeBackCancel, onSwipeBackSuccess, swipeBackNextPanel, swipeBackResult]);\n\n  var onMoveX = function onMoveX(event) {\n    if (platform !== Platform.IOS || swipeBackPrevented || swipeBackExcluded(event) || disableAnimation) {\n      return;\n    }\n\n    if (!(configProvider !== null && configProvider !== void 0 && configProvider.isWebView)) {\n      if ((event.startX <= SWIPE_BACK_AREA || event.startX >= window.innerWidth - SWIPE_BACK_AREA) && !browserSwipe) {\n        setBrowserSwipe(true);\n      }\n\n      return;\n    }\n\n    if (!onSwipeBack || animated && event.startX <= SWIPE_BACK_AREA) {\n      return;\n    }\n\n    if (!swipingBack && event.startX <= SWIPE_BACK_AREA && history && history.length > 1) {\n      // Начался свайп назад\n      if (onSwipeBackStart) {\n        var payload = onSwipeBackStart(activePanel);\n\n        if (payload === 'prevent') {\n          setSwipeBackPrevented(true);\n          return;\n        }\n      }\n\n      if (activePanel !== null) {\n        // Note: вызываем закрытие клавиатуры. В iOS это нативное поведение при свайпе.\n        blurActiveElement(document);\n        scrolls.current[activePanel] = scroll === null || scroll === void 0 ? void 0 : scroll.getScroll().y;\n      }\n\n      setSwipingBack(true);\n      setSwipeBackStartX(event.startX);\n      setSwipeBackPrevPanel(activePanel);\n      setSwipeBackNextPanel(history.slice(-2)[0]);\n    }\n\n    if (swipingBack) {\n      var _swipeBackShift = 0;\n\n      if (event.shiftX < 0) {\n        _swipeBackShift = 0;\n      } else if (event.shiftX > window.innerWidth - swipeBackStartX) {\n        _swipeBackShift = window.innerWidth;\n      } else {\n        _swipeBackShift = event.shiftX;\n      }\n\n      setSwipeBackShift(_swipeBackShift);\n    }\n  };\n\n  var onEnd = React.useCallback(function (event) {\n    if (swipingBack) {\n      var _innerWidth;\n\n      var speed = swipeBackShift / event.duration * 1000;\n\n      if (swipeBackShift === 0) {\n        onSwipeBackCancel();\n      } else if (swipeBackShift >= ((_innerWidth = window.innerWidth) !== null && _innerWidth !== void 0 ? _innerWidth : 0)) {\n        onSwipeBackSuccess();\n      } else if (speed > 250 || swipeBackStartX + swipeBackShift > window.innerWidth / 2) {\n        setSwipeBackResult(SwipeBackResults.success);\n      } else {\n        setSwipeBackResult(SwipeBackResults.fail);\n      }\n    }\n\n    if (swipeBackPrevented) {\n      setSwipeBackPrevented(false);\n    }\n  }, [onSwipeBackCancel, onSwipeBackSuccess, swipeBackShift, swipeBackStartX, swipingBack, swipeBackPrevented, window]);\n\n  var calcPanelSwipeStyles = function calcPanelSwipeStyles(panelId) {\n    if (!canUseDOM || !window) {\n      return {};\n    }\n\n    var isPrev = panelId === swipeBackPrevPanel;\n    var isNext = panelId === swipeBackNextPanel;\n\n    if (!isPrev && !isNext || swipeBackResult) {\n      return {};\n    }\n\n    var prevPanelTranslate = \"\".concat(swipeBackShift, \"px\");\n    var nextPanelTranslate = \"\".concat(-50 + swipeBackShift * 100 / window.innerWidth / 2, \"%\");\n    var prevPanelShadow = 0.3 * (window.innerWidth - swipeBackShift) / window.innerWidth;\n\n    if (swipeBackResult) {\n      return isPrev ? {\n        boxShadow: \"-2px 0 12px rgba(0, 0, 0, \".concat(prevPanelShadow, \")\")\n      } : {};\n    }\n\n    if (isNext) {\n      return {\n        transform: \"translate3d(\".concat(nextPanelTranslate, \", 0, 0)\"),\n        WebkitTransform: \"translate3d(\".concat(nextPanelTranslate, \", 0, 0)\")\n      };\n    }\n\n    if (isPrev) {\n      return {\n        transform: \"translate3d(\".concat(prevPanelTranslate, \", 0, 0)\"),\n        WebkitTransform: \"translate3d(\".concat(prevPanelTranslate, \", 0, 0)\"),\n        boxShadow: \"-2px 0 12px rgba(0, 0, 0, \".concat(prevPanelShadow, \")\")\n      };\n    }\n\n    return {};\n  };\n\n  React.useEffect(function () {\n    // Нужен переход\n    if (prevActivePanel && prevActivePanel !== activePanelProp && !prevSwipingBack && !prevBrowserSwipe) {\n      var firstLayerId = React.Children.toArray(children).map(function (panel) {\n        return getNavId(panel.props, warn);\n      }).find(function (id) {\n        return id === prevActivePanel || id === activePanelProp;\n      });\n      var isBackTransition = firstLayerId === activePanelProp;\n      scrolls.current[prevActivePanel] = scroll === null || scroll === void 0 ? void 0 : scroll.getScroll().y;\n\n      if (disableAnimation) {\n        flushTransition(prevActivePanel, isBackTransition);\n      } else {\n        blurActiveElement(document);\n        setVisiblePanels([prevActivePanel, activePanelProp]);\n        setPrevPanel(prevActivePanel);\n        setNextPanel(activePanelProp);\n        setActivePanel(null);\n        setAnimated(true);\n        setIsBack(isBackTransition); // Фолбек анимации перехода\n\n        if (!animationEvent.supported) {\n          animationFinishTimeout.set();\n        }\n      }\n    } // Закончилась анимация свайпа назад\n\n\n    if (prevActivePanel && prevActivePanel !== activePanelProp && prevSwipingBack) {\n      var _nextPanel = activePanelProp;\n      var _prevPanel = prevActivePanel;\n\n      if (prevSwipeBackPrevPanel) {\n        scrolls.current[prevSwipeBackPrevPanel] = 0;\n      }\n\n      setSwipeBackPrevPanel(null);\n      setSwipeBackNextPanel(null);\n      setSwipingBack(false);\n      setSwipeBackResult(null);\n      setSwipeBackStartX(0);\n      setSwipeBackShift(0);\n      setActivePanel(_nextPanel);\n      setVisiblePanels([_nextPanel]);\n\n      afterTransition.current = function () {\n        if (_nextPanel !== null) {\n          scroll === null || scroll === void 0 ? void 0 : scroll.scrollTo(0, scrolls.current[_nextPanel]);\n        }\n\n        prevOnTransition && prevOnTransition({\n          isBack: true,\n          from: _prevPanel,\n          to: _nextPanel\n        });\n      };\n    } // Началась анимация завершения свайпа назад.\n\n\n    if (!prevSwipeBackResult && swipeBackResult) {\n      waitTransitionFinish(pickPanel(swipeBackNextPanel), swipingBackTransitionEndHandler, platform === Platform.IOS ? 600 : 300);\n    } // Если свайп назад отменился (когда пользователь недостаточно сильно свайпнул)\n\n\n    if (prevSwipeBackResult === SwipeBackResults.fail && !swipeBackResult && activePanel !== null) {\n      scroll === null || scroll === void 0 ? void 0 : scroll.scrollTo(0, scrolls.current[activePanel]);\n    } // Закончился Safari свайп\n\n\n    if (prevActivePanel !== activePanelProp && browserSwipe) {\n      setBrowserSwipe(false);\n      setNextPanel(null);\n      setPrevPanel(null);\n      setAnimated(false);\n      setVisiblePanels([activePanelProp]);\n      setActivePanel(activePanelProp);\n    }\n  }, [activePanelProp, activePanel, animationFinishTimeout, browserSwipe, children, disableAnimation, document, flushTransition, onSwipeBackStart, panels, platform, prevActivePanel, prevBrowserSwipe, prevOnTransition, prevSwipeBackPrevPanel, prevSwipeBackResult, prevSwipingBack, scroll, swipeBackNextPanel, swipeBackResult, swipingBack, swipingBackTransitionEndHandler, waitTransitionFinish]);\n  return /*#__PURE__*/React.createElement(Touch, _extends({\n    Component: \"section\"\n  }, restProps, {\n    className: classNames(\"vkuiView\", platform === Platform.IOS && \"vkuiView--ios\", !disableAnimation && animated && \"vkuiView--animated\", !disableAnimation && swipingBack && \"vkuiView--swiping-back\", disableAnimation && \"vkuiView--no-motion\", className),\n    onMoveX: onMoveX,\n    onEnd: onEnd\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"vkuiView__panels\"\n  }, panels.map(function (panel) {\n    var _scrolls$current$pane;\n\n    var panelId = getNavId(panel.props, warn);\n    var isPrev = panelId === prevPanel || panelId === swipeBackPrevPanel;\n    var isTransitionTarget = animated && panelId === (isBack ? prevPanel : nextPanel);\n    var compensateScroll = isPrev || panelId === swipeBackNextPanel || panelId === nextPanel && isBack;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: classNames(\"vkuiView__panel\", panelId === activePanel && \"vkuiView__panel--active\", panelId === prevPanel && \"vkuiView__panel--prev\", panelId === nextPanel && \"vkuiView__panel--next\", panelId === swipeBackPrevPanel && \"vkuiView__panel--swipe-back-prev\", panelId === swipeBackNextPanel && \"vkuiView__panel--swipe-back-next\", swipeBackResult === SwipeBackResults.success && \"vkuiView__panel--swipe-back-success\", swipeBackResult === SwipeBackResults.fail && \"vkuiView__panel--swipe-back-failed\"),\n      onAnimationEnd: isTransitionTarget ? transitionEndHandler : undefined,\n      ref: function ref(el) {\n        return panelId !== undefined && (panelNodes.current[panelId] = el);\n      },\n      style: calcPanelSwipeStyles(panelId),\n      key: panelId\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"vkuiView__panel-in\",\n      style: {\n        marginTop: compensateScroll ? -((_scrolls$current$pane = scrolls.current[panelId]) !== null && _scrolls$current$pane !== void 0 ? _scrolls$current$pane : 0) : undefined\n      }\n    }, /*#__PURE__*/React.createElement(NavTransitionProvider, {\n      entering: panelId === nextPanel || panelId === swipeBackNextPanel\n    }, panel)));\n  })));\n};","map":{"version":3,"mappings":";;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,UAAT,EAAqBC,IAArB,QAAiC,iBAAjC;AACA,SAASC,cAAT,QAA+B,yBAA/B;AACA,SAASC,QAAT,QAAyB,oBAAzB;AACA,SAASC,KAAT,QAAkC,gBAAlC;AACA,SAASC,iBAAT,QAAkC,yCAAlC;AACA,SAASC,WAAT,QAA4B,sBAA5B;AACA,SAASC,SAAT,EAAoBC,MAApB,EAA4BC,iBAA5B,QAAqD,eAArD;AACA,SAASC,SAAT,QAA0B,0BAA1B;AACA,SAASC,qBAAT,QAAsC,8CAAtC;AACA,SAASC,QAAT,QAAqC,oBAArC;AACA,SAASC,QAAT,QAAyB,oBAAzB;AACA,SAASC,WAAT,QAA4B,yBAA5B;AACA,SAASC,iBAAT,QAAkC,SAAlC;AACA,SAASC,uBAAT,QAAwC,qCAAxC;AACA,SAASC,UAAT,QAA2B,wBAA3B;AACA,SAASC,WAAT,QAA4B,yBAA5B;AACA,SAASC,yBAAT,QAA0C,qCAA1C;AAIA,IAAMC,eAAe,GAAG,EAAxB;AAA2B,IAEtBC,gBAFsB;;AAEN,WAAhBA,gBAAgB;EAAhBA,gBAAgB,CAAhBA,gBAAgB,QAAhBA,GAAgB,EAAhBA,GAAgB,MAAhBA;EAAAA,gBAAgB,CAAhBA,gBAAgB,WAAhBA,GAAgB,EAAhBA,GAAgB,SAAhBA;AAAgB,GAAhBA,gBAAgB,KAAhBA,gBAAgB;;AAarB,OAAO,IAAIC,YAA0B,GAAG,EAAjC;AAyCP,IAAMC,IAAI,GAAGV,QAAQ,CAAC,MAAD,CAArB;AAEA;AACA;AACA;;AACA,OAAO,IAAMW,IAAI,GAAG,SAAPA,IAAO,CAAHC,IAAG,EAWH;EAAA,IAVFC,eAAe,QAA5BC,WAUe;EAAA,IATfC,OAAO,QAAPA,OASe;EAAA,IARfC,GAAG,QAAHA,GAQe;EAAA,IAPfC,YAAY,QAAZA,YAOe;EAAA,IANfC,WAAW,QAAXA,WAMe;EAAA,IALfC,gBAAgB,QAAhBA,gBAKe;EAAA,IAJIC,qBAAqB,QAAxCC,iBAIe;EAAA,IAHfC,QAAQ,QAARA,QAGe;EAAA,IAFfC,SAAS,QAATA,SAEe;EAAA,IADZC,SAAS,4CACG;;EACf,IAAMC,OAAO,GAAGvC,KAAK,CAACwC,MAANxC,CAAauB,YAAY,CAACV,QAAQ,CAAC;IAAEiB,GAAG,EAAHA,GAAF;IAAOW,EAAE,EAAEH,SAAS,CAACG;EAArB,CAAD,CAAT,CAAZlB,IAA+D,EAA5EvB,CAAhB;EACA,IAAM0C,eAAe,GAAG1C,KAAK,CAACwC,MAANxC,CAAaE,IAAbF,CAAxB;EAEAA,KAAK,CAAC2C,SAAN3C,CAAgB;IAAA,OAAM,YAAM;MAC1B,IAAMyC,EAAE,GAAG5B,QAAQ,CAAC;QAAEiB,GAAG,EAAHA,GAAF;QAAOW,EAAE,EAAEH,SAAS,CAACG;MAArB,CAAD,CAAnB;;MACA,IAAIA,EAAJ,EAAQ;QACNlB,YAAY,CAACkB,EAAD,CAAZlB,GAAmBgB,OAAO,CAACK,OAA3BrB;MACF;IACD,CALe;EAKf,CALDvB;EAOA,IAAM6C,UAAU,GAAG7C,KAAK,CAACwC,MAANxC,CAAsD,EAAtDA,CAAnB;;EAEA,cAA6BS,MAAM,EAAnC;EAAA,IAAQqC,MAAM,WAANA,MAAR;EAAA,IAAgBC,QAAQ,WAARA,QAAhB;;EACA,IAAMC,MAAM,GAAGrC,SAAS,EAAxB;EACA,IAAMsC,cAAc,GAAG3C,iBAAiB,EAAxC;EACA,IAAM4C,QAAQ,GAAG3C,WAAW,EAA5B;EACA,IAAM4C,QAAQ,GAAGpC,WAAW,EAA5B;;EAEA,sBAAgCf,KAAK,CAACoD,QAANpD,CAAe,KAAfA,CAAhC;EAAA,IAAqDqD,qDAArD;EAAA,IAAOC,QAAQ,sBAAf;EAAA,IAAiBC,WAAW,sBAA5B;;EAEA,uBAA0CvD,KAAK,CAACoD,QAANpD,CAAe,CAAC2B,eAAD,CAAf3B,CAA1C;EAAA,IAA2EwD,sDAA3E;EAAA,IAAOC,aAAa,sBAApB;EAAA,IAAsBC,gBAAgB,sBAAtC;;EACA,uBAAsC1D,KAAK,CAACoD,QAANpD,CAA8B2B,eAA9B3B,CAAtC;EAAA,IAAoF2D,sDAApF;EAAA,IAAO/B,WAAW,sBAAlB;EAAA,IAAoBgC,cAAc,sBAAlC;;EACA,uBAA4B5D,KAAK,CAACoD,QAANpD,CAAoC6D,SAApC7D,CAA5B;EAAA,IAA0E8D,sDAA1E;EAAA,IAAOC,MAAM,sBAAb;EAAA,IAAeC,SAAS,sBAAxB;;EACA,uBAAkChE,KAAK,CAACoD,QAANpD,CAA8B,IAA9BA,CAAlC;EAAA,IAAqEiE,uDAArE;EAAA,IAAOC,SAAS,uBAAhB;EAAA,IAAkBC,YAAY,uBAA9B;;EACA,wBAAkCnE,KAAK,CAACoD,QAANpD,CAA8B,IAA9BA,CAAlC;EAAA,IAAqEoE,wDAArE;EAAA,IAAOC,SAAS,uBAAhB;EAAA,IAAkBC,YAAY,uBAA9B;;EAEA,wBAAsCtE,KAAK,CAACoD,QAANpD,CAAwB,KAAxBA,CAAtC;EAAA,IAAoEuE,wDAApE;EAAA,IAAOC,WAAW,uBAAlB;EAAA,IAAoBC,cAAc,uBAAlC;;EACA,wBAAoDzE,KAAK,CAACoD,QAANpD,CAAwB,KAAxBA,CAApD;EAAA,IAAkF0E,wDAAlF;EAAA,IAAOC,kBAAkB,uBAAzB;EAAA,IAA2BC,qBAAqB,uBAAhD;;EACA,wBAA8C5E,KAAK,CAACoD,QAANpD,CAAuB,CAAvBA,CAA9C;EAAA,IAAuE6E,wDAAvE;EAAA,IAAOC,eAAe,uBAAtB;EAAA,IAAwBC,kBAAkB,uBAA1C;;EACA,wBAA4C/E,KAAK,CAACoD,QAANpD,CAAuB,CAAvBA,CAA5C;EAAA,IAAqEgF,wDAArE;EAAA,IAAOC,cAAc,uBAArB;EAAA,IAAuBC,iBAAiB,uBAAxC;;EACA,wBAAoDlF,KAAK,CAACoD,QAANpD,CAA8B,IAA9BA,CAApD;EAAA,IAAuFmF,wDAAvF;EAAA,IAAOC,kBAAkB,uBAAzB;EAAA,IAA2BC,qBAAqB,uBAAhD;;EACA,wBAAoDrF,KAAK,CAACoD,QAANpD,CAA8B,IAA9BA,CAApD;EAAA,IAAuFsF,wDAAvF;EAAA,IAAOC,kBAAkB,uBAAzB;EAAA,IAA2BC,qBAAqB,uBAAhD;;EACA,wBAA8CxF,KAAK,CAACoD,QAANpD,CAAwC,IAAxCA,CAA9C;EAAA,IAA2FyF,wDAA3F;EAAA,IAAOC,eAAe,uBAAtB;EAAA,IAAwBC,kBAAkB,uBAA1C;;EAEA,wBAAwC3F,KAAK,CAACoD,QAANpD,CAAe,KAAfA,CAAxC;EAAA,IAA6D4F,wDAA7D;EAAA,IAAOC,YAAY,uBAAnB;EAAA,IAAqBC,eAAe,uBAApC;;EAEA,IAAMC,eAAe,GAAG5E,WAAW,CAACQ,eAAD,CAAnC;EACA,IAAMqE,eAAe,GAAG7E,WAAW,CAACqD,WAAD,CAAnC;EACA,IAAMyB,gBAAgB,GAAG9E,WAAW,CAAC0E,YAAD,CAApC;EACA,IAAMK,mBAAmB,GAAG/E,WAAW,CAACuE,eAAD,CAAvC;EACA,IAAMS,sBAAsB,GAAGhF,WAAW,CAACoE,kBAAD,CAA1C;EACA,IAAMa,gBAAgB,GAAGjF,WAAW,CAACY,YAAD,CAApC;EAEA,IAAMsE,MAAM,GAAIrG,KAAK,CAACsG,QAANtG,CAAeuG,OAAfvG,CAAuBoC,QAAvBpC,EAA0DwG,MAA1DxG,CACd,UAACyG,KAAD,EAA+B;IAC7B,IAAMC,OAAO,GAAG7F,QAAQ,CAAC4F,KAAK,CAACE,KAAP,EAAcnF,IAAd,CAAxB;IAEA,OACGkF,OAAO,KAAK7C,SAAZ6C,IAAyBjD,aAAa,CAACmD,QAAdnD,CAAuBiD,OAAvBjD,CAAzBiD,IACDA,OAAO,KAAKnB,kBADXmB,IAEDA,OAAO,KAAKtB,kBAHd;EAKD,CATapF,CAAhB;EAYA,IAAM6G,gBAAgB,GACpB,eAAc,SAAd5D,kBAAc,WAAdA,GAAc,MAAdA,iBAAc,CAAE6D,uBAAhB,MAA4C,KAA5C,IACA,EAAC5D,QAAQ,SAARA,YAAQ,WAARA,YAAQ,CAAE6D,OAAX,CADA,IAEA5D,QAAQ,KAAK/C,QAAQ,CAAC4G,KAHxB;;EAKA,IAAMC,SAAS,GAAG,SAAZA,SAAY,CAACxE,EAAD,EAAuB;IACvC,IAAIA,EAAE,KAAK,IAAX,EAAiB;MACf,OAAO,IAAP;IACF;;IACA,OAAOI,UAAU,CAACD,OAAXC,CAAmBJ,EAAnBI,CAAP;EACD,CALD;;EAOA,IAAMqE,eAAe,GAAGlH,KAAK,CAACmH,WAANnH,CACtB,UAACkE,SAAD,EAAoBkD,gBAApB,EAAkD;IAChD,IAAIA,gBAAJ,EAAsB;MACpB7E,OAAO,CAACK,OAARL,CAAgB2B,SAAhB3B,IAA6B,CAA7BA;IACF;;IACA4B,YAAY,CAAC,IAAD,CAAZA;IACAG,YAAY,CAAC,IAAD,CAAZA;IACAZ,gBAAgB,CAAC,CAAC/B,eAAD,CAAD,CAAhB+B;IACAE,cAAc,CAACjC,eAAD,CAAdiC;IACAL,WAAW,CAAC,KAAD,CAAXA;IACAS,SAAS,CAACH,SAAD,CAATG;;IAEAtB,eAAe,CAACE,OAAhBF,GAA0B,YAAM;MAC9BM,MAAM,SAANA,UAAM,WAANA,GAAM,MAANA,SAAM,CAAEqE,QAARrE,CAAiB,CAAjBA,EAAoBoE,gBAAgB,GAAG7E,OAAO,CAACK,OAARL,CAAgBZ,eAAhBY,CAAH,GAAsC,CAA1ES;MACAjB,YAAY,IACVA,YAAY,CAAC;QACXgC,MAAM,EAAEqD,gBADG;QAEXE,IAAI,EAAEpD,SAFK;QAGXqD,EAAE,EAAE5F;MAHO,CAAD,CADdI;IAMD,CARDW;EASD,CArBqB1C,EAsBtB,CAAC2B,eAAD,EAAkBI,YAAlB,EAAgCiB,MAAhC,CAtBsBhD,CAAxB;EAyBAoB,yBAAyB,CAAC,YAAM;IAC9BsB,eAAe,CAACE,OAAhBF;IACAA,eAAe,CAACE,OAAhBF,GAA0BxC,IAA1BwC;EACD,CAHwB,EAGtB,CAACA,eAAe,CAACE,OAAjB,CAHsB,CAAzBxB;EAKA,IAAMoG,oBAAoB,GAAGxH,KAAK,CAACmH,WAANnH,CAC3B,UAACyH,CAAD,EAAoC;IAClC,IACE,CAAC,CAACA,CAAD,IACC,CACE,iCADF,EAEE,8BAFF,EAGE,kCAHF,EAIE,+BAJF,EAKEb,QALF,CAKWa,CAAC,CAACC,aALb,CADF,KAOAxD,SAAS,KAAK,IARhB,EASE;MACAgD,eAAe,CAAChD,SAAD,EAAYyD,OAAO,CAAC5D,MAAD,CAAnB,CAAfmD;IACF;EACD,CAd0BlH,EAe3B,CAACkH,eAAD,EAAkBnD,MAAlB,EAA0BG,SAA1B,CAf2BlE,CAA7B;;EAkBA,4BAAiCiB,uBAAuB,EAAxD;EAAA,IAAQ2G,oBAAoB,yBAApBA,oBAAR;;EACA,IAAMC,sBAAsB,GAAG3G,UAAU,CACvCsG,oBADuC,EAEvCrE,QAAQ,KAAK/C,QAAQ,CAAC0H,GAAtB3E,GAA4B,GAA5BA,GAAkC,GAFK,CAAzC;EAKA,IAAM4E,kBAAkB,GAAG/H,KAAK,CAACmH,WAANnH,CAAkB,YAAM;IACjDgC,WAAW,IAAIA,WAAW,EAA1BA;EACD,CAF0BhC,EAExB,CAACgC,WAAD,CAFwBhC,CAA3B;EAIA,IAAMmC,iBAAiB,GAAGnC,KAAK,CAACmH,WAANnH,CAAkB,YAAM;IAChDkC,qBAAqB,IAAIA,qBAAqB,EAA9CA;IACAsD,qBAAqB,CAAC,IAAD,CAArBA;IACAH,qBAAqB,CAAC,IAAD,CAArBA;IACAZ,cAAc,CAAC,KAAD,CAAdA;IACAkB,kBAAkB,CAAC,IAAD,CAAlBA;IACAZ,kBAAkB,CAAC,CAAD,CAAlBA;IACAG,iBAAiB,CAAC,CAAD,CAAjBA;EACD,CARyBlF,EAQvB,CAACkC,qBAAD,CARuBlC,CAA1B;EAUA,IAAMgI,+BAA+B,GAAGhI,KAAK,CAACmH,WAANnH,CACtC,UAACyH,CAAD,EAA+B;IAC7B;IACA,IACE,CAACA,CAAD,IACCA,CAAC,SAADA,KAAC,WAADA,KAAC,CAAEQ,YAAHR,CAAgBb,QAAhBa,CAAyB,WAAzBA,KAAyC,EAAC,SAADA,KAAC,WAADA,GAAC,MAADA,IAAC,CAAES,MAAH,MAAcjB,SAAS,CAAC7B,kBAAD,CAFnE,EAGE;MACA,QAAQM,eAAR;QACE,KAAKpE,gBAAgB,CAAC6G,IAAtB;UACEhG,iBAAiB;UACjB;;QACF,KAAKb,gBAAgB,CAAC8G,OAAtB;UACEL,kBAAkB;MALtB;IAOF;EACD,CAfqC/H,EAgBtC,CAACmC,iBAAD,EAAoB4F,kBAApB,EAAwC3C,kBAAxC,EAA4DM,eAA5D,CAhBsC1F,CAAxC;;EAmBA,IAAMqI,OAAO,GAAG,SAAVA,OAAU,CAACC,KAAD,EAA6B;IAC3C,IACEnF,QAAQ,KAAK/C,QAAQ,CAAC0H,GAAtB3E,IACAwB,kBADAxB,IAEAnC,iBAAiB,CAACsH,KAAD,CAFjBnF,IAGA0D,gBAJF,EAKE;MACA;IACF;;IAEA,IAAI,EAAC5D,cAAc,SAAdA,kBAAc,WAAdA,kBAAc,CAAEsF,SAAjB,CAAJ,EAAgC;MAC9B,IACE,CAACD,KAAK,CAACE,MAANF,IAAgBjH,eAAhBiH,IAAmCA,KAAK,CAACE,MAANF,IAAgBxF,MAAM,CAAE2F,UAAR3F,GAAqBzB,eAAzE,KACA,CAACwE,YAFH,EAGE;QACAC,eAAe,CAAC,IAAD,CAAfA;MACF;;MAEA;IACF;;IAEA,IAAI,CAAC9D,WAAD,IAAiBsB,QAAQ,IAAIgF,KAAK,CAACE,MAANF,IAAgBjH,eAAjD,EAAmE;MACjE;IACF;;IAEA,IAAI,CAACmD,WAAD,IAAgB8D,KAAK,CAACE,MAANF,IAAgBjH,eAAhC,IAAmDQ,OAAnD,IAA8DA,OAAO,CAAC6G,MAAR7G,GAAiB,CAAnF,EAAsF;MACpF;MACA,IAAII,gBAAJ,EAAsB;QACpB,IAAM0G,OAAO,GAAG1G,gBAAgB,CAACL,WAAD,CAAhC;;QACA,IAAI+G,OAAO,KAAK,SAAhB,EAA2B;UACzB/D,qBAAqB,CAAC,IAAD,CAArBA;UACA;QACF;MACF;;MAEA,IAAIhD,WAAW,KAAK,IAApB,EAA0B;QACxB;QACAlB,iBAAiB,CAACqC,QAAD,CAAjBrC;QACA6B,OAAO,CAACK,OAARL,CAAgBX,WAAhBW,IAA+BS,MAAM,SAANA,UAAM,WAANA,GAAM,MAANA,SAAM,CAAE4F,SAAR5F,GAAoB6F,CAAnDtG;MACF;;MAEAkC,cAAc,CAAC,IAAD,CAAdA;MACAM,kBAAkB,CAACuD,KAAK,CAACE,MAAP,CAAlBzD;MACAS,qBAAqB,CAAC5D,WAAD,CAArB4D;MACAH,qBAAqB,CAACxD,OAAO,CAACiH,KAARjH,CAAc,CAAC,CAAfA,EAAkB,CAAlBA,CAAD,CAArBwD;IACF;;IAEA,IAAIb,WAAJ,EAAiB;MACf,IAAIS,eAAc,GAAG,CAArB;;MACA,IAAIqD,KAAK,CAACS,MAANT,GAAe,CAAnB,EAAsB;QACpBrD,eAAc,GAAG,CAAjBA;MACD,CAFD,MAEO,IAAIqD,KAAK,CAACS,MAANT,GAAexF,MAAM,CAAE2F,UAAR3F,GAAqBgC,eAAxC,EAAyD;QAC9DG,eAAc,GAAGnC,MAAM,CAAE2F,UAAzBxD;MACD,CAFM,MAEA;QACLA,eAAc,GAAGqD,KAAK,CAACS,MAAvB9D;MACF;;MACAC,iBAAiB,CAACD,eAAD,CAAjBC;IACF;EACD,CA1DD;;EA4DA,IAAM8D,KAAK,GAAGhJ,KAAK,CAACmH,WAANnH,CACZ,UAACsI,KAAD,EAA6B;IAC3B,IAAI9D,WAAJ,EAAiB;MAAA;;MACf,IAAMyE,KAAK,GAAIhE,cAAc,GAAGqD,KAAK,CAACY,QAAvBjE,GAAmC,IAAlD;;MACA,IAAIA,cAAc,KAAK,CAAvB,EAA0B;QACxB9C,iBAAiB;MAClB,CAFD,MAEO,IAAI8C,cAAc,oBAAKnC,MAAM,CAAE2F,UAAb,MAAuB,IAAvB,IAAuBU,sBAAvB,GAAuBA,WAAvB,GAA2B,CAA3B,CAAlB,EAAiD;QACtDpB,kBAAkB;MACnB,CAFM,MAEA,IAAIkB,KAAK,GAAG,GAARA,IAAenE,eAAe,GAAGG,cAAlBH,GAAmChC,MAAM,CAAE2F,UAAR3F,GAAqB,CAA3E,EAA8E;QACnF6C,kBAAkB,CAACrE,gBAAgB,CAAC8G,OAAlB,CAAlBzC;MACD,CAFM,MAEA;QACLA,kBAAkB,CAACrE,gBAAgB,CAAC6G,IAAlB,CAAlBxC;MACF;IACF;;IACA,IAAIhB,kBAAJ,EAAwB;MACtBC,qBAAqB,CAAC,KAAD,CAArBA;IACF;EACD,CAjBW5E,EAkBZ,CACEmC,iBADF,EAEE4F,kBAFF,EAGE9C,cAHF,EAIEH,eAJF,EAKEN,WALF,EAMEG,kBANF,EAOE7B,MAPF,CAlBY9C,CAAd;;EA6BA,IAAMoJ,oBAAoB,GAAG,SAAvBA,oBAAuB,CAAC1C,OAAD,EAAsD;IACjF,IAAI,CAAClG,SAAD,IAAc,CAACsC,MAAnB,EAA2B;MACzB,OAAO,EAAP;IACF;;IAEA,IAAMuG,MAAM,GAAG3C,OAAO,KAAKnB,kBAA3B;IACA,IAAM+D,MAAM,GAAG5C,OAAO,KAAKtB,kBAA3B;;IAEA,IAAK,CAACiE,MAAD,IAAW,CAACC,MAAZ,IAAuB5D,eAA5B,EAA6C;MAC3C,OAAO,EAAP;IACF;;IAEA,IAAI6D,kBAAkB,aAAMtE,cAAN,EAAoB,IAApB,CAAtB;IACA,IAAIuE,kBAAkB,aAAM,CAAC,EAAD,GAAOvE,cAAc,GAAG,GAAjBA,GAAwBnC,MAAM,CAAC2F,UAA/BxD,GAA4C,CAAzD,EAA0D,GAA1D,CAAtB;IACA,IAAIwE,eAAe,GAAI,OAAO3G,MAAM,CAAC2F,UAAP3F,GAAoBmC,cAA3B,IAA8CnC,MAAM,CAAC2F,UAA5E;;IAEA,IAAI/C,eAAJ,EAAqB;MACnB,OAAO2D,MAAM,GAAG;QAAEK,SAAS,sCAA+BD,eAA/B,EAA8C,GAA9C;MAAX,CAAH,GAAoE,EAAjF;IACF;;IAEA,IAAIH,MAAJ,EAAY;MACV,OAAO;QACLK,SAAS,wBAAiBH,kBAAjB,EAAmC,SAAnC,CADJ;QAELI,eAAe,wBAAiBJ,kBAAjB,EAAmC,SAAnC;MAFV,CAAP;IAIF;;IACA,IAAIH,MAAJ,EAAY;MACV,OAAO;QACLM,SAAS,wBAAiBJ,kBAAjB,EAAmC,SAAnC,CADJ;QAELK,eAAe,wBAAiBL,kBAAjB,EAAmC,SAAnC,CAFV;QAGLG,SAAS,sCAA+BD,eAA/B,EAA8C,GAA9C;MAHJ,CAAP;IAKF;;IAEA,OAAO,EAAP;EACD,CAnCD;;EAqCAzJ,KAAK,CAAC2C,SAAN3C,CAAgB,YAAM;IACpB;IACA,IACE+F,eAAe,IACfA,eAAe,KAAKpE,eADpBoE,IAEA,CAACC,eAFDD,IAGA,CAACE,gBAJH,EAKE;MACA,IAAM4D,YAAY,GAAI7J,KAAK,CAACsG,QAANtG,CAAeuG,OAAfvG,CAAuBoC,QAAvBpC,EACnB8J,GADmB9J,CACf,UAACyG,KAAD,EAAM;QAAA,OAAK5F,QAAQ,CAAC4F,KAAK,CAACE,KAAP,EAAcnF,IAAd,CAAb;MAAgC,CADvBxB,EAEnB+J,IAFmB/J,CAEd,UAACyC,EAAD,EAAG;QAAA,OAAKA,EAAE,KAAKsD,eAAPtD,IAA0BA,EAAE,KAAKd,eAAtC;MAAqD,CAF1C3B,CAAtB;MAIA,IAAMoH,gBAAgB,GAAGyC,YAAY,KAAKlI,eAA1C;MACAY,OAAO,CAACK,OAARL,CAAgBwD,eAAhBxD,IAAmCS,MAAM,SAANA,UAAM,WAANA,GAAM,MAANA,SAAM,CAAE4F,SAAR5F,GAAoB6F,CAAvDtG;;MAEA,IAAIsE,gBAAJ,EAAsB;QACpBK,eAAe,CAACnB,eAAD,EAAkBqB,gBAAlB,CAAfF;MACD,CAFD,MAEO;QACLxG,iBAAiB,CAACqC,QAAD,CAAjBrC;QAEAgD,gBAAgB,CAAC,CAACqC,eAAD,EAAkBpE,eAAlB,CAAD,CAAhB+B;QACAS,YAAY,CAAC4B,eAAD,CAAZ5B;QACAG,YAAY,CAAC3C,eAAD,CAAZ2C;QACAV,cAAc,CAAC,IAAD,CAAdA;QACAL,WAAW,CAAC,IAAD,CAAXA;QACAS,SAAS,CAACoD,gBAAD,CAATpD,CARK,CAUL;;QACA,IAAI,CAAC7D,cAAc,CAAC6J,SAApB,EAA+B;UAC7BnC,sBAAsB,CAACoC,GAAvBpC;QACF;MACF;IACF,CAhCoB,CAkCpB;;;IACA,IAAI9B,eAAe,IAAIA,eAAe,KAAKpE,eAAvCoE,IAA0DC,eAA9D,EAA+E;MAC7E,IAAM3B,UAAS,GAAG1C,eAAlB;MACA,IAAMuC,UAAS,GAAG6B,eAAlB;;MACA,IAAII,sBAAJ,EAA4B;QAC1B5D,OAAO,CAACK,OAARL,CAAgB4D,sBAAhB5D,IAA0C,CAA1CA;MACF;;MAEAiD,qBAAqB,CAAC,IAAD,CAArBA;MACAH,qBAAqB,CAAC,IAAD,CAArBA;MACAZ,cAAc,CAAC,KAAD,CAAdA;MACAkB,kBAAkB,CAAC,IAAD,CAAlBA;MACAZ,kBAAkB,CAAC,CAAD,CAAlBA;MACAG,iBAAiB,CAAC,CAAD,CAAjBA;MACAtB,cAAc,CAACS,UAAD,CAAdT;MACAF,gBAAgB,CAAC,CAACW,UAAD,CAAD,CAAhBX;;MAEAhB,eAAe,CAACE,OAAhBF,GAA0B,YAAM;QAC9B,IAAI2B,UAAS,KAAK,IAAlB,EAAwB;UACtBrB,MAAM,SAANA,UAAM,WAANA,GAAM,MAANA,SAAM,CAAEqE,QAARrE,CAAiB,CAAjBA,EAAoBT,OAAO,CAACK,OAARL,CAAgB8B,UAAhB9B,CAApBS;QACF;;QACAoD,gBAAgB,IACdA,gBAAgB,CAAC;UACfrC,MAAM,EAAE,IADO;UAEfuD,IAAI,EAAEpD,UAFS;UAGfqD,EAAE,EAAElD;QAHW,CAAD,CADlB+B;MAMD,CAVD1D;IAWF,CA9DoB,CAgEpB;;;IACA,IAAI,CAACwD,mBAAD,IAAwBR,eAA5B,EAA6C;MAC3CkC,oBAAoB,CAClBX,SAAS,CAAC7B,kBAAD,CADS,EAElB4C,+BAFkB,EAGlB7E,QAAQ,KAAK/C,QAAQ,CAAC0H,GAAtB3E,GAA4B,GAA5BA,GAAkC,GAHhB,CAApByE;IAKF,CAvEoB,CAyEpB;;;IACA,IAAI1B,mBAAmB,KAAK5E,gBAAgB,CAAC6G,IAAzCjC,IAAiD,CAACR,eAAlDQ,IAAqEtE,WAAW,KAAK,IAAzF,EAA+F;MAC7FoB,MAAM,SAANA,UAAM,WAANA,GAAM,MAANA,SAAM,CAAEqE,QAARrE,CAAiB,CAAjBA,EAAoBT,OAAO,CAACK,OAARL,CAAgBX,WAAhBW,CAApBS;IACF,CA5EoB,CA8EpB;;;IACA,IAAI+C,eAAe,KAAKpE,eAApBoE,IAAuCF,YAA3C,EAAyD;MACvDC,eAAe,CAAC,KAAD,CAAfA;MACAxB,YAAY,CAAC,IAAD,CAAZA;MACAH,YAAY,CAAC,IAAD,CAAZA;MACAZ,WAAW,CAAC,KAAD,CAAXA;MACAG,gBAAgB,CAAC,CAAC/B,eAAD,CAAD,CAAhB+B;MACAE,cAAc,CAACjC,eAAD,CAAdiC;IACF;EACD,CAvFD5D,EAuFG,CACD2B,eADC,EAEDC,WAFC,EAGDiG,sBAHC,EAIDhC,YAJC,EAKDzD,QALC,EAMDyE,gBANC,EAOD9D,QAPC,EAQDmE,eARC,EASDjF,gBATC,EAUDoE,MAVC,EAWDlD,QAXC,EAYD4C,eAZC,EAaDE,gBAbC,EAcDG,gBAdC,EAeDD,sBAfC,EAgBDD,mBAhBC,EAiBDF,eAjBC,EAkBDhD,MAlBC,EAmBDoC,kBAnBC,EAoBDM,eApBC,EAqBDlB,WArBC,EAsBDwD,+BAtBC,EAuBDJ,oBAvBC,CAvFH5H;EAiHA,oBACEA,oBAACK,KAAD,EAAM6J;IACJC,SAAS,EAAC;EADN,GAEA7H,SAFA,EAES;IACbD,SAAS,EAAEpC,UAAU,aAEnBkD,QAAQ,KAAK/C,QAAQ,CAAC0H,GAAtB3E,IAAyB,eAFN,EAGnB,CAAC0D,gBAAD,IAAqBvD,QAArB,IAA6B,oBAHV,EAInB,CAACuD,gBAAD,IAAqBrC,WAArB,IAAgC,wBAJb,EAKnBqC,gBAAgB,yBALG,EAMnBxE,SANmB,CADR;IASbgG,OAAO,EAAEA,OATI;IAUbW,KAAK,EAAEA;EAVM,CAFT,CAAN,EAYe,aAEbhJ;IAAKqC,SAAS;EAAd,GACGgE,MAAM,CAACyD,GAAPzD,CAAW,UAACI,KAAD,EAA+B;IAAA;;IACzC,IAAMC,OAAO,GAAG7F,QAAQ,CAAC4F,KAAK,CAACE,KAAP,EAAcnF,IAAd,CAAxB;IACA,IAAM6H,MAAM,GAAG3C,OAAO,KAAKxC,SAAZwC,IAAyBA,OAAO,KAAKnB,kBAApD;IACA,IAAM6E,kBAAkB,GAAG9G,QAAQ,IAAIoD,OAAO,MAAM3C,MAAM,GAAGG,SAAH,GAAeG,SAA3B,CAA9C;IACA,IAAMgG,gBAAgB,GACpBhB,MAAM,IAAI3C,OAAO,KAAKtB,kBAAtBiE,IAA6C3C,OAAO,KAAKrC,SAAZqC,IAAyB3C,MADxE;IAGA,oBACE/D;MACEqC,SAAS,EAAEpC,UAAU,oBAEnByG,OAAO,KAAK9E,WAAZ8E,IAAuB,yBAFJ,EAGnBA,OAAO,KAAKxC,SAAZwC,IAAqB,uBAHF,EAInBA,OAAO,KAAKrC,SAAZqC,IAAqB,uBAJF,EAKnBA,OAAO,KAAKnB,kBAAZmB,IAA8B,kCALX,EAMnBA,OAAO,KAAKtB,kBAAZsB,IAA8B,kCANX,EAOnBhB,eAAe,KAAKpE,gBAAgB,CAAC8G,OAArC1C,IAA4C,qCAPzB,EASnBA,eAAe,KAAKpE,gBAAgB,CAAC6G,IAArCzC,IAAyC,oCATtB,CADvB;MAaE4E,cAAc,EAAEF,kBAAkB,GAAG5C,oBAAH,GAA0B3D,SAb9D;MAcE0G,GAAG,EAAE,aAACC,EAAD,EAAG;QAAA,OAAK9D,OAAO,KAAK7C,SAAZ6C,KAA0B7D,UAAU,CAACD,OAAXC,CAAmB6D,OAAnB7D,IAA8B2H,EAAxD9D,CAAL;MAAiE,CAd3E;MAeE+D,KAAK,EAAErB,oBAAoB,CAAC1C,OAAD,CAf7B;MAgBEgE,GAAG,EAAEhE;IAhBP,GAgBe,aAEb1G;MACEqC,SAAS,sBADX;MAEEoI,KAAK,EAAE;QACLE,SAAS,EAAEN,gBAAgB,GAAG,2BAAE9H,OAAO,CAACK,OAARL,CAAgBmE,OAAhBnE,CAAF,MAA0B,IAA1B,IAA0BqI,gCAA1B,GAA0BA,qBAA1B,GAA8B,CAA9B,CAAH,GAAsC/G;MAD5D;IAFT,GAII,aAEF7D,oBAACY,qBAAD,EAAsB;MACpBiK,QAAQ,EAAEnE,OAAO,KAAKrC,SAAZqC,IAAyBA,OAAO,KAAKtB;IAD3B,CAAtB,EAGGqB,KAHH,CANF,CAlBF,CADF;EAiCD,CAxCAJ,CADH,CAdF,CADF;AA4DD,CAjdM","names":["React","classNames","noop","animationEvent","Platform","Touch","useConfigProvider","useSplitCol","canUseDOM","useDOM","blurActiveElement","useScroll","NavTransitionProvider","getNavId","warnOnce","usePlatform","swipeBackExcluded","useWaitTransitionFinish","useTimeout","usePrevious","useIsomorphicLayoutEffect","SWIPE_BACK_AREA","SwipeBackResults","scrollsCache","warn","View","_ref","activePanelProp","activePanel","history","nav","onTransition","onSwipeBack","onSwipeBackStart","onSwipeBackCancelProp","onSwipeBackCancel","children","className","restProps","scrolls","useRef","id","afterTransition","useEffect","current","panelNodes","window","document","scroll","configProvider","splitCol","platform","useState","_React$useState2","animated","setAnimated","_React$useState4","visiblePanels","setVisiblePanels","_React$useState6","setActivePanel","undefined","_React$useState8","isBack","setIsBack","_React$useState10","prevPanel","setPrevPanel","_React$useState12","nextPanel","setNextPanel","_React$useState14","swipingBack","setSwipingBack","_React$useState16","swipeBackPrevented","setSwipeBackPrevented","_React$useState18","swipeBackStartX","setSwipeBackStartX","_React$useState20","swipeBackShift","setSwipeBackShift","_React$useState22","swipeBackNextPanel","setSwipeBackNextPanel","_React$useState24","swipeBackPrevPanel","setSwipeBackPrevPanel","_React$useState26","swipeBackResult","setSwipeBackResult","_React$useState28","browserSwipe","setBrowserSwipe","prevActivePanel","prevSwipingBack","prevBrowserSwipe","prevSwipeBackResult","prevSwipeBackPrevPanel","prevOnTransition","panels","Children","toArray","filter","panel","panelId","props","includes","disableAnimation","transitionMotionEnabled","animate","VKCOM","pickPanel","flushTransition","useCallback","isBackTransition","scrollTo","from","to","transitionEndHandler","e","animationName","Boolean","waitTransitionFinish","animationFinishTimeout","IOS","onSwipeBackSuccess","swipingBackTransitionEndHandler","propertyName","target","fail","success","onMoveX","event","isWebView","startX","innerWidth","length","payload","getScroll","y","slice","shiftX","onEnd","speed","duration","_innerWidth","calcPanelSwipeStyles","isPrev","isNext","prevPanelTranslate","nextPanelTranslate","prevPanelShadow","boxShadow","transform","WebkitTransform","firstLayerId","map","find","supported","set","_extends","Component","isTransitionTarget","compensateScroll","onAnimationEnd","ref","el","style","key","marginTop","_scrolls$current$pane","entering"],"sources":["/Users/pitus_anonimous/Desktop/youth_bit_hack/youth_bit_vk/node_modules/@vkontakte/vkui/src/components/View/View.tsx"],"sourcesContent":["import * as React from 'react';\nimport { classNames, noop } from '@vkontakte/vkjs';\nimport { animationEvent } from '../../lib/supportEvents';\nimport { Platform } from '../../lib/platform';\nimport { Touch, TouchEvent } from '../Touch/Touch';\nimport { useConfigProvider } from '../ConfigProvider/ConfigProviderContext';\nimport { useSplitCol } from '../SplitCol/SplitCol';\nimport { canUseDOM, useDOM, blurActiveElement } from '../../lib/dom';\nimport { useScroll } from '../AppRoot/ScrollContext';\nimport { NavTransitionProvider } from '../NavTransitionContext/NavTransitionContext';\nimport { getNavId, NavIdProps } from '../../lib/getNavId';\nimport { warnOnce } from '../../lib/warnOnce';\nimport { usePlatform } from '../../hooks/usePlatform';\nimport { swipeBackExcluded } from './utils';\nimport { useWaitTransitionFinish } from '../../hooks/useWaitTransitionFinish';\nimport { useTimeout } from '../../hooks/useTimeout';\nimport { usePrevious } from '../../hooks/usePrevious';\nimport { useIsomorphicLayoutEffect } from '../../lib/useIsomorphicLayoutEffect';\nimport styles from './View.module.css';\nimport iosStyles from './ViewIOS.module.css';\n\nconst SWIPE_BACK_AREA = 70;\n\nenum SwipeBackResults {\n  fail = 1,\n  success,\n}\n\ninterface Scrolls {\n  [index: string]: number | undefined;\n}\n\ninterface ViewsScrolls {\n  [index: string]: Scrolls;\n}\n\nexport let scrollsCache: ViewsScrolls = {};\n\nexport interface ViewProps extends React.HTMLAttributes<HTMLElement>, NavIdProps {\n  activePanel: string;\n  onTransition?(params: { isBack: boolean; from: string; to: string }): void;\n  /**\n   * callback свайпа назад\n   */\n  onSwipeBack?(): void;\n  /**\n   * callback начала анимации свайпа назад.\n   *\n   * Чтобы остановить свайп назад, возвращайте `\"prevent\"`.\n   */\n  onSwipeBackStart?(activePanel: string | null): void | 'prevent';\n  /**\n   * callback завершения анимации отмененного пользователем свайпа\n   */\n  onSwipeBackCancel?(): void;\n  history?: string[];\n}\n\nexport interface ViewState {\n  animated: boolean;\n\n  visiblePanels: string[];\n  activePanel: string | null;\n  isBack: boolean | undefined;\n  prevPanel: string | null;\n  nextPanel: string | null;\n\n  swipingBack: boolean;\n  swipeBackStartX: number;\n  swipeBackShift: number;\n  swipeBackNextPanel: string | null;\n  swipeBackPrevPanel: string | null;\n  swipeBackResult: SwipeBackResults | null;\n\n  browserSwipe: boolean;\n}\n\nconst warn = warnOnce('View');\n\n/**\n * @see https://vkcom.github.io/VKUI/#/View\n */\nexport const View = ({\n  activePanel: activePanelProp,\n  history,\n  nav,\n  onTransition,\n  onSwipeBack,\n  onSwipeBackStart,\n  onSwipeBackCancel: onSwipeBackCancelProp,\n  children,\n  className,\n  ...restProps\n}: ViewProps) => {\n  const scrolls = React.useRef(scrollsCache[getNavId({ nav, id: restProps.id }) as string] || {});\n  const afterTransition = React.useRef(noop);\n\n  React.useEffect(() => () => {\n    const id = getNavId({ nav, id: restProps.id });\n    if (id) {\n      scrollsCache[id] = scrolls.current;\n    }\n  });\n\n  const panelNodes = React.useRef<{ [id: string]: HTMLDivElement | null }>({});\n\n  const { window, document } = useDOM();\n  const scroll = useScroll();\n  const configProvider = useConfigProvider();\n  const splitCol = useSplitCol();\n  const platform = usePlatform();\n\n  const [animated, setAnimated] = React.useState(false);\n\n  const [visiblePanels, setVisiblePanels] = React.useState([activePanelProp]);\n  const [activePanel, setActivePanel] = React.useState<string | null>(activePanelProp);\n  const [isBack, setIsBack] = React.useState<boolean | undefined>(undefined);\n  const [prevPanel, setPrevPanel] = React.useState<string | null>(null);\n  const [nextPanel, setNextPanel] = React.useState<string | null>(null);\n\n  const [swipingBack, setSwipingBack] = React.useState<boolean>(false);\n  const [swipeBackPrevented, setSwipeBackPrevented] = React.useState<boolean>(false);\n  const [swipeBackStartX, setSwipeBackStartX] = React.useState<number>(0);\n  const [swipeBackShift, setSwipeBackShift] = React.useState<number>(0);\n  const [swipeBackNextPanel, setSwipeBackNextPanel] = React.useState<string | null>(null);\n  const [swipeBackPrevPanel, setSwipeBackPrevPanel] = React.useState<string | null>(null);\n  const [swipeBackResult, setSwipeBackResult] = React.useState<SwipeBackResults | null>(null);\n\n  const [browserSwipe, setBrowserSwipe] = React.useState(false);\n\n  const prevActivePanel = usePrevious(activePanelProp);\n  const prevSwipingBack = usePrevious(swipingBack);\n  const prevBrowserSwipe = usePrevious(browserSwipe);\n  const prevSwipeBackResult = usePrevious(swipeBackResult);\n  const prevSwipeBackPrevPanel = usePrevious(swipeBackPrevPanel);\n  const prevOnTransition = usePrevious(onTransition);\n\n  const panels = (React.Children.toArray(children) as React.ReactElement[]).filter(\n    (panel: React.ReactElement) => {\n      const panelId = getNavId(panel.props, warn);\n\n      return (\n        (panelId !== undefined && visiblePanels.includes(panelId)) ||\n        panelId === swipeBackPrevPanel ||\n        panelId === swipeBackNextPanel\n      );\n    },\n  );\n\n  const disableAnimation =\n    configProvider?.transitionMotionEnabled === false ||\n    !splitCol?.animate ||\n    platform === Platform.VKCOM;\n\n  const pickPanel = (id: string | null) => {\n    if (id === null) {\n      return null;\n    }\n    return panelNodes.current[id];\n  };\n\n  const flushTransition = React.useCallback(\n    (prevPanel: string, isBackTransition: boolean) => {\n      if (isBackTransition) {\n        scrolls.current[prevPanel] = 0;\n      }\n      setPrevPanel(null);\n      setNextPanel(null);\n      setVisiblePanels([activePanelProp]);\n      setActivePanel(activePanelProp);\n      setAnimated(false);\n      setIsBack(undefined);\n\n      afterTransition.current = () => {\n        scroll?.scrollTo(0, isBackTransition ? scrolls.current[activePanelProp] : 0);\n        onTransition &&\n          onTransition({\n            isBack: isBackTransition,\n            from: prevPanel,\n            to: activePanelProp,\n          });\n      };\n    },\n    [activePanelProp, onTransition, scroll],\n  );\n\n  useIsomorphicLayoutEffect(() => {\n    afterTransition.current();\n    afterTransition.current = noop;\n  }, [afterTransition.current]);\n\n  const transitionEndHandler = React.useCallback(\n    (e?: React.AnimationEvent): void => {\n      if (\n        (!e ||\n          [\n            'vkui-animation-ios-next-forward',\n            'vkui-animation-ios-prev-back',\n            'vkui-animation-view-next-forward',\n            'vkui-animation-view-prev-back',\n          ].includes(e.animationName)) &&\n        prevPanel !== null\n      ) {\n        flushTransition(prevPanel, Boolean(isBack));\n      }\n    },\n    [flushTransition, isBack, prevPanel],\n  );\n\n  const { waitTransitionFinish } = useWaitTransitionFinish();\n  const animationFinishTimeout = useTimeout(\n    transitionEndHandler,\n    platform === Platform.IOS ? 600 : 300,\n  );\n\n  const onSwipeBackSuccess = React.useCallback(() => {\n    onSwipeBack && onSwipeBack();\n  }, [onSwipeBack]);\n\n  const onSwipeBackCancel = React.useCallback(() => {\n    onSwipeBackCancelProp && onSwipeBackCancelProp();\n    setSwipeBackPrevPanel(null);\n    setSwipeBackNextPanel(null);\n    setSwipingBack(false);\n    setSwipeBackResult(null);\n    setSwipeBackStartX(0);\n    setSwipeBackShift(0);\n  }, [onSwipeBackCancelProp]);\n\n  const swipingBackTransitionEndHandler = React.useCallback(\n    (e?: TransitionEvent): void => {\n      // indexOf because of vendor prefixes in old browsers\n      if (\n        !e ||\n        (e?.propertyName.includes('transform') && e?.target === pickPanel(swipeBackNextPanel))\n      ) {\n        switch (swipeBackResult) {\n          case SwipeBackResults.fail:\n            onSwipeBackCancel();\n            break;\n          case SwipeBackResults.success:\n            onSwipeBackSuccess();\n        }\n      }\n    },\n    [onSwipeBackCancel, onSwipeBackSuccess, swipeBackNextPanel, swipeBackResult],\n  );\n\n  const onMoveX = (event: TouchEvent): void => {\n    if (\n      platform !== Platform.IOS ||\n      swipeBackPrevented ||\n      swipeBackExcluded(event) ||\n      disableAnimation\n    ) {\n      return;\n    }\n\n    if (!configProvider?.isWebView) {\n      if (\n        (event.startX <= SWIPE_BACK_AREA || event.startX >= window!.innerWidth - SWIPE_BACK_AREA) &&\n        !browserSwipe\n      ) {\n        setBrowserSwipe(true);\n      }\n\n      return;\n    }\n\n    if (!onSwipeBack || (animated && event.startX <= SWIPE_BACK_AREA)) {\n      return;\n    }\n\n    if (!swipingBack && event.startX <= SWIPE_BACK_AREA && history && history.length > 1) {\n      // Начался свайп назад\n      if (onSwipeBackStart) {\n        const payload = onSwipeBackStart(activePanel);\n        if (payload === 'prevent') {\n          setSwipeBackPrevented(true);\n          return;\n        }\n      }\n\n      if (activePanel !== null) {\n        // Note: вызываем закрытие клавиатуры. В iOS это нативное поведение при свайпе.\n        blurActiveElement(document);\n        scrolls.current[activePanel] = scroll?.getScroll().y;\n      }\n\n      setSwipingBack(true);\n      setSwipeBackStartX(event.startX);\n      setSwipeBackPrevPanel(activePanel);\n      setSwipeBackNextPanel(history.slice(-2)[0]);\n    }\n\n    if (swipingBack) {\n      let swipeBackShift = 0;\n      if (event.shiftX < 0) {\n        swipeBackShift = 0;\n      } else if (event.shiftX > window!.innerWidth - swipeBackStartX) {\n        swipeBackShift = window!.innerWidth;\n      } else {\n        swipeBackShift = event.shiftX;\n      }\n      setSwipeBackShift(swipeBackShift);\n    }\n  };\n\n  const onEnd = React.useCallback(\n    (event: TouchEvent): void => {\n      if (swipingBack) {\n        const speed = (swipeBackShift / event.duration) * 1000;\n        if (swipeBackShift === 0) {\n          onSwipeBackCancel();\n        } else if (swipeBackShift >= (window!.innerWidth ?? 0)) {\n          onSwipeBackSuccess();\n        } else if (speed > 250 || swipeBackStartX + swipeBackShift > window!.innerWidth / 2) {\n          setSwipeBackResult(SwipeBackResults.success);\n        } else {\n          setSwipeBackResult(SwipeBackResults.fail);\n        }\n      }\n      if (swipeBackPrevented) {\n        setSwipeBackPrevented(false);\n      }\n    },\n    [\n      onSwipeBackCancel,\n      onSwipeBackSuccess,\n      swipeBackShift,\n      swipeBackStartX,\n      swipingBack,\n      swipeBackPrevented,\n      window,\n    ],\n  );\n\n  const calcPanelSwipeStyles = (panelId: string | undefined): React.CSSProperties => {\n    if (!canUseDOM || !window) {\n      return {};\n    }\n\n    const isPrev = panelId === swipeBackPrevPanel;\n    const isNext = panelId === swipeBackNextPanel;\n\n    if ((!isPrev && !isNext) || swipeBackResult) {\n      return {};\n    }\n\n    let prevPanelTranslate = `${swipeBackShift}px`;\n    let nextPanelTranslate = `${-50 + (swipeBackShift * 100) / window.innerWidth / 2}%`;\n    let prevPanelShadow = (0.3 * (window.innerWidth - swipeBackShift)) / window.innerWidth;\n\n    if (swipeBackResult) {\n      return isPrev ? { boxShadow: `-2px 0 12px rgba(0, 0, 0, ${prevPanelShadow})` } : {};\n    }\n\n    if (isNext) {\n      return {\n        transform: `translate3d(${nextPanelTranslate}, 0, 0)`,\n        WebkitTransform: `translate3d(${nextPanelTranslate}, 0, 0)`,\n      };\n    }\n    if (isPrev) {\n      return {\n        transform: `translate3d(${prevPanelTranslate}, 0, 0)`,\n        WebkitTransform: `translate3d(${prevPanelTranslate}, 0, 0)`,\n        boxShadow: `-2px 0 12px rgba(0, 0, 0, ${prevPanelShadow})`,\n      };\n    }\n\n    return {};\n  };\n\n  React.useEffect(() => {\n    // Нужен переход\n    if (\n      prevActivePanel &&\n      prevActivePanel !== activePanelProp &&\n      !prevSwipingBack &&\n      !prevBrowserSwipe\n    ) {\n      const firstLayerId = (React.Children.toArray(children) as React.ReactElement[])\n        .map((panel) => getNavId(panel.props, warn))\n        .find((id) => id === prevActivePanel || id === activePanelProp);\n\n      const isBackTransition = firstLayerId === activePanelProp;\n      scrolls.current[prevActivePanel] = scroll?.getScroll().y;\n\n      if (disableAnimation) {\n        flushTransition(prevActivePanel, isBackTransition);\n      } else {\n        blurActiveElement(document);\n\n        setVisiblePanels([prevActivePanel, activePanelProp]);\n        setPrevPanel(prevActivePanel);\n        setNextPanel(activePanelProp);\n        setActivePanel(null);\n        setAnimated(true);\n        setIsBack(isBackTransition);\n\n        // Фолбек анимации перехода\n        if (!animationEvent.supported) {\n          animationFinishTimeout.set();\n        }\n      }\n    }\n\n    // Закончилась анимация свайпа назад\n    if (prevActivePanel && prevActivePanel !== activePanelProp && prevSwipingBack) {\n      const nextPanel = activePanelProp;\n      const prevPanel = prevActivePanel;\n      if (prevSwipeBackPrevPanel) {\n        scrolls.current[prevSwipeBackPrevPanel] = 0;\n      }\n\n      setSwipeBackPrevPanel(null);\n      setSwipeBackNextPanel(null);\n      setSwipingBack(false);\n      setSwipeBackResult(null);\n      setSwipeBackStartX(0);\n      setSwipeBackShift(0);\n      setActivePanel(nextPanel);\n      setVisiblePanels([nextPanel]);\n\n      afterTransition.current = () => {\n        if (nextPanel !== null) {\n          scroll?.scrollTo(0, scrolls.current[nextPanel]);\n        }\n        prevOnTransition &&\n          prevOnTransition({\n            isBack: true,\n            from: prevPanel,\n            to: nextPanel,\n          });\n      };\n    }\n\n    // Началась анимация завершения свайпа назад.\n    if (!prevSwipeBackResult && swipeBackResult) {\n      waitTransitionFinish(\n        pickPanel(swipeBackNextPanel),\n        swipingBackTransitionEndHandler,\n        platform === Platform.IOS ? 600 : 300,\n      );\n    }\n\n    // Если свайп назад отменился (когда пользователь недостаточно сильно свайпнул)\n    if (prevSwipeBackResult === SwipeBackResults.fail && !swipeBackResult && activePanel !== null) {\n      scroll?.scrollTo(0, scrolls.current[activePanel]);\n    }\n\n    // Закончился Safari свайп\n    if (prevActivePanel !== activePanelProp && browserSwipe) {\n      setBrowserSwipe(false);\n      setNextPanel(null);\n      setPrevPanel(null);\n      setAnimated(false);\n      setVisiblePanels([activePanelProp]);\n      setActivePanel(activePanelProp);\n    }\n  }, [\n    activePanelProp,\n    activePanel,\n    animationFinishTimeout,\n    browserSwipe,\n    children,\n    disableAnimation,\n    document,\n    flushTransition,\n    onSwipeBackStart,\n    panels,\n    platform,\n    prevActivePanel,\n    prevBrowserSwipe,\n    prevOnTransition,\n    prevSwipeBackPrevPanel,\n    prevSwipeBackResult,\n    prevSwipingBack,\n    scroll,\n    swipeBackNextPanel,\n    swipeBackResult,\n    swipingBack,\n    swipingBackTransitionEndHandler,\n    waitTransitionFinish,\n  ]);\n\n  return (\n    <Touch\n      Component=\"section\"\n      {...restProps}\n      className={classNames(\n        styles['View'],\n        platform === Platform.IOS && iosStyles['View--ios'],\n        !disableAnimation && animated && styles['View--animated'],\n        !disableAnimation && swipingBack && styles['View--swiping-back'],\n        disableAnimation && styles['View--no-motion'],\n        className,\n      )}\n      onMoveX={onMoveX}\n      onEnd={onEnd}\n    >\n      <div className={styles['View__panels']}>\n        {panels.map((panel: React.ReactElement) => {\n          const panelId = getNavId(panel.props, warn);\n          const isPrev = panelId === prevPanel || panelId === swipeBackPrevPanel;\n          const isTransitionTarget = animated && panelId === (isBack ? prevPanel : nextPanel);\n          const compensateScroll =\n            isPrev || panelId === swipeBackNextPanel || (panelId === nextPanel && isBack);\n\n          return (\n            <div\n              className={classNames(\n                styles['View__panel'],\n                panelId === activePanel && iosStyles['View__panel--active'],\n                panelId === prevPanel && styles['View__panel--prev'],\n                panelId === nextPanel && styles['View__panel--next'],\n                panelId === swipeBackPrevPanel && iosStyles['View__panel--swipe-back-prev'],\n                panelId === swipeBackNextPanel && iosStyles['View__panel--swipe-back-next'],\n                swipeBackResult === SwipeBackResults.success &&\n                  iosStyles['View__panel--swipe-back-success'],\n                swipeBackResult === SwipeBackResults.fail &&\n                  iosStyles['View__panel--swipe-back-failed'],\n              )}\n              onAnimationEnd={isTransitionTarget ? transitionEndHandler : undefined}\n              ref={(el) => panelId !== undefined && (panelNodes.current[panelId] = el)}\n              style={calcPanelSwipeStyles(panelId)}\n              key={panelId}\n            >\n              <div\n                className={styles['View__panel-in']}\n                style={{\n                  marginTop: compensateScroll ? -(scrolls.current[panelId] ?? 0) : undefined,\n                }}\n              >\n                <NavTransitionProvider\n                  entering={panelId === nextPanel || panelId === swipeBackNextPanel}\n                >\n                  {panel}\n                </NavTransitionProvider>\n              </div>\n            </div>\n          );\n        })}\n      </div>\n    </Touch>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}