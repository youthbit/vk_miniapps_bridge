{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"defaultValue\", \"grow\", \"style\", \"onResize\", \"className\", \"getRootRef\", \"getRef\", \"rows\", \"maxHeight\", \"status\", \"onChange\", \"value\"];\nimport * as React from 'react';\nimport { classNames } from '@vkontakte/vkjs';\nimport { FormField } from '../FormField/FormField';\nimport { useEnsuredControl } from '../../hooks/useEnsuredControl';\nimport { useExternRef } from '../../hooks/useExternRef';\nimport { useAdaptivity } from '../../hooks/useAdaptivity';\nimport { getSizeYClassName } from '../../helpers/getSizeYClassName';\n/**\n * @see https://vkcom.github.io/VKUI/#/Textarea\n */\n\nexport var Textarea = function Textarea(_ref) {\n  var _ref$defaultValue = _ref.defaultValue,\n      defaultValue = _ref$defaultValue === void 0 ? '' : _ref$defaultValue,\n      _ref$grow = _ref.grow,\n      grow = _ref$grow === void 0 ? true : _ref$grow,\n      style = _ref.style,\n      onResize = _ref.onResize,\n      className = _ref.className,\n      getRootRef = _ref.getRootRef,\n      getRef = _ref.getRef,\n      _ref$rows = _ref.rows,\n      rows = _ref$rows === void 0 ? 2 : _ref$rows,\n      maxHeight = _ref.maxHeight,\n      status = _ref.status,\n      onChangeProp = _ref.onChange,\n      valueProp = _ref.value,\n      restProps = _objectWithoutProperties(_ref, _excluded);\n\n  var _useEnsuredControl = useEnsuredControl({\n    defaultValue: defaultValue,\n    onChange: onChangeProp,\n    value: valueProp\n  }),\n      _useEnsuredControl2 = _slicedToArray(_useEnsuredControl, 2),\n      value = _useEnsuredControl2[0],\n      onChange = _useEnsuredControl2[1];\n\n  var currentScrollHeight = React.useRef();\n  var elementRef = useExternRef(getRef);\n\n  var _useAdaptivity = useAdaptivity(),\n      sizeY = _useAdaptivity.sizeY; // autosize input\n\n\n  React.useEffect(function () {\n    var el = elementRef.current;\n\n    if (grow && el !== null && el !== void 0 && el.offsetParent) {\n      el.style.height = '';\n      el.style.height = \"\".concat(el.scrollHeight, \"px\");\n\n      if (el.scrollHeight !== currentScrollHeight.current && onResize) {\n        onResize(el);\n        currentScrollHeight.current = el.scrollHeight;\n      }\n    }\n  }, [grow, value, sizeY, elementRef, onResize]);\n  return /*#__PURE__*/React.createElement(FormField, {\n    className: classNames(\"vkuiTextarea\", getSizeYClassName(\"vkuiTextarea\", sizeY), className),\n    style: style,\n    getRootRef: getRootRef,\n    disabled: restProps.disabled,\n    status: status\n  }, /*#__PURE__*/React.createElement(\"textarea\", _extends({}, restProps, {\n    style: {\n      maxHeight: maxHeight\n    },\n    rows: rows,\n    className: \"vkuiTextarea__el\",\n    value: value,\n    onChange: onChange,\n    ref: elementRef\n  })));\n};","map":{"version":3,"mappings":";;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,UAAT,QAA2B,iBAA3B;AACA,SAASC,SAAT,QAA0C,wBAA1C;AAEA,SAASC,iBAAT,QAAkC,+BAAlC;AACA,SAASC,YAAT,QAA6B,0BAA7B;AACA,SAASC,aAAT,QAA8B,2BAA9B;AACA,SAASC,iBAAT,QAAkC,iCAAlC;AAcA;AACA;AACA;;AACA,OAAO,IAAMC,QAAQ,GAAG,SAAXA,QAAW,CAAHC,IAAG,EAcH;EAAA,6BAbnBC,YAamB;EAAA,IAbnBA,YAAY,kCAAG,EAAH,GAAKC,iBAaE;EAAA,IAbFC,iBACjBC,IAYmB;EAAA,IAZnBA,IAAI,0BAAG,IAAH,GAAOD,SAYQ;EAAA,IAXnBE,KAAK,QAALA,KAWmB;EAAA,IAVnBC,QAAQ,QAARA,QAUmB;EAAA,IATnBC,SAAS,QAATA,SASmB;EAAA,IARnBC,UAAU,QAAVA,UAQmB;EAAA,IAPnBC,MAAM,QAANA,MAOmB;EAAA,IAPbC,iBACNC,IAMmB;EAAA,IANnBA,IAAI,0BAAG,CAAH,GAAID,SAMW;EAAA,IALnBE,SAAS,QAATA,SAKmB;EAAA,IAJnBC,MAAM,QAANA,MAImB;EAAA,IAHTC,YAAY,QAAtBC,QAGmB;EAAA,IAFZC,SAAS,QAAhBC,KAEmB;EAAA,IADhBC,SAAS,4CACO;;EACnB,yBAA0BvB,iBAAiB,CAAC;IAC1CM,YAAY,EAAZA,YAD0C;IAE1Cc,QAAQ,EAAED,YAFgC;IAG1CG,KAAK,EAAED;EAHmC,CAAD,CAA3C;EAAA,IAIEG,2DAJF;EAAA,IAAOF,KAAK,yBAAZ;EAAA,IAAcF,QAAQ,yBAAtB;;EAKA,IAAMK,mBAAmB,GAAG5B,KAAK,CAAC6B,MAAN7B,EAA5B;EACA,IAAM8B,UAAU,GAAG1B,YAAY,CAACa,MAAD,CAA/B;;EACA,qBAAkBZ,aAAa,EAA/B;EAAA,IAAQ0B,KAAK,kBAALA,KAAR,CARmB,CAUnB;;;EACA/B,KAAK,CAACgC,SAANhC,CAAgB,YAAM;IACpB,IAAMiC,EAAE,GAAGH,UAAU,CAACI,OAAtB;;IAEA,IAAItB,IAAI,IAAIqB,EAAE,SAAVrB,IAAQqB,EAAE,WAAVrB,IAAQqB,EAAE,CAAEE,YAAhB,EAA8B;MAC5BF,EAAE,CAACpB,KAAHoB,CAASG,MAATH,GAAkB,EAAlBA;MACAA,EAAE,CAACpB,KAAHoB,CAASG,MAATH,GAAe,UAAMA,EAAE,CAACI,YAAT,EAAqB,IAArB,CAAfJ;;MAEA,IAAIA,EAAE,CAACI,YAAHJ,KAAoBL,mBAAmB,CAACM,OAAxCD,IAAmDnB,QAAvD,EAAiE;QAC/DA,QAAQ,CAACmB,EAAD,CAARnB;QACAc,mBAAmB,CAACM,OAApBN,GAA8BK,EAAE,CAACI,YAAjCT;MACF;IACF;EACD,CAZD5B,EAYG,CAACY,IAAD,EAAOa,KAAP,EAAcM,KAAd,EAAqBD,UAArB,EAAiChB,QAAjC,CAZHd;EAcA,oBACEA,oBAACE,SAAD,EAAU;IACRa,SAAS,EAAEd,UAAU,iBAEnBK,iBAAiB,iBAAqByB,KAArB,CAFE,EAGnBhB,SAHmB,CADb;IAMRF,KAAK,EAAEA,KANC;IAORG,UAAU,EAAEA,UAPJ;IAQRsB,QAAQ,EAAEZ,SAAS,CAACY,QARZ;IASRjB,MAAM,EAAEA;EATA,CAAV,EASiB,aAEfrB,6CACM0B,SADN,EACe;IACbb,KAAK,EAAE;MAAEO,SAAS,EAATA;IAAF,CADM;IAEbD,IAAI,EAAEA,IAFO;IAGbJ,SAAS,oBAHI;IAIbU,KAAK,EAAEA,KAJM;IAKbF,QAAQ,EAAEA,QALG;IAMbgB,GAAG,EAAET;EANQ,CADf,EAXF,CADF;AAuBD,CA9DM","names":["React","classNames","FormField","useEnsuredControl","useExternRef","useAdaptivity","getSizeYClassName","Textarea","_ref","defaultValue","_ref$defaultValue","_ref$grow","grow","style","onResize","className","getRootRef","getRef","_ref$rows","rows","maxHeight","status","onChangeProp","onChange","valueProp","value","restProps","_useEnsuredControl2","currentScrollHeight","useRef","elementRef","sizeY","useEffect","el","current","offsetParent","height","scrollHeight","disabled","ref"],"sources":["/Users/pitus_anonimous/Desktop/youth_bit_hack/youth_bit_vk/node_modules/@vkontakte/vkui/src/components/Textarea/Textarea.tsx"],"sourcesContent":["import * as React from 'react';\nimport { classNames } from '@vkontakte/vkjs';\nimport { FormField, FormFieldProps } from '../FormField/FormField';\nimport { HasRef, HasRootRef } from '../../types';\nimport { useEnsuredControl } from '../../hooks/useEnsuredControl';\nimport { useExternRef } from '../../hooks/useExternRef';\nimport { useAdaptivity } from '../../hooks/useAdaptivity';\nimport { getSizeYClassName } from '../../helpers/getSizeYClassName';\nimport styles from './Textarea.module.css';\n\nexport interface TextareaProps\n  extends React.TextareaHTMLAttributes<HTMLTextAreaElement>,\n    HasRef<HTMLTextAreaElement>,\n    HasRootRef<HTMLElement>,\n    Pick<React.CSSProperties, 'maxHeight'>,\n    Pick<FormFieldProps, 'status'> {\n  grow?: boolean;\n  onResize?(el: HTMLTextAreaElement): void;\n  defaultValue?: string;\n}\n\n/**\n * @see https://vkcom.github.io/VKUI/#/Textarea\n */\nexport const Textarea = ({\n  defaultValue = '',\n  grow = true,\n  style,\n  onResize,\n  className,\n  getRootRef,\n  getRef,\n  rows = 2,\n  maxHeight,\n  status,\n  onChange: onChangeProp,\n  value: valueProp,\n  ...restProps\n}: TextareaProps) => {\n  const [value, onChange] = useEnsuredControl({\n    defaultValue,\n    onChange: onChangeProp,\n    value: valueProp,\n  });\n  const currentScrollHeight = React.useRef<number>();\n  const elementRef = useExternRef(getRef);\n  const { sizeY } = useAdaptivity();\n\n  // autosize input\n  React.useEffect(() => {\n    const el = elementRef.current;\n\n    if (grow && el?.offsetParent) {\n      el.style.height = '';\n      el.style.height = `${el.scrollHeight}px`;\n\n      if (el.scrollHeight !== currentScrollHeight.current && onResize) {\n        onResize(el);\n        currentScrollHeight.current = el.scrollHeight;\n      }\n    }\n  }, [grow, value, sizeY, elementRef, onResize]);\n\n  return (\n    <FormField\n      className={classNames(\n        styles['Textarea'],\n        getSizeYClassName(styles['Textarea'], sizeY),\n        className,\n      )}\n      style={style}\n      getRootRef={getRootRef}\n      disabled={restProps.disabled}\n      status={status}\n    >\n      <textarea\n        {...restProps}\n        style={{ maxHeight }}\n        rows={rows}\n        className={styles['Textarea__el']}\n        value={value}\n        onChange={onChange}\n        ref={elementRef}\n      />\n    </FormField>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}