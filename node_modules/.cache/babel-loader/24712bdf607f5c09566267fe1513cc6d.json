{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"tabIndex\", \"placeholder\", \"children\", \"align\", \"getRootRef\", \"multiline\", \"disabled\", \"onClick\", \"before\", \"after\", \"selectType\", \"status\", \"className\"];\nimport * as React from 'react';\nimport { classNames } from '@vkontakte/vkjs';\nimport { DropdownIcon } from '../DropdownIcon/DropdownIcon';\nimport { FormField } from '../FormField/FormField';\nimport { usePlatform } from '../../hooks/usePlatform';\nimport { getPlatformClassName } from '../../helpers/getPlatformClassName';\nimport { getFormFieldModeFromSelectType } from '../../lib/select';\nimport { SelectTypography } from '../Select/Select';\nimport { useAdaptivity } from '../../hooks/useAdaptivity';\nimport { getSizeXClassName } from '../../helpers/getSizeXClassName';\nimport { getSizeYClassName } from '../../helpers/getSizeYClassName';\n/**\n * @see https://vkcom.github.io/VKUI/#/SelectMimicry\n */\n\nexport var SelectMimicry = function SelectMimicry(_ref) {\n  var _ref$tabIndex = _ref.tabIndex,\n      tabIndex = _ref$tabIndex === void 0 ? 0 : _ref$tabIndex,\n      placeholder = _ref.placeholder,\n      children = _ref.children,\n      align = _ref.align,\n      getRootRef = _ref.getRootRef,\n      multiline = _ref.multiline,\n      disabled = _ref.disabled,\n      onClick = _ref.onClick,\n      before = _ref.before,\n      _ref$after = _ref.after,\n      after = _ref$after === void 0 ? /*#__PURE__*/React.createElement(DropdownIcon, null) : _ref$after,\n      _ref$selectType = _ref.selectType,\n      selectType = _ref$selectType === void 0 ? 'default' : _ref$selectType,\n      status = _ref.status,\n      className = _ref.className,\n      restProps = _objectWithoutProperties(_ref, _excluded);\n\n  var platform = usePlatform();\n\n  var _useAdaptivity = useAdaptivity(),\n      sizeX = _useAdaptivity.sizeX,\n      sizeY = _useAdaptivity.sizeY;\n\n  var title = children || placeholder;\n  return /*#__PURE__*/React.createElement(FormField, _extends({}, restProps, {\n    tabIndex: disabled ? undefined : tabIndex,\n    className: classNames(\"vkuiSelect\", getPlatformClassName(\"vkuiSelect\", platform), getSizeXClassName(\"vkuiSelect\", sizeX), getSizeYClassName(\"vkuiSelect\", sizeY), multiline && \"vkuiSelect--multiline\", align && styles[\"Select--align-\".concat(align)], before && \"vkuiSelect--hasBefore\", after && \"vkuiSelect--hasAfter\", className),\n    getRootRef: getRootRef,\n    onClick: disabled ? undefined : onClick,\n    disabled: disabled,\n    before: before,\n    after: after,\n    mode: getFormFieldModeFromSelectType(selectType),\n    status: status\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"vkuiSelect__container\"\n  }, /*#__PURE__*/React.createElement(SelectTypography, {\n    selectType: selectType,\n    className: \"vkuiSelect__title\"\n  }, title)));\n};\nvar styles = {\n  \"Select--align-right\": \"vkuiSelect--align-right\",\n  \"Select--align-center\": \"vkuiSelect--align-center\",\n  \"Select--align-left\": \"vkuiSelect--align-left\"\n};","map":{"version":3,"mappings":";;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,UAAT,QAA2B,iBAA3B;AACA,SAASC,YAAT,QAA6B,8BAA7B;AACA,SAASC,SAAT,QAA0C,wBAA1C;AAEA,SAASC,WAAT,QAA4B,yBAA5B;AACA,SAASC,oBAAT,QAAqC,oCAArC;AACA,SAASC,8BAAT,QAA+C,kBAA/C;AACA,SAAqBC,gBAArB,QAA6C,kBAA7C;AACA,SAASC,aAAT,QAA8B,2BAA9B;AACA,SAASC,iBAAT,QAAkC,iCAAlC;AACA,SAASC,iBAAT,QAAkC,iCAAlC;AAaA;AACA;AACA;;AACA,OAAO,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,CAAHC,IAAG,EAeH;EAAA,yBAdxBC,QAcwB;EAAA,IAdxBA,QAAQ,8BAAG,CAAH,GAAIC,aAcY;EAAA,IAbxBC,WAAW,QAAXA,WAawB;EAAA,IAZxBC,QAAQ,QAARA,QAYwB;EAAA,IAXxBC,KAAK,QAALA,KAWwB;EAAA,IAVxBC,UAAU,QAAVA,UAUwB;EAAA,IATxBC,SAAS,QAATA,SASwB;EAAA,IARxBC,QAAQ,QAARA,QAQwB;EAAA,IAPxBC,OAAO,QAAPA,OAOwB;EAAA,IANxBC,MAAM,QAANA,MAMwB;EAAA,IANlBC,kBACNC,KAKwB;EAAA,IALxBA,KAAK,wCAAGxB,oBAACE,YAAD,EAAa,IAAb,CAAH,GAAmBqB,UAKA;EAAA,IALAE,uBACxBC,UAIwB;EAAA,IAJxBA,UAAU,gCAAG,SAAH,GAAYD,eAIE;EAAA,IAHxBE,MAAM,QAANA,MAGwB;EAAA,IAFxBC,SAAS,QAATA,SAEwB;EAAA,IADrBC,SAAS,4CACY;;EACxB,IAAMC,QAAQ,GAAG1B,WAAW,EAA5B;;EACA,qBAAyBI,aAAa,EAAtC;EAAA,IAAQuB,KAAK,kBAALA,KAAR;EAAA,IAAeC,KAAK,kBAALA,KAAf;;EACA,IAAMC,KAAK,GAAGjB,QAAQ,IAAID,WAA1B;EAEA,oBACEf,oBAACG,SAAD,EAAU+B,aACJL,SADI,EACK;IACbhB,QAAQ,EAAEO,QAAQ,GAAGe,SAAH,GAAetB,QADpB;IAEbe,SAAS,EAAE3B,UAAU,eAEnBI,oBAAoB,eAAmByB,QAAnB,CAFD,EAGnBrB,iBAAiB,eAAmBsB,KAAnB,CAHE,EAInBrB,iBAAiB,eAAmBsB,KAAnB,CAJE,EAKnBb,SAAS,2BALU,EAMnBF,KAAK,IAAImB,MAAM,yBAAkBnB,KAAlB,EANI,EAOnBK,MAAM,2BAPa,EAQnBE,KAAK,0BARc,EASnBI,SATmB,CAFR;IAabV,UAAU,EAAEA,UAbC;IAcbG,OAAO,EAAED,QAAQ,GAAGe,SAAH,GAAed,OAdnB;IAebD,QAAQ,EAAEA,QAfG;IAgBbE,MAAM,EAAEA,MAhBK;IAiBbE,KAAK,EAAEA,KAjBM;IAkBba,IAAI,EAAE/B,8BAA8B,CAACoB,UAAD,CAlBvB;IAmBbC,MAAM,EAAEA;EAnBK,CADL,CAAV,EAoBiB,aAEf3B;IAAK4B,SAAS;EAAd,GAA4C,aAC1C5B,oBAACO,gBAAD,EAAiB;IAACmB,UAAU,EAAEA,UAAb;IAAyBE,SAAS;EAAlC,CAAjB,EACGK,KADH,CADF,CAtBF,CADF;AA8BD,CAlDM;AAkDL;EAAA;EAAA;EAAA;AAAA","names":["React","classNames","DropdownIcon","FormField","usePlatform","getPlatformClassName","getFormFieldModeFromSelectType","SelectTypography","useAdaptivity","getSizeXClassName","getSizeYClassName","SelectMimicry","_ref","tabIndex","_ref$tabIndex","placeholder","children","align","getRootRef","multiline","disabled","onClick","before","_ref$after","after","_ref$selectType","selectType","status","className","restProps","platform","sizeX","sizeY","title","_extends","undefined","styles","mode"],"sources":["/Users/pitus_anonimous/Desktop/youth_bit_hack/youth_bit_vk/node_modules/@vkontakte/vkui/src/components/SelectMimicry/SelectMimicry.tsx"],"sourcesContent":["import * as React from 'react';\nimport { classNames } from '@vkontakte/vkjs';\nimport { DropdownIcon } from '../DropdownIcon/DropdownIcon';\nimport { FormField, FormFieldProps } from '../FormField/FormField';\nimport { HasAlign, HasRootRef } from '../../types';\nimport { usePlatform } from '../../hooks/usePlatform';\nimport { getPlatformClassName } from '../../helpers/getPlatformClassName';\nimport { getFormFieldModeFromSelectType } from '../../lib/select';\nimport { SelectType, SelectTypography } from '../Select/Select';\nimport { useAdaptivity } from '../../hooks/useAdaptivity';\nimport { getSizeXClassName } from '../../helpers/getSizeXClassName';\nimport { getSizeYClassName } from '../../helpers/getSizeYClassName';\nimport styles from '../Select/Select.module.css';\n\nexport interface SelectMimicryProps\n  extends React.HTMLAttributes<HTMLElement>,\n    HasAlign,\n    HasRootRef<HTMLElement>,\n    Pick<FormFieldProps, 'before' | 'after' | 'status'> {\n  multiline?: boolean;\n  disabled?: boolean;\n  selectType?: SelectType;\n}\n\n/**\n * @see https://vkcom.github.io/VKUI/#/SelectMimicry\n */\nexport const SelectMimicry = ({\n  tabIndex = 0,\n  placeholder,\n  children,\n  align,\n  getRootRef,\n  multiline,\n  disabled,\n  onClick,\n  before,\n  after = <DropdownIcon />,\n  selectType = 'default',\n  status,\n  className,\n  ...restProps\n}: SelectMimicryProps) => {\n  const platform = usePlatform();\n  const { sizeX, sizeY } = useAdaptivity();\n  const title = children || placeholder;\n\n  return (\n    <FormField\n      {...restProps}\n      tabIndex={disabled ? undefined : tabIndex}\n      className={classNames(\n        styles['Select'],\n        getPlatformClassName(styles['Select'], platform),\n        getSizeXClassName(styles['Select'], sizeX),\n        getSizeYClassName(styles['Select'], sizeY),\n        multiline && styles['Select--multiline'],\n        align && styles[`Select--align-${align}`],\n        before && styles['Select--hasBefore'],\n        after && styles['Select--hasAfter'],\n        className,\n      )}\n      getRootRef={getRootRef}\n      onClick={disabled ? undefined : onClick}\n      disabled={disabled}\n      before={before}\n      after={after}\n      mode={getFormFieldModeFromSelectType(selectType)}\n      status={status}\n    >\n      <div className={styles['Select__container']}>\n        <SelectTypography selectType={selectType} className={styles['Select__title']}>\n          {title}\n        </SelectTypography>\n      </div>\n    </FormField>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}