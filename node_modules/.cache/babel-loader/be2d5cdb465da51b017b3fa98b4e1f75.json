{"ast":null,"code":"import _objectSpread from \"@babel/runtime/helpers/objectSpread2\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _extends from \"@babel/runtime/helpers/extends\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"name\", \"min\", \"max\", \"dayPlaceholder\", \"monthPlaceholder\", \"yearPlaceholder\", \"popupDirection\", \"defaultValue\", \"monthNames\", \"day\", \"month\", \"year\", \"onDateChange\", \"disabled\", \"className\"],\n    _excluded2 = [\"min\", \"max\", \"dayPlaceholder\", \"monthPlaceholder\", \"yearPlaceholder\", \"popupDirection\", \"defaultValue\", \"day\", \"month\", \"year\", \"onDateChange\"],\n    _excluded3 = [\"defaultValue\"];\nimport * as React from 'react';\nimport { classNames, leadingZero } from '@vkontakte/vkjs';\nimport { Input } from '../Input/Input';\nimport { useAdaptivityHasPointer } from '../../hooks/useAdaptivityHasPointer';\nimport { CustomSelect } from '../CustomSelect/CustomSelect';\nimport { range } from '../../helpers/range';\nvar DefaultMonths = ['Января', 'Февраля', 'Марта', 'Апреля', 'Мая', 'Июня', 'Июля', 'Августа', 'Сентября', 'Октября', 'Ноября', 'Декабря']; // Переводим state к формату гг-мм-дд\n\nfunction convertToInputFormat(_ref) {\n  var _ref$day = _ref.day,\n      day = _ref$day === void 0 ? 0 : _ref$day,\n      _ref$month = _ref.month,\n      month = _ref$month === void 0 ? 0 : _ref$month,\n      _ref$year = _ref.year,\n      year = _ref$year === void 0 ? 0 : _ref$year;\n  return \"\".concat(year, \"-\").concat(leadingZero(month), \"-\").concat(leadingZero(day));\n} // Переводим дату формата гг-мм-дд к объекту\n\n\nfunction parseInputDate(date) {\n  var splited = date.split('-');\n  return {\n    day: Number(splited[2]),\n    month: Number(splited[1]),\n    year: Number(splited[0])\n  };\n}\n\nfunction getMonthMaxDay(month, year) {\n  return month ? new Date(year || 2016, month, 0).getDate() : 31;\n}\n\nvar DatePickerCustom = function DatePickerCustom(_ref2) {\n  var name = _ref2.name,\n      _ref2$min = _ref2.min,\n      min = _ref2$min === void 0 ? {\n    day: 0,\n    month: 0,\n    year: 0\n  } : _ref2$min,\n      _ref2$max = _ref2.max,\n      max = _ref2$max === void 0 ? {\n    day: 31,\n    month: 12,\n    year: 2100\n  } : _ref2$max,\n      dayPlaceholder = _ref2.dayPlaceholder,\n      monthPlaceholder = _ref2.monthPlaceholder,\n      yearPlaceholder = _ref2.yearPlaceholder,\n      popupDirection = _ref2.popupDirection,\n      defaultValue = _ref2.defaultValue,\n      monthNames = _ref2.monthNames,\n      _ref2$day = _ref2.day,\n      day = _ref2$day === void 0 ? 0 : _ref2$day,\n      _ref2$month = _ref2.month,\n      month = _ref2$month === void 0 ? 0 : _ref2$month,\n      _ref2$year = _ref2.year,\n      year = _ref2$year === void 0 ? 0 : _ref2$year,\n      onDateChange = _ref2.onDateChange,\n      disabled = _ref2.disabled,\n      className = _ref2.className,\n      restProps = _objectWithoutProperties(_ref2, _excluded);\n\n  var onSelectChange = function onSelectChange(e) {\n    onDateChange === null || onDateChange === void 0 ? void 0 : onDateChange(_defineProperty({\n      day: day,\n      month: month,\n      year: year\n    }, e.target.name, Number(e.target.value)));\n  };\n\n  var dayOptions = range(1, getMonthMaxDay(month, year)).map(function (value) {\n    return {\n      label: String(value),\n      value: value\n    };\n  });\n  var monthOptions = (monthNames || DefaultMonths).map(function (name, index) {\n    return {\n      label: name,\n      value: index + 1\n    };\n  });\n  var yearOptions = range(max.year, min.year).map(function (value) {\n    return {\n      label: String(value),\n      value: value\n    };\n  });\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\n    className: classNames(\"vkuiDatePicker\", className)\n  }, restProps), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"vkuiDatePicker__container\"\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"vkuiDatePicker__day\"\n  }, /*#__PURE__*/React.createElement(CustomSelect, {\n    name: \"day\",\n    value: day,\n    options: dayOptions,\n    placeholder: dayPlaceholder,\n    popupDirection: popupDirection,\n    onChange: onSelectChange,\n    disabled: disabled\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"vkuiDatePicker__month\"\n  }, /*#__PURE__*/React.createElement(CustomSelect, {\n    className: \"vkuiDatePicker__monthSelect\",\n    name: \"month\",\n    value: month,\n    options: monthOptions,\n    placeholder: monthPlaceholder,\n    popupDirection: popupDirection,\n    onChange: onSelectChange,\n    disabled: disabled\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"vkuiDatePicker__year\"\n  }, /*#__PURE__*/React.createElement(CustomSelect, {\n    name: \"year\",\n    value: year,\n    options: yearOptions,\n    placeholder: yearPlaceholder,\n    popupDirection: popupDirection,\n    onChange: onSelectChange,\n    disabled: disabled\n  }))), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"hidden\",\n    name: name,\n    value: convertToInputFormat({\n      day: day,\n      month: month,\n      year: year\n    })\n  }));\n};\n\nvar DatePickerNative = function DatePickerNative(_ref3) {\n  var _ref3$min = _ref3.min,\n      min = _ref3$min === void 0 ? {\n    day: 0,\n    month: 0,\n    year: 0\n  } : _ref3$min,\n      _ref3$max = _ref3.max,\n      max = _ref3$max === void 0 ? {\n    day: 31,\n    month: 12,\n    year: 2100\n  } : _ref3$max,\n      dayPlaceholder = _ref3.dayPlaceholder,\n      monthPlaceholder = _ref3.monthPlaceholder,\n      yearPlaceholder = _ref3.yearPlaceholder,\n      popupDirection = _ref3.popupDirection,\n      defaultValue = _ref3.defaultValue,\n      day = _ref3.day,\n      month = _ref3.month,\n      year = _ref3.year,\n      onDateChange = _ref3.onDateChange,\n      restProps = _objectWithoutProperties(_ref3, _excluded2);\n\n  var defProps = day && month && year ? {\n    defaultValue: convertToInputFormat({\n      day: day,\n      month: month,\n      year: year\n    })\n  } : {};\n  var onStringChange = React.useCallback(function (e) {\n    onDateChange === null || onDateChange === void 0 ? void 0 : onDateChange(parseInputDate(e.currentTarget.value));\n  }, [onDateChange]);\n  return /*#__PURE__*/React.createElement(Input, _extends({}, restProps, {\n    type: \"date\",\n    onChange: onStringChange,\n    min: convertToInputFormat(min),\n    max: convertToInputFormat(max)\n  }, defProps));\n};\n/**\n * @see https://vkcom.github.io/VKUI/#/DatePicker\n */\n\n\nexport var DatePicker = function DatePicker(_ref4) {\n  var defaultValue = _ref4.defaultValue,\n      props = _objectWithoutProperties(_ref4, _excluded3);\n\n  var hasPointer = useAdaptivityHasPointer();\n\n  var _React$useState = React.useState(function () {\n    return {\n      day: (defaultValue === null || defaultValue === void 0 ? void 0 : defaultValue.day) || 0,\n      month: (defaultValue === null || defaultValue === void 0 ? void 0 : defaultValue.month) || 0,\n      year: (defaultValue === null || defaultValue === void 0 ? void 0 : defaultValue.year) || 0\n    };\n  }),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      value = _React$useState2[0],\n      setValue = _React$useState2[1];\n\n  var onDateChange = React.useCallback(function (update) {\n    setValue(update);\n    props.onDateChange && props.onDateChange(_objectSpread({}, update));\n  }, [props]);\n  var Cmp = hasPointer ? DatePickerCustom : DatePickerNative;\n  return /*#__PURE__*/React.createElement(Cmp, _extends({}, props, value, {\n    onDateChange: onDateChange\n  }));\n};","map":{"version":3,"mappings":"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","names":["React","classNames","leadingZero","Input","useAdaptivityHasPointer","CustomSelect","range","DefaultMonths","convertToInputFormat","_ref","day","_ref$day","_ref$month","month","_ref$year","year","concat","parseInputDate","date","splited","split","Number","getMonthMaxDay","Date","getDate","DatePickerCustom","_ref2","name","_ref2$min","min","_ref2$max","max","dayPlaceholder","monthPlaceholder","yearPlaceholder","popupDirection","defaultValue","monthNames","_ref2$day","_ref2$month","_ref2$year","onDateChange","disabled","className","restProps","onSelectChange","e","target","value","dayOptions","map","label","String","monthOptions","index","yearOptions","options","placeholder","onChange","type","DatePickerNative","_ref3","_ref3$min","_ref3$max","defProps","onStringChange","useCallback","currentTarget","_extends","DatePicker","_ref4","props","hasPointer","useState","_React$useState2","setValue","update","_objectSpread","Cmp"],"sources":["/Users/pitus_anonimous/Desktop/youth_bit_hack/youth_bit_vk/node_modules/@vkontakte/vkui/src/components/DatePicker/DatePicker.tsx"],"sourcesContent":["import * as React from 'react';\nimport { classNames, leadingZero } from '@vkontakte/vkjs';\nimport { Input } from '../Input/Input';\nimport { useAdaptivityHasPointer } from '../../hooks/useAdaptivityHasPointer';\nimport { CustomSelect } from '../CustomSelect/CustomSelect';\nimport { range } from '../../helpers/range';\nimport styles from './DatePicker.module.css';\n\nconst DefaultMonths: string[] = [\n  'Января',\n  'Февраля',\n  'Марта',\n  'Апреля',\n  'Мая',\n  'Июня',\n  'Июля',\n  'Августа',\n  'Сентября',\n  'Октября',\n  'Ноября',\n  'Декабря',\n];\n\nexport type DatePickerDateFormat = {\n  day: number;\n  month: number;\n  year: number;\n};\n\nexport interface DatePickerProps\n  extends Omit<React.HTMLAttributes<HTMLDivElement>, 'defaultValue' | 'min' | 'max'> {\n  min?: DatePickerDateFormat;\n  max?: DatePickerDateFormat;\n  name?: string;\n  defaultValue?: DatePickerDateFormat;\n  popupDirection?: 'top' | 'bottom';\n  monthNames?: string[];\n  dayPlaceholder?: string;\n  monthPlaceholder?: string;\n  yearPlaceholder?: string;\n  onDateChange?: (value: DatePickerDateFormat) => void;\n  disabled?: boolean;\n}\n\n// Переводим state к формату гг-мм-дд\nfunction convertToInputFormat({ day = 0, month = 0, year = 0 }: Partial<DatePickerDateFormat>) {\n  return `${year}-${leadingZero(month)}-${leadingZero(day)}`;\n}\n\n// Переводим дату формата гг-мм-дд к объекту\nfunction parseInputDate(date: string): DatePickerDateFormat {\n  const splited = date.split('-');\n\n  return {\n    day: Number(splited[2]),\n    month: Number(splited[1]),\n    year: Number(splited[0]),\n  };\n}\n\nfunction getMonthMaxDay(month?: number, year?: number) {\n  return month ? new Date(year || 2016, month, 0).getDate() : 31;\n}\n\nconst DatePickerCustom = ({\n  name,\n  min = { day: 0, month: 0, year: 0 },\n  max = { day: 31, month: 12, year: 2100 },\n  dayPlaceholder,\n  monthPlaceholder,\n  yearPlaceholder,\n  popupDirection,\n  defaultValue,\n  monthNames,\n  day = 0,\n  month = 0,\n  year = 0,\n  onDateChange,\n  disabled,\n  className,\n  ...restProps\n}: DatePickerProps & Partial<DatePickerDateFormat>) => {\n  const onSelectChange: React.ChangeEventHandler<HTMLSelectElement> = (e) => {\n    onDateChange?.({\n      day,\n      month,\n      year,\n      [e.target.name]: Number(e.target.value),\n    });\n  };\n  const dayOptions = range(1, getMonthMaxDay(month, year)).map((value) => ({\n    label: String(value),\n    value,\n  }));\n  const monthOptions = (monthNames || DefaultMonths).map((name, index) => ({\n    label: name,\n    value: index + 1,\n  }));\n  const yearOptions = range(max.year, min.year).map((value) => ({\n    label: String(value),\n    value: value,\n  }));\n  return (\n    <div className={classNames(styles['DatePicker'], className)} {...restProps}>\n      <div className={styles['DatePicker__container']}>\n        <div className={styles['DatePicker__day']}>\n          <CustomSelect\n            name=\"day\"\n            value={day}\n            options={dayOptions}\n            placeholder={dayPlaceholder}\n            popupDirection={popupDirection}\n            onChange={onSelectChange}\n            disabled={disabled}\n          />\n        </div>\n        <div className={styles['DatePicker__month']}>\n          <CustomSelect\n            className={styles['DatePicker__monthSelect']}\n            name=\"month\"\n            value={month}\n            options={monthOptions}\n            placeholder={monthPlaceholder}\n            popupDirection={popupDirection}\n            onChange={onSelectChange}\n            disabled={disabled}\n          />\n        </div>\n        <div className={styles['DatePicker__year']}>\n          <CustomSelect\n            name=\"year\"\n            value={year}\n            options={yearOptions}\n            placeholder={yearPlaceholder}\n            popupDirection={popupDirection}\n            onChange={onSelectChange}\n            disabled={disabled}\n          />\n        </div>\n      </div>\n      <input type=\"hidden\" name={name} value={convertToInputFormat({ day, month, year })} />\n    </div>\n  );\n};\n\nconst DatePickerNative = ({\n  min = { day: 0, month: 0, year: 0 },\n  max = { day: 31, month: 12, year: 2100 },\n  dayPlaceholder,\n  monthPlaceholder,\n  yearPlaceholder,\n  popupDirection,\n  defaultValue,\n  day,\n  month,\n  year,\n  onDateChange,\n  ...restProps\n}: DatePickerProps & Partial<DatePickerDateFormat>) => {\n  const defProps =\n    day && month && year ? { defaultValue: convertToInputFormat({ day, month, year }) } : {};\n  const onStringChange: React.ChangeEventHandler<HTMLInputElement> = React.useCallback(\n    (e) => {\n      onDateChange?.(parseInputDate(e.currentTarget.value));\n    },\n    [onDateChange],\n  );\n  return (\n    <Input\n      {...restProps}\n      type=\"date\"\n      onChange={onStringChange}\n      min={convertToInputFormat(min)}\n      max={convertToInputFormat(max)}\n      {...defProps}\n    />\n  );\n};\n\n/**\n * @see https://vkcom.github.io/VKUI/#/DatePicker\n */\nexport const DatePicker = ({ defaultValue, ...props }: DatePickerProps) => {\n  const hasPointer = useAdaptivityHasPointer();\n  const [value, setValue] = React.useState<Partial<DatePickerDateFormat>>(() => ({\n    day: defaultValue?.day || 0,\n    month: defaultValue?.month || 0,\n    year: defaultValue?.year || 0,\n  }));\n\n  const onDateChange = React.useCallback(\n    (update: DatePickerDateFormat) => {\n      setValue(update);\n      props.onDateChange && props.onDateChange({ ...update });\n    },\n    [props],\n  );\n\n  const Cmp = hasPointer ? DatePickerCustom : DatePickerNative;\n  return <Cmp {...props} {...value} onDateChange={onDateChange} />;\n};\n"]},"metadata":{},"sourceType":"module"}