{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _typeof from \"@babel/runtime/helpers/typeof\";\nimport dayjs from 'dayjs'; // Using date-fns-like type for migration\n\nexport function startOfDay(date) {\n  return dayjs(date).startOf('day').toDate();\n}\nexport function endOfDay(date) {\n  return dayjs(date).endOf('day').toDate();\n}\nexport function startOfWeek(date) {\n  var weekStart = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  weekStart = weekStart % 7;\n  var day = dayjs(date);\n  var weekDay = day.day();\n  var diff = (weekDay < weekStart ? 7 : 0) + weekDay - weekStart;\n  return day.date(day.date() - diff).toDate();\n}\nexport function endOfWeek(date) {\n  var weekStart = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  var day = dayjs(startOfWeek(date, weekStart));\n  return day.date(day.date() + 6).toDate();\n}\nexport function startOfMonth(date) {\n  return dayjs(date).startOf('month').toDate();\n}\nexport function endOfMonth(date) {\n  return dayjs(date).endOf('month').toDate();\n}\nexport function isFirstDayOfMonth(date) {\n  return dayjs(date).date() === 1;\n}\nexport function isLastDayOfMonth(date) {\n  // isSameDay -- shorter, but not exact with date-fns behavior\n  // return isSameDay(date, dayjs(date).endOf(\"month\"));\n  return dayjs(date).endOf('day').isSame(dayjs(date).endOf('month'));\n}\nexport function format(date, format) {\n  return dayjs(date).format(format);\n}\nexport function isBefore(date1, date2) {\n  // Exactly as date-fns does\n  // dayjs().isBefore() for slightly different approach\n  return dayjs(date1) < dayjs(date2);\n}\nexport function isAfter(date1, date2) {\n  return dayjs(date1) > dayjs(date2);\n}\nexport function isSameDay(date1, date2) {\n  return dayjs(date1).isSame(date2, 'day');\n}\nexport function isSameMonth(date1, date2) {\n  return dayjs(date1).isSame(date2, 'month');\n}\nexport function isWithinInterval(date, start, end) {\n  var day = dayjs(date);\n  return day >= dayjs(start) && day <= dayjs(end);\n}\nexport function setMinutes(date, minute) {\n  return dayjs(date).set('minute', minute).toDate();\n}\nexport function setHours(date, hour) {\n  return dayjs(date).set('hour', hour).toDate();\n}\nexport function setMonth(date, month) {\n  return dayjs(date).set('month', month).toDate();\n}\nexport function setYear(date, year) {\n  return dayjs(date).set('year', year).toDate();\n}\nexport function addDays(date, day) {\n  return dayjs(date).add(day, 'day').toDate();\n}\nexport function subDays(date, day) {\n  return dayjs(date).subtract(day, 'day').toDate();\n}\nexport function addWeeks(date, week) {\n  return dayjs(date).add(week, 'week').toDate();\n}\nexport function subWeeks(date, week) {\n  return dayjs(date).subtract(week, 'week').toDate();\n}\nexport function addMonths(date, month) {\n  return dayjs(date).add(month, 'month').toDate();\n}\nexport function subMonths(date, month) {\n  return dayjs(date).subtract(month, 'month').toDate();\n} // Rip off date-fns\n\nexport function eachDayOfInterval(start, end) {\n  var dates = [];\n  var startDate = dayjs(start).toDate();\n  var endDate = dayjs(end).toDate();\n  var endTime = endDate.getTime();\n  var currentDate = startDate;\n  currentDate.setHours(0, 0, 0, 0);\n\n  while (currentDate.getTime() <= endTime) {\n    dates.push(new Date(currentDate.getTime()));\n    currentDate.setDate(currentDate.getDate() + 1);\n    currentDate.setHours(0, 0, 0, 0);\n  }\n\n  return dates;\n}\nexport function parse(input, format) {\n  var referenceDate = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : new Date();\n  var match2 = /^\\d\\d/; // 00 - 99\n\n  var match4 = /^\\d{4}/; // 0000 - 9999\n\n  var entries = [['YYYY', match4, function (val) {\n    return ['Y', +val, true];\n  }], ['MM', match2, function (val) {\n    var numVal = +val;\n    var okay = numVal > 0 && numVal <= 12;\n    return ['M', numVal - 1, okay];\n  }], ['DD', match2, function (val) {\n    return ['D', +val, true];\n  }], ['HH', match2, function (val) {\n    var numVal = parseInt(val, 10);\n    var okay = numVal >= 0 && numVal < 24;\n    return ['h', numVal, okay];\n  }], ['mm', match2, function (val) {\n    var numVal = parseInt(val, 10);\n    var okay = numVal >= 0 && numVal < 60;\n    return ['m', numVal, okay];\n  }]];\n  var superRegExp = new RegExp(entries.map(function (item) {\n    return item[0];\n  }).join('|'), 'g');\n  var store = {\n    Y: referenceDate.getFullYear(),\n    M: referenceDate.getMonth(),\n    D: referenceDate.getDate(),\n    h: referenceDate.getHours(),\n    m: referenceDate.getMinutes(),\n    s: referenceDate.getSeconds(),\n    ms: referenceDate.getMilliseconds()\n  };\n  var prevInputIndex = 0;\n  var lastNonFormatting = '';\n  var lastFormatIndex = 0;\n  var found = false;\n\n  var _loop = function _loop() {\n    var match = superRegExp.exec(format);\n\n    if (!match) {\n      return \"break\";\n    }\n\n    var length = match[0].length;\n    var atIndex = superRegExp.lastIndex - length;\n    var item = entries.find(function (item) {\n      return item[0] === match[0];\n    });\n\n    if (!item) {\n      return {\n        v: new Date('')\n      };\n    }\n\n    lastNonFormatting = format.slice(lastFormatIndex, atIndex);\n    lastFormatIndex = superRegExp.lastIndex;\n\n    if (input.slice(prevInputIndex, prevInputIndex + lastNonFormatting.length) !== lastNonFormatting) {\n      return {\n        v: new Date('')\n      };\n    }\n\n    var value = input.slice(prevInputIndex + lastNonFormatting.length).match(item[1]);\n\n    if (!value) {\n      return {\n        v: new Date('')\n      };\n    }\n\n    prevInputIndex = prevInputIndex + lastNonFormatting.length + value[0].length;\n\n    var _item$ = item[2](value[0]),\n        _item$2 = _slicedToArray(_item$, 3),\n        key = _item$2[0],\n        newValue = _item$2[1],\n        okay = _item$2[2];\n\n    if (!okay) {\n      return {\n        v: new Date('')\n      };\n    }\n\n    store[key] = newValue;\n    found = true;\n  };\n\n  while (true) {\n    var _ret = _loop();\n\n    if (_ret === \"break\") break;\n    if (_typeof(_ret) === \"object\") return _ret.v;\n  }\n\n  if (!found) {\n    return new Date('');\n  }\n\n  var date = new Date(store.Y, store.M, store.D, store.h, store.m, store.s, store.ms); // Since days of months are dynamic, they can't be validated in entries,\n  // so we check it here, in the finalized date\n\n  if (date.getMonth() !== store.M || date.getDate() !== store.D) {\n    return new Date('');\n  }\n\n  return date;\n}\nexport function isMatch(input, format) {\n  return !isNaN(+parse(input, format));\n}\nexport function getMillisecondsToTomorrow(date) {\n  return dayjs(endOfDay(date)).diff(dayjs(date), 'ms');\n}","map":{"version":3,"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CAEA;;AAGA,OAAO,SAASC,UAAT,CAAoBC,IAApB,EAAqC;EAC1C,OAAOF,KAAK,CAACE,IAAD,CAALF,CAAYG,OAAZH,CAAoB,KAApBA,EAA2BI,MAA3BJ,EAAP;AACF;AAEA,OAAO,SAASK,QAAT,CAAkBH,IAAlB,EAAmC;EACxC,OAAOF,KAAK,CAACE,IAAD,CAALF,CAAYM,KAAZN,CAAkB,KAAlBA,EAAyBI,MAAzBJ,EAAP;AACF;AAEA,OAAO,SAASO,WAAT,CAAqBL,IAArB,EAAqD;EAAA,IAAfM,SAAS,uEAAG,CAAG;EAC1DA,SAAS,GAAGA,SAAS,GAAG,CAAxBA;EAEA,IAAMC,GAAG,GAAGT,KAAK,CAACE,IAAD,CAAjB;EACA,IAAMQ,OAAO,GAAGD,GAAG,CAACA,GAAJA,EAAhB;EACA,IAAME,IAAI,GAAG,CAACD,OAAO,GAAGF,SAAVE,GAAsB,CAAtBA,GAA0B,CAA3B,IAAgCA,OAAhC,GAA0CF,SAAvD;EAEA,OAAOC,GAAG,CAACP,IAAJO,CAASA,GAAG,CAACP,IAAJO,KAAaE,IAAtBF,EAA4BL,MAA5BK,EAAP;AACF;AAEA,OAAO,SAASG,SAAT,CAAmBV,IAAnB,EAAmD;EAAA,IAAfM,SAAS,uEAAG,CAAG;EACxD,IAAMC,GAAG,GAAGT,KAAK,CAACO,WAAW,CAACL,IAAD,EAAOM,SAAP,CAAZ,CAAjB;EAEA,OAAOC,GAAG,CAACP,IAAJO,CAASA,GAAG,CAACP,IAAJO,KAAa,CAAtBA,EAAyBL,MAAzBK,EAAP;AACF;AAEA,OAAO,SAASI,YAAT,CAAsBX,IAAtB,EAAuC;EAC5C,OAAOF,KAAK,CAACE,IAAD,CAALF,CAAYG,OAAZH,CAAoB,OAApBA,EAA6BI,MAA7BJ,EAAP;AACF;AAEA,OAAO,SAASc,UAAT,CAAoBZ,IAApB,EAAqC;EAC1C,OAAOF,KAAK,CAACE,IAAD,CAALF,CAAYM,KAAZN,CAAkB,OAAlBA,EAA2BI,MAA3BJ,EAAP;AACF;AAEA,OAAO,SAASe,iBAAT,CAA2Bb,IAA3B,EAA4C;EACjD,OAAOF,KAAK,CAACE,IAAD,CAALF,CAAYE,IAAZF,OAAuB,CAA9B;AACF;AAEA,OAAO,SAASgB,gBAAT,CAA0Bd,IAA1B,EAA2C;EAChD;EACA;EACA,OAAOF,KAAK,CAACE,IAAD,CAALF,CAAYM,KAAZN,CAAkB,KAAlBA,EAAyBiB,MAAzBjB,CAAgCA,KAAK,CAACE,IAAD,CAALF,CAAYM,KAAZN,CAAkB,OAAlBA,CAAhCA,CAAP;AACF;AAEA,OAAO,SAASkB,MAAT,CAAgBhB,IAAhB,EAAiCgB,MAAjC,EAAiD;EACtD,OAAOlB,KAAK,CAACE,IAAD,CAALF,CAAYkB,MAAZlB,CAAmBkB,MAAnBlB,CAAP;AACF;AAEA,OAAO,SAASmB,QAAT,CAAkBC,KAAlB,EAAoCC,KAApC,EAAsD;EAC3D;EACA;EACA,OAAOrB,KAAK,CAACoB,KAAD,CAALpB,GAAeA,KAAK,CAACqB,KAAD,CAA3B;AACF;AAEA,OAAO,SAASC,OAAT,CAAiBF,KAAjB,EAAmCC,KAAnC,EAAqD;EAC1D,OAAOrB,KAAK,CAACoB,KAAD,CAALpB,GAAeA,KAAK,CAACqB,KAAD,CAA3B;AACF;AAEA,OAAO,SAASE,SAAT,CAAmBH,KAAnB,EAAqCC,KAArC,EAAuD;EAC5D,OAAOrB,KAAK,CAACoB,KAAD,CAALpB,CAAaiB,MAAbjB,CAAoBqB,KAApBrB,EAA2B,KAA3BA,CAAP;AACF;AAEA,OAAO,SAASwB,WAAT,CAAqBJ,KAArB,EAAuCC,KAAvC,EAAyD;EAC9D,OAAOrB,KAAK,CAACoB,KAAD,CAALpB,CAAaiB,MAAbjB,CAAoBqB,KAApBrB,EAA2B,OAA3BA,CAAP;AACF;AAEA,OAAO,SAASyB,gBAAT,CAA0BvB,IAA1B,EAA2CwB,KAA3C,EAA6DC,GAA7D,EAA6E;EAClF,IAAMlB,GAAG,GAAGT,KAAK,CAACE,IAAD,CAAjB;EACA,OAAOO,GAAG,IAAIT,KAAK,CAAC0B,KAAD,CAAZjB,IAAuBA,GAAG,IAAIT,KAAK,CAAC2B,GAAD,CAA1C;AACF;AAEA,OAAO,SAASC,UAAT,CAAoB1B,IAApB,EAAqC2B,MAArC,EAAqD;EAC1D,OAAO7B,KAAK,CAACE,IAAD,CAALF,CAAY8B,GAAZ9B,CAAgB,QAAhBA,EAA0B6B,MAA1B7B,EAAkCI,MAAlCJ,EAAP;AACF;AAEA,OAAO,SAAS+B,QAAT,CAAkB7B,IAAlB,EAAmC8B,IAAnC,EAAiD;EACtD,OAAOhC,KAAK,CAACE,IAAD,CAALF,CAAY8B,GAAZ9B,CAAgB,MAAhBA,EAAwBgC,IAAxBhC,EAA8BI,MAA9BJ,EAAP;AACF;AAEA,OAAO,SAASiC,QAAT,CAAkB/B,IAAlB,EAAmCgC,KAAnC,EAAkD;EACvD,OAAOlC,KAAK,CAACE,IAAD,CAALF,CAAY8B,GAAZ9B,CAAgB,OAAhBA,EAAyBkC,KAAzBlC,EAAgCI,MAAhCJ,EAAP;AACF;AAEA,OAAO,SAASmC,OAAT,CAAiBjC,IAAjB,EAAkCkC,IAAlC,EAAgD;EACrD,OAAOpC,KAAK,CAACE,IAAD,CAALF,CAAY8B,GAAZ9B,CAAgB,MAAhBA,EAAwBoC,IAAxBpC,EAA8BI,MAA9BJ,EAAP;AACF;AAEA,OAAO,SAASqC,OAAT,CAAiBnC,IAAjB,EAAkCO,GAAlC,EAA+C;EACpD,OAAOT,KAAK,CAACE,IAAD,CAALF,CAAYsC,GAAZtC,CAAgBS,GAAhBT,EAAqB,KAArBA,EAA4BI,MAA5BJ,EAAP;AACF;AAEA,OAAO,SAASuC,OAAT,CAAiBrC,IAAjB,EAAkCO,GAAlC,EAA+C;EACpD,OAAOT,KAAK,CAACE,IAAD,CAALF,CAAYwC,QAAZxC,CAAqBS,GAArBT,EAA0B,KAA1BA,EAAiCI,MAAjCJ,EAAP;AACF;AAEA,OAAO,SAASyC,QAAT,CAAkBvC,IAAlB,EAAmCwC,IAAnC,EAAiD;EACtD,OAAO1C,KAAK,CAACE,IAAD,CAALF,CAAYsC,GAAZtC,CAAgB0C,IAAhB1C,EAAsB,MAAtBA,EAA8BI,MAA9BJ,EAAP;AACF;AAEA,OAAO,SAAS2C,QAAT,CAAkBzC,IAAlB,EAAmCwC,IAAnC,EAAiD;EACtD,OAAO1C,KAAK,CAACE,IAAD,CAALF,CAAYwC,QAAZxC,CAAqB0C,IAArB1C,EAA2B,MAA3BA,EAAmCI,MAAnCJ,EAAP;AACF;AAEA,OAAO,SAAS4C,SAAT,CAAmB1C,IAAnB,EAAoCgC,KAApC,EAAmD;EACxD,OAAOlC,KAAK,CAACE,IAAD,CAALF,CAAYsC,GAAZtC,CAAgBkC,KAAhBlC,EAAuB,OAAvBA,EAAgCI,MAAhCJ,EAAP;AACF;AAEA,OAAO,SAAS6C,SAAT,CAAmB3C,IAAnB,EAAoCgC,KAApC,EAAmD;EACxD,OAAOlC,KAAK,CAACE,IAAD,CAALF,CAAYwC,QAAZxC,CAAqBkC,KAArBlC,EAA4B,OAA5BA,EAAqCI,MAArCJ,EAAP;AACF,C,CAEA;;AACA,OAAO,SAAS8C,iBAAT,CAA2BpB,KAA3B,EAA6CC,GAA7C,EAA6D;EAClE,IAAMoB,KAAa,GAAG,EAAtB;EACA,IAAMC,SAAS,GAAGhD,KAAK,CAAC0B,KAAD,CAAL1B,CAAaI,MAAbJ,EAAlB;EACA,IAAMiD,OAAO,GAAGjD,KAAK,CAAC2B,GAAD,CAAL3B,CAAWI,MAAXJ,EAAhB;EAEA,IAAMkD,OAAO,GAAGD,OAAO,CAACE,OAARF,EAAhB;EACA,IAAMG,WAAW,GAAGJ,SAApB;EACAI,WAAW,CAACrB,QAAZqB,CAAqB,CAArBA,EAAwB,CAAxBA,EAA2B,CAA3BA,EAA8B,CAA9BA;;EAEA,OAAOA,WAAW,CAACD,OAAZC,MAAyBF,OAAhC,EAAyC;IACvCH,KAAK,CAACM,IAANN,CAAW,IAAIO,IAAJ,CAASF,WAAW,CAACD,OAAZC,EAAT,CAAXL;IACAK,WAAW,CAACG,OAAZH,CAAoBA,WAAW,CAACI,OAAZJ,KAAwB,CAA5CA;IACAA,WAAW,CAACrB,QAAZqB,CAAqB,CAArBA,EAAwB,CAAxBA,EAA2B,CAA3BA,EAA8B,CAA9BA;EACF;;EAEA,OAAOL,KAAP;AACF;AAEA,OAAO,SAASU,KAAT,CAAeC,KAAf,EAA8BxC,MAA9B,EAAgF;EAAA,IAAlCyC,aAAmB,uEAAG,IAAIL,IAAJ,EAAY;EACrF,IAAMM,MAAM,GAAG,OAAf,CADqF,CAC7D;;EACxB,IAAMC,MAAM,GAAG,QAAf,CAFqF,CAE5D;;EAEzB,IAAMC,OAA4E,GAAG,CACnF,CAAC,MAAD,EAASD,MAAT,EAAiB,UAACE,GAAD,EAAI;IAAA,OAAK,CAAC,GAAD,EAAM,CAACA,GAAP,EAAY,IAAZ,CAAL;EAAsB,CAA3C,CADmF,EAEnF,CACE,IADF,EAEEH,MAFF,EAGE,UAACG,GAAD,EAAS;IACP,IAAMC,MAAM,GAAG,CAACD,GAAhB;IACA,IAAME,IAAI,GAAGD,MAAM,GAAG,CAATA,IAAcA,MAAM,IAAI,EAArC;IAEA,OAAO,CAAC,GAAD,EAAMA,MAAM,GAAG,CAAf,EAAkBC,IAAlB,CAAP;EACD,CARH,CAFmF,EAYnF,CAAC,IAAD,EAAOL,MAAP,EAAe,UAACG,GAAD,EAAI;IAAA,OAAK,CAAC,GAAD,EAAM,CAACA,GAAP,EAAY,IAAZ,CAAL;EAAsB,CAAzC,CAZmF,EAanF,CACE,IADF,EAEEH,MAFF,EAGE,UAACG,GAAD,EAAS;IACP,IAAMC,MAAM,GAAGE,QAAQ,CAACH,GAAD,EAAM,EAAN,CAAvB;IACA,IAAME,IAAI,GAAGD,MAAM,IAAI,CAAVA,IAAeA,MAAM,GAAG,EAArC;IAEA,OAAO,CAAC,GAAD,EAAMA,MAAN,EAAcC,IAAd,CAAP;EACD,CARH,CAbmF,EAuBnF,CACE,IADF,EAEEL,MAFF,EAGE,UAACG,GAAD,EAAS;IACP,IAAMC,MAAM,GAAGE,QAAQ,CAACH,GAAD,EAAM,EAAN,CAAvB;IACA,IAAME,IAAI,GAAGD,MAAM,IAAI,CAAVA,IAAeA,MAAM,GAAG,EAArC;IAEA,OAAO,CAAC,GAAD,EAAMA,MAAN,EAAcC,IAAd,CAAP;EACD,CARH,CAvBmF,CAArF;EAmCA,IAAME,WAAW,GAAG,IAAIC,MAAJ,CAAWN,OAAO,CAACO,GAARP,CAAY,UAACQ,IAAD,EAAK;IAAA,OAAKA,IAAI,CAAC,CAAD,CAAT;EAAY,CAA7BR,EAA+BS,IAA/BT,CAAoC,GAApCA,CAAX,EAAqD,GAArD,CAApB;EAEA,IAAMU,KAEL,GAAG;IACFC,CAAC,EAAEd,aAAa,CAACe,WAAdf,EADD;IAEFgB,CAAC,EAAEhB,aAAa,CAACiB,QAAdjB,EAFD;IAGFkB,CAAC,EAAElB,aAAa,CAACH,OAAdG,EAHD;IAIFmB,CAAC,EAAEnB,aAAa,CAACoB,QAAdpB,EAJD;IAKFqB,CAAC,EAAErB,aAAa,CAACsB,UAAdtB,EALD;IAMFuB,CAAC,EAAEvB,aAAa,CAACwB,UAAdxB,EAND;IAOFyB,EAAE,EAAEzB,aAAa,CAAC0B,eAAd1B;EAPF,CAFJ;EAYA,IAAI2B,cAAc,GAAG,CAArB;EACA,IAAIC,iBAAiB,GAAG,EAAxB;EACA,IAAIC,eAAe,GAAG,CAAtB;EACA,IAAIC,KAAK,GAAG,KAAZ;;EAAkB;IAGhB,IAAMC,KAAK,GAAGvB,WAAW,CAACwB,IAAZxB,CAAiBjD,MAAjBiD,CAAd;;IAEA,IAAI,CAACuB,KAAL,EAAY;MACV;IACF;;IAEA,IAAME,MAAM,GAAGF,KAAK,CAAC,CAAD,CAALA,CAASE,MAAxB;IACA,IAAMC,OAAO,GAAG1B,WAAW,CAAC2B,SAAZ3B,GAAwByB,MAAxC;IAEA,IAAMtB,IAAI,GAAGR,OAAO,CAACiC,IAARjC,CAAa,UAACQ,IAAD,EAAK;MAAA,OAAKA,IAAI,CAAC,CAAD,CAAJA,KAAYoB,KAAK,CAAC,CAAD,CAAtB;IAAyB,CAA3C5B,CAAb;;IAEA,IAAI,CAACQ,IAAL,EAAW;MACT;QAAA0B,GAAO,IAAI1C,IAAJ,CAAS,EAAT;MAAP;IACF;;IAEAiC,iBAAiB,GAAGrE,MAAM,CAAC+E,KAAP/E,CAAasE,eAAbtE,EAA8B2E,OAA9B3E,CAApBqE;IACAC,eAAe,GAAGrB,WAAW,CAAC2B,SAA9BN;;IAEA,IACE9B,KAAK,CAACuC,KAANvC,CAAY4B,cAAZ5B,EAA4B4B,cAAc,GAAGC,iBAAiB,CAACK,MAA/DlC,MAA2E6B,iBAD7E,EAEE;MACA;QAAAS,GAAO,IAAI1C,IAAJ,CAAS,EAAT;MAAP;IACF;;IAEA,IAAM4C,KAAK,GAAGxC,KAAK,CAACuC,KAANvC,CAAY4B,cAAc,GAAGC,iBAAiB,CAACK,MAA/ClC,EAAuDgC,KAAvDhC,CAA6DY,IAAI,CAAC,CAAD,CAAjEZ,CAAd;;IAEA,IAAI,CAACwC,KAAL,EAAY;MACV;QAAAF,GAAO,IAAI1C,IAAJ,CAAS,EAAT;MAAP;IACF;;IAEAgC,cAAc,GAAGA,cAAc,GAAGC,iBAAiB,CAACK,MAAnCN,GAA4CY,KAAK,CAAC,CAAD,CAALA,CAASN,MAAtEN;;IAEA,aAA8BhB,IAAI,CAAC,CAAD,CAAJA,CAAQ4B,KAAK,CAAC,CAAD,CAAb5B,CAA9B;IAAA,IAA+C6B,mCAA/C;IAAA,IAAOC,GAAG,aAAV;IAAA,IAAYC,QAAQ,aAApB;IAAA,IAAsBpC,IAAI,aAA1B;;IAEA,IAAI,CAACA,IAAL,EAAW;MACT;QAAA+B,GAAO,IAAI1C,IAAJ,CAAS,EAAT;MAAP;IACF;;IAEAkB,KAAK,CAAC4B,GAAD,CAAL5B,GAAa6B,QAAb7B;IACAiB,KAAK,GAAG,IAARA;EAAa,CA1CG;;EAElB,OAAO,IAAP,EAAa;IAAA;;IAAA,sBAIT;IAAM;EAqCV;;EAEA,IAAI,CAACA,KAAL,EAAY;IACV,OAAO,IAAInC,IAAJ,CAAS,EAAT,CAAP;EACF;;EAEA,IAAMpD,IAAI,GAAG,IAAIoD,IAAJ,CAASkB,KAAK,CAACC,CAAf,EAAkBD,KAAK,CAACG,CAAxB,EAA2BH,KAAK,CAACK,CAAjC,EAAoCL,KAAK,CAACM,CAA1C,EAA6CN,KAAK,CAACQ,CAAnD,EAAsDR,KAAK,CAACU,CAA5D,EAA+DV,KAAK,CAACY,EAArE,CAAb,CAzGqF,CA2GrF;EACA;;EACA,IAAIlF,IAAI,CAAC0E,QAAL1E,OAAoBsE,KAAK,CAACG,CAA1BzE,IAA+BA,IAAI,CAACsD,OAALtD,OAAmBsE,KAAK,CAACK,CAA5D,EAA+D;IAC7D,OAAO,IAAIvB,IAAJ,CAAS,EAAT,CAAP;EACF;;EAEA,OAAOpD,IAAP;AACF;AAEA,OAAO,SAASoG,OAAT,CAAiB5C,KAAjB,EAAgCxC,MAAhC,EAAgD;EACrD,OAAO,CAACqF,KAAK,CAAC,CAAC9C,KAAK,CAACC,KAAD,EAAQxC,MAAR,CAAP,CAAb;AACF;AAEA,OAAO,SAASsF,yBAAT,CAAmCtG,IAAnC,EAAoD;EACzD,OAAOF,KAAK,CAACK,QAAQ,CAACH,IAAD,CAAT,CAALF,CAAsBW,IAAtBX,CAA2BA,KAAK,CAACE,IAAD,CAAhCF,EAAwC,IAAxCA,CAAP;AACF","names":["dayjs","startOfDay","date","startOf","toDate","endOfDay","endOf","startOfWeek","weekStart","day","weekDay","diff","endOfWeek","startOfMonth","endOfMonth","isFirstDayOfMonth","isLastDayOfMonth","isSame","format","isBefore","date1","date2","isAfter","isSameDay","isSameMonth","isWithinInterval","start","end","setMinutes","minute","set","setHours","hour","setMonth","month","setYear","year","addDays","add","subDays","subtract","addWeeks","week","subWeeks","addMonths","subMonths","eachDayOfInterval","dates","startDate","endDate","endTime","getTime","currentDate","push","Date","setDate","getDate","parse","input","referenceDate","match2","match4","entries","val","numVal","okay","parseInt","superRegExp","RegExp","map","item","join","store","Y","getFullYear","M","getMonth","D","h","getHours","m","getMinutes","s","getSeconds","ms","getMilliseconds","prevInputIndex","lastNonFormatting","lastFormatIndex","found","match","exec","length","atIndex","lastIndex","find","v","slice","value","_item$2","key","newValue","isMatch","isNaN","getMillisecondsToTomorrow"],"sources":["/Users/pitus_anonimous/Desktop/youth_bit_hack/youth_bit_vk/node_modules/@vkontakte/vkui/src/lib/date.ts"],"sourcesContent":["import dayjs from 'dayjs';\n\n// Using date-fns-like type for migration\ntype DirtyDate = Date | number;\n\nexport function startOfDay(date: DirtyDate) {\n  return dayjs(date).startOf('day').toDate();\n}\n\nexport function endOfDay(date: DirtyDate) {\n  return dayjs(date).endOf('day').toDate();\n}\n\nexport function startOfWeek(date: DirtyDate, weekStart = 0) {\n  weekStart = weekStart % 7;\n\n  const day = dayjs(date);\n  const weekDay = day.day();\n  const diff = (weekDay < weekStart ? 7 : 0) + weekDay - weekStart;\n\n  return day.date(day.date() - diff).toDate();\n}\n\nexport function endOfWeek(date: DirtyDate, weekStart = 0) {\n  const day = dayjs(startOfWeek(date, weekStart));\n\n  return day.date(day.date() + 6).toDate();\n}\n\nexport function startOfMonth(date: DirtyDate) {\n  return dayjs(date).startOf('month').toDate();\n}\n\nexport function endOfMonth(date: DirtyDate) {\n  return dayjs(date).endOf('month').toDate();\n}\n\nexport function isFirstDayOfMonth(date: DirtyDate) {\n  return dayjs(date).date() === 1;\n}\n\nexport function isLastDayOfMonth(date: DirtyDate) {\n  // isSameDay -- shorter, but not exact with date-fns behavior\n  // return isSameDay(date, dayjs(date).endOf(\"month\"));\n  return dayjs(date).endOf('day').isSame(dayjs(date).endOf('month'));\n}\n\nexport function format(date: DirtyDate, format: string) {\n  return dayjs(date).format(format);\n}\n\nexport function isBefore(date1: DirtyDate, date2: DirtyDate) {\n  // Exactly as date-fns does\n  // dayjs().isBefore() for slightly different approach\n  return dayjs(date1) < dayjs(date2);\n}\n\nexport function isAfter(date1: DirtyDate, date2: DirtyDate) {\n  return dayjs(date1) > dayjs(date2);\n}\n\nexport function isSameDay(date1: DirtyDate, date2: DirtyDate) {\n  return dayjs(date1).isSame(date2, 'day');\n}\n\nexport function isSameMonth(date1: DirtyDate, date2: DirtyDate) {\n  return dayjs(date1).isSame(date2, 'month');\n}\n\nexport function isWithinInterval(date: DirtyDate, start: DirtyDate, end: DirtyDate) {\n  const day = dayjs(date);\n  return day >= dayjs(start) && day <= dayjs(end);\n}\n\nexport function setMinutes(date: DirtyDate, minute: number) {\n  return dayjs(date).set('minute', minute).toDate();\n}\n\nexport function setHours(date: DirtyDate, hour: number) {\n  return dayjs(date).set('hour', hour).toDate();\n}\n\nexport function setMonth(date: DirtyDate, month: number) {\n  return dayjs(date).set('month', month).toDate();\n}\n\nexport function setYear(date: DirtyDate, year: number) {\n  return dayjs(date).set('year', year).toDate();\n}\n\nexport function addDays(date: DirtyDate, day: number) {\n  return dayjs(date).add(day, 'day').toDate();\n}\n\nexport function subDays(date: DirtyDate, day: number) {\n  return dayjs(date).subtract(day, 'day').toDate();\n}\n\nexport function addWeeks(date: DirtyDate, week: number) {\n  return dayjs(date).add(week, 'week').toDate();\n}\n\nexport function subWeeks(date: DirtyDate, week: number) {\n  return dayjs(date).subtract(week, 'week').toDate();\n}\n\nexport function addMonths(date: DirtyDate, month: number) {\n  return dayjs(date).add(month, 'month').toDate();\n}\n\nexport function subMonths(date: DirtyDate, month: number) {\n  return dayjs(date).subtract(month, 'month').toDate();\n}\n\n// Rip off date-fns\nexport function eachDayOfInterval(start: DirtyDate, end: DirtyDate) {\n  const dates: Date[] = [];\n  const startDate = dayjs(start).toDate();\n  const endDate = dayjs(end).toDate();\n\n  const endTime = endDate.getTime();\n  const currentDate = startDate;\n  currentDate.setHours(0, 0, 0, 0);\n\n  while (currentDate.getTime() <= endTime) {\n    dates.push(new Date(currentDate.getTime()));\n    currentDate.setDate(currentDate.getDate() + 1);\n    currentDate.setHours(0, 0, 0, 0);\n  }\n\n  return dates;\n}\n\nexport function parse(input: string, format: string, referenceDate: Date = new Date()) {\n  const match2 = /^\\d\\d/; // 00 - 99\n  const match4 = /^\\d{4}/; // 0000 - 9999\n\n  const entries: Array<[string, RegExp, (val: string) => [string, number, boolean]]> = [\n    ['YYYY', match4, (val) => ['Y', +val, true]],\n    [\n      'MM',\n      match2,\n      (val) => {\n        const numVal = +val;\n        const okay = numVal > 0 && numVal <= 12;\n\n        return ['M', numVal - 1, okay];\n      },\n    ],\n    ['DD', match2, (val) => ['D', +val, true]],\n    [\n      'HH',\n      match2,\n      (val) => {\n        const numVal = parseInt(val, 10);\n        const okay = numVal >= 0 && numVal < 24;\n\n        return ['h', numVal, okay];\n      },\n    ],\n    [\n      'mm',\n      match2,\n      (val) => {\n        const numVal = parseInt(val, 10);\n        const okay = numVal >= 0 && numVal < 60;\n\n        return ['m', numVal, okay];\n      },\n    ],\n  ];\n\n  const superRegExp = new RegExp(entries.map((item) => item[0]).join('|'), 'g');\n\n  const store: {\n    [key: string]: number;\n  } = {\n    Y: referenceDate.getFullYear(),\n    M: referenceDate.getMonth(),\n    D: referenceDate.getDate(),\n    h: referenceDate.getHours(),\n    m: referenceDate.getMinutes(),\n    s: referenceDate.getSeconds(),\n    ms: referenceDate.getMilliseconds(),\n  };\n\n  let prevInputIndex = 0;\n  let lastNonFormatting = '';\n  let lastFormatIndex = 0;\n  let found = false;\n\n  while (true) {\n    const match = superRegExp.exec(format);\n\n    if (!match) {\n      break;\n    }\n\n    const length = match[0].length;\n    const atIndex = superRegExp.lastIndex - length;\n\n    const item = entries.find((item) => item[0] === match[0]);\n\n    if (!item) {\n      return new Date('');\n    }\n\n    lastNonFormatting = format.slice(lastFormatIndex, atIndex);\n    lastFormatIndex = superRegExp.lastIndex;\n\n    if (\n      input.slice(prevInputIndex, prevInputIndex + lastNonFormatting.length) !== lastNonFormatting\n    ) {\n      return new Date('');\n    }\n\n    const value = input.slice(prevInputIndex + lastNonFormatting.length).match(item[1]);\n\n    if (!value) {\n      return new Date('');\n    }\n\n    prevInputIndex = prevInputIndex + lastNonFormatting.length + value[0].length;\n\n    const [key, newValue, okay] = item[2](value[0]);\n\n    if (!okay) {\n      return new Date('');\n    }\n\n    store[key] = newValue;\n    found = true;\n  }\n\n  if (!found) {\n    return new Date('');\n  }\n\n  const date = new Date(store.Y, store.M, store.D, store.h, store.m, store.s, store.ms);\n\n  // Since days of months are dynamic, they can't be validated in entries,\n  // so we check it here, in the finalized date\n  if (date.getMonth() !== store.M || date.getDate() !== store.D) {\n    return new Date('');\n  }\n\n  return date;\n}\n\nexport function isMatch(input: string, format: string) {\n  return !isNaN(+parse(input, format));\n}\n\nexport function getMillisecondsToTomorrow(date: DirtyDate) {\n  return dayjs(endOfDay(date)).diff(dayjs(date), 'ms');\n}\n"]},"metadata":{},"sourceType":"module"}