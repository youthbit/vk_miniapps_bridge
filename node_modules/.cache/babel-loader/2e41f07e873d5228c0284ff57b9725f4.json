{"ast":null,"code":"import * as React from 'react';\nimport { hasMouse as hasPointerLib } from '@vkontakte/vkjs';\nimport { AdaptivityContext } from '../components/AdaptivityProvider/AdaptivityContext';\nimport { useIsClient } from './useIsClient';\n/**\n * Определение происходит с помощью `window.matchMedia`. Для того, чтобы не было ошибок при гидратации, по умолчанию\n * откладываем определение на второй рендер.\n *\n * [No SSR] Если передать `false`, то определение будет сразу.\n */\n\nexport function useAdaptivityHasPointer() {\n  var deferDetect = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n\n  var _React$useContext = React.useContext(AdaptivityContext),\n      hasPointerContext = _React$useContext.hasPointer;\n\n  var hasPointer = hasPointerContext === undefined ? hasPointerLib : hasPointerContext;\n  var isClient = useIsClient(!deferDetect);\n\n  if (!isClient) {\n    return undefined;\n  }\n\n  return hasPointer;\n}","map":{"version":3,"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,QAAQ,IAAIC,aAArB,QAA0C,iBAA1C;AACA,SAASC,iBAAT,QAAkC,oDAAlC;AACA,SAASC,WAAT,QAA4B,eAA5B;AAEA;AACA;AACA;AACA;AACA;AACA;;AAGA,OAAO,SAASC,uBAAT,GAA0E;EAAA,IAAzCC,WAAW,uEAAG,IAA2B;;EAC/E,wBAA0CN,KAAK,CAACO,UAANP,CAAiBG,iBAAjBH,CAA1C;EAAA,IAAoBQ,iBAAiB,qBAA7BC,UAAR;;EACA,IAAMA,UAAU,GAAGD,iBAAiB,KAAKE,SAAtBF,GAAkCN,aAAlCM,GAAkDA,iBAArE;EAEA,IAAMG,QAAQ,GAAGP,WAAW,CAAC,CAACE,WAAF,CAA5B;;EACA,IAAI,CAACK,QAAL,EAAe;IACb,OAAOD,SAAP;EACF;;EAEA,OAAOD,UAAP;AACF","names":["React","hasMouse","hasPointerLib","AdaptivityContext","useIsClient","useAdaptivityHasPointer","deferDetect","useContext","hasPointerContext","hasPointer","undefined","isClient"],"sources":["/Users/pitus_anonimous/Desktop/youth_bit_hack/youth_bit_vk/node_modules/@vkontakte/vkui/src/hooks/useAdaptivityHasPointer.ts"],"sourcesContent":["import * as React from 'react';\nimport { hasMouse as hasPointerLib } from '@vkontakte/vkjs';\nimport { AdaptivityContext } from '../components/AdaptivityProvider/AdaptivityContext';\nimport { useIsClient } from './useIsClient';\n\n/**\n * Определение происходит с помощью `window.matchMedia`. Для того, чтобы не было ошибок при гидратации, по умолчанию\n * откладываем определение на второй рендер.\n *\n * [No SSR] Если передать `false`, то определение будет сразу.\n */\nexport function useAdaptivityHasPointer(deferDetect?: true): undefined | boolean; // prettier-ignore\nexport function useAdaptivityHasPointer(deferDetect?: false): boolean;\nexport function useAdaptivityHasPointer(deferDetect = true): undefined | boolean {\n  const { hasPointer: hasPointerContext } = React.useContext(AdaptivityContext);\n  const hasPointer = hasPointerContext === undefined ? hasPointerLib : hasPointerContext;\n\n  const isClient = useIsClient(!deferDetect);\n  if (!isClient) {\n    return undefined;\n  }\n\n  return hasPointer;\n}\n"]},"metadata":{},"sourceType":"module"}