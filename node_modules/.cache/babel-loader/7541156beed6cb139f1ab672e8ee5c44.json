{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"min\", \"max\", \"step\", \"value\", \"defaultValue\", \"onChange\", \"getRootRef\", \"disabled\", \"className\"];\nimport * as React from 'react';\nimport { Touch } from '../Touch/Touch';\nimport { classNames } from '@vkontakte/vkjs';\nimport { rescale } from '../../helpers/math';\nimport { useExternRef } from '../../hooks/useExternRef';\nimport { useAdaptivity } from '../../hooks/useAdaptivity';\nimport { getSizeYClassName } from '../../helpers/getSizeYClassName';\nexport var UniversalSlider = function UniversalSlider(_ref) {\n  var _ref$min = _ref.min,\n      min = _ref$min === void 0 ? 0 : _ref$min,\n      _ref$max = _ref.max,\n      max = _ref$max === void 0 ? 100 : _ref$max,\n      step = _ref.step,\n      _ref$value = _ref.value,\n      value = _ref$value === void 0 ? [0, 0] : _ref$value,\n      defaultValue = _ref.defaultValue,\n      onChange = _ref.onChange,\n      getRootRef = _ref.getRootRef,\n      disabled = _ref.disabled,\n      className = _ref.className,\n      restProps = _objectWithoutProperties(_ref, _excluded);\n\n  var _value = _slicedToArray(value, 2),\n      start = _value[0],\n      end = _value[1];\n\n  var isRange = start != null;\n  var gesture = React.useRef({\n    dragging: false,\n    startX: 0,\n    containerWidth: 0\n  }).current;\n  var container = useExternRef(getRootRef);\n  var thumbStart = React.useRef(null);\n  var thumbEnd = React.useRef(null);\n\n  var _useAdaptivity = useAdaptivity(),\n      sizeY = _useAdaptivity.sizeY;\n\n  var offsetToValue = function offsetToValue(absolute) {\n    return rescale(absolute, [0, gesture.containerWidth], [min, max], {\n      step: step\n    });\n  };\n\n  var updateRange = function updateRange(nextValue) {\n    if (start == null) {\n      return [null, nextValue];\n    }\n\n    var dragging = gesture.dragging;\n\n    if (dragging === 'start') {\n      if (nextValue > end) {\n        // \"перехватиться\", если перетянули за конец\n        gesture.dragging = 'end';\n        return [end, nextValue];\n      }\n\n      return [nextValue, end];\n    }\n\n    if (dragging === 'end') {\n      if (nextValue < start) {\n        // \"перехватиться\", если перетянули за начало\n        gesture.dragging = 'start';\n        return [nextValue, start];\n      }\n\n      return [start, nextValue];\n    }\n\n    return value;\n  };\n\n  var snapDirection = function snapDirection(pos, target) {\n    if (target === thumbStart.current) {\n      return 'start';\n    }\n\n    if (target === thumbEnd.current) {\n      return 'end';\n    }\n\n    return Math.abs((start !== null && start !== void 0 ? start : 0) - pos) <= Math.abs(end - pos) ? 'start' : 'end';\n  };\n\n  var onStart = function onStart(e) {\n    var _container$current, _boundingRect$width, _boundingRect$left;\n\n    var boundingRect = (_container$current = container.current) === null || _container$current === void 0 ? void 0 : _container$current.getBoundingClientRect();\n    gesture.containerWidth = (_boundingRect$width = boundingRect === null || boundingRect === void 0 ? void 0 : boundingRect.width) !== null && _boundingRect$width !== void 0 ? _boundingRect$width : 0;\n    var absolutePosition = e.startX - ((_boundingRect$left = boundingRect === null || boundingRect === void 0 ? void 0 : boundingRect.left) !== null && _boundingRect$left !== void 0 ? _boundingRect$left : 0);\n    var pos = offsetToValue(absolutePosition);\n    gesture.dragging = snapDirection(pos, e.originalEvent.target);\n    gesture.startX = absolutePosition;\n    onChange === null || onChange === void 0 ? void 0 : onChange(updateRange(pos), e);\n    e.originalEvent.stopPropagation();\n  };\n\n  var onMove = function onMove(e) {\n    onChange === null || onChange === void 0 ? void 0 : onChange(updateRange(offsetToValue(gesture.startX + (e.shiftX || 0))), e);\n    e.originalEvent.stopPropagation();\n    e.originalEvent.preventDefault();\n  };\n\n  var onEnd = function onEnd(e) {\n    gesture.dragging = false;\n    e.originalEvent.stopPropagation();\n  };\n\n  var toPercent = function toPercent(v) {\n    return (v - min) / (max - min) * 100;\n  };\n\n  var draggerStyle = isRange ? {\n    width: \"\".concat(toPercent(end) - toPercent(start !== null && start !== void 0 ? start : 0), \"%\"),\n    left: \"\".concat(toPercent(start !== null && start !== void 0 ? start : 0), \"%\")\n  } : {\n    width: \"\".concat(toPercent(end), \"%\")\n  };\n  return /*#__PURE__*/React.createElement(Touch, _extends({\n    \"data-value\": isRange ? value.join(',') : value\n  }, restProps, disabled ? {} : {\n    onStart: onStart,\n    onMove: onMove,\n    onEnd: onEnd\n  }, {\n    className: classNames(\"vkuiSlider\", getSizeYClassName(\"vkuiSlider\", sizeY), disabled && \"vkuiSlider--disabled\", className)\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    ref: container,\n    className: \"vkuiSlider__in\"\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"vkuiSlider__dragger\",\n    style: draggerStyle\n  }, isRange && /*#__PURE__*/React.createElement(\"span\", {\n    className: classNames(\"vkuiSlider__thumb\", \"vkuiSlider__thumb--start\"),\n    ref: thumbStart\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    className: classNames(\"vkuiSlider__thumb\", \"vkuiSlider__thumb--end\"),\n    ref: thumbEnd\n  }))));\n};","map":{"version":3,"mappings":"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","names":["React","Touch","classNames","rescale","useExternRef","useAdaptivity","getSizeYClassName","UniversalSlider","_ref","min","_ref$min","_ref$max","max","step","_ref$value","value","defaultValue","onChange","getRootRef","disabled","className","restProps","start","end","isRange","gesture","useRef","dragging","startX","containerWidth","current","container","thumbStart","thumbEnd","sizeY","offsetToValue","absolute","updateRange","nextValue","snapDirection","pos","target","Math","abs","onStart","e","boundingRect","_container$current","getBoundingClientRect","width","_boundingRect$width","absolutePosition","left","_boundingRect$left","originalEvent","stopPropagation","onMove","shiftX","preventDefault","onEnd","toPercent","v","draggerStyle","_extends","join","ref","style"],"sources":["/Users/pitus_anonimous/Desktop/youth_bit_hack/youth_bit_vk/node_modules/@vkontakte/vkui/src/components/RangeSlider/UniversalSlider.tsx"],"sourcesContent":["import * as React from 'react';\nimport { Touch, TouchEvent, TouchEventHandler } from '../Touch/Touch';\nimport { classNames } from '@vkontakte/vkjs';\nimport { HasRootRef } from '../../types';\nimport { rescale } from '../../helpers/math';\nimport { useExternRef } from '../../hooks/useExternRef';\nimport { useAdaptivity } from '../../hooks/useAdaptivity';\nimport { getSizeYClassName } from '../../helpers/getSizeYClassName';\nimport styles from '../Slider/Slider.module.css';\n\nexport type UniversalValue = [number | null, number];\n\nexport interface UniversalSliderProps<Value>\n  extends HasRootRef<HTMLDivElement>,\n    Omit<React.HTMLAttributes<HTMLDivElement>, 'value' | 'defaultValue' | 'onChange'> {\n  min?: number;\n  max?: number;\n  step?: number;\n  value?: Value;\n  defaultValue?: Value;\n  disabled?: boolean;\n  onChange?(value: Value, e: TouchEvent): void;\n}\n\nexport const UniversalSlider = ({\n  min = 0,\n  max = 100,\n  step,\n  value = [0, 0],\n  defaultValue,\n  onChange,\n  getRootRef,\n  disabled,\n  className,\n  ...restProps\n}: UniversalSliderProps<UniversalValue>) => {\n  const [start, end] = value;\n  const isRange = start != null;\n  const gesture = React.useRef({\n    dragging: false as false | 'start' | 'end',\n    startX: 0,\n    containerWidth: 0,\n  }).current;\n  const container = useExternRef(getRootRef);\n  const thumbStart = React.useRef<HTMLDivElement>(null);\n  const thumbEnd = React.useRef<HTMLDivElement>(null);\n  const { sizeY } = useAdaptivity();\n\n  const offsetToValue = (absolute: number) => {\n    return rescale(absolute, [0, gesture.containerWidth], [min, max], { step });\n  };\n\n  const updateRange = (nextValue: number): UniversalValue => {\n    if (start == null) {\n      return [null, nextValue];\n    }\n\n    const { dragging } = gesture;\n    if (dragging === 'start') {\n      if (nextValue > end) {\n        // \"перехватиться\", если перетянули за конец\n        gesture.dragging = 'end';\n        return [end, nextValue];\n      }\n      return [nextValue, end];\n    }\n    if (dragging === 'end') {\n      if (nextValue < start) {\n        // \"перехватиться\", если перетянули за начало\n        gesture.dragging = 'start';\n        return [nextValue, start];\n      }\n      return [start, nextValue];\n    }\n\n    return value;\n  };\n\n  const snapDirection = (pos: number, target: EventTarget | null) => {\n    if (target === thumbStart.current) {\n      return 'start';\n    }\n    if (target === thumbEnd.current) {\n      return 'end';\n    }\n    return Math.abs((start ?? 0) - pos) <= Math.abs(end - pos) ? 'start' : 'end';\n  };\n\n  const onStart: TouchEventHandler = (e: TouchEvent) => {\n    const boundingRect = container.current?.getBoundingClientRect();\n    gesture.containerWidth = boundingRect?.width ?? 0;\n\n    const absolutePosition = e.startX - (boundingRect?.left ?? 0);\n    const pos = offsetToValue(absolutePosition);\n    gesture.dragging = snapDirection(pos, e.originalEvent.target);\n    gesture.startX = absolutePosition;\n\n    onChange?.(updateRange(pos), e);\n    e.originalEvent.stopPropagation();\n  };\n\n  const onMove: TouchEventHandler = (e: TouchEvent) => {\n    onChange?.(updateRange(offsetToValue(gesture.startX + (e.shiftX || 0))), e);\n\n    e.originalEvent.stopPropagation();\n    e.originalEvent.preventDefault();\n  };\n\n  const onEnd: TouchEventHandler = (e) => {\n    gesture.dragging = false;\n    e.originalEvent.stopPropagation();\n  };\n\n  const toPercent = (v: number) => ((v - min) / (max - min)) * 100;\n  const draggerStyle = isRange\n    ? {\n        width: `${toPercent(end) - toPercent(start ?? 0)}%`,\n        left: `${toPercent(start ?? 0)}%`,\n      }\n    : {\n        width: `${toPercent(end)}%`,\n      };\n\n  return (\n    <Touch\n      data-value={isRange ? value.join(',') : value}\n      {...restProps}\n      {...(disabled ? {} : { onStart, onMove, onEnd })}\n      className={classNames(\n        styles['Slider'],\n        getSizeYClassName(styles['Slider'], sizeY),\n        disabled && styles['Slider--disabled'],\n        className,\n      )}\n    >\n      <div ref={container} className={styles['Slider__in']}>\n        <div className={styles['Slider__dragger']} style={draggerStyle}>\n          {isRange && (\n            <span\n              className={classNames(styles['Slider__thumb'], styles['Slider__thumb--start'])}\n              ref={thumbStart}\n            />\n          )}\n          <span\n            className={classNames(styles['Slider__thumb'], styles['Slider__thumb--end'])}\n            ref={thumbEnd}\n          />\n        </div>\n      </div>\n    </Touch>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}