{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"children\", \"onClose\", \"opened\", \"className\"];\nimport * as React from 'react';\nimport { FixedLayout } from '../FixedLayout/FixedLayout';\nimport { classNames } from '@vkontakte/vkjs';\nimport { useAdaptivity } from '../../hooks/useAdaptivity';\nimport { useDOM } from '../../lib/dom';\nimport { Platform } from '../../lib/platform';\nimport { useIsomorphicLayoutEffect } from '../../lib/useIsomorphicLayoutEffect';\nimport { useGlobalEventListener } from '../../hooks/useGlobalEventListener';\nimport { useTimeout } from '../../hooks/useTimeout';\nimport { usePlatform } from '../../hooks/usePlatform';\nimport { useScrollLock } from '../AppRoot/ScrollContext';\nimport { getSizeXClassName } from '../../helpers/getSizeXClassName';\n/**\n * @see https://vkcom.github.io/VKUI/#/PanelHeaderContext\n */\n\nexport var PanelHeaderContext = function PanelHeaderContext(_ref) {\n  var children = _ref.children,\n      onClose = _ref.onClose,\n      _ref$opened = _ref.opened,\n      opened = _ref$opened === void 0 ? false : _ref$opened,\n      className = _ref.className,\n      restProps = _objectWithoutProperties(_ref, _excluded);\n\n  var _useDOM = useDOM(),\n      document = _useDOM.document;\n\n  var platform = usePlatform();\n\n  var _React$useState = React.useState(opened),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      visible = _React$useState2[0],\n      setVisible = _React$useState2[1];\n\n  var closing = visible && !opened;\n\n  var _useAdaptivity = useAdaptivity(),\n      sizeX = _useAdaptivity.sizeX;\n\n  var elementRef = React.useRef(null);\n  useIsomorphicLayoutEffect(function () {\n    opened && setVisible(true);\n  }, [opened]);\n  useScrollLock(platform !== Platform.VKCOM && opened); // start closing on outer click\n\n  useGlobalEventListener(document, 'click', opened && !closing && function (event) {\n    if (elementRef.current && !elementRef.current.contains(event.target)) {\n      event.stopPropagation();\n      onClose();\n    }\n  }, {\n    capture: true\n  }); // fallback onAnimationEnd when animationend not supported\n\n  var onAnimationEnd = function onAnimationEnd() {\n    return setVisible(false);\n  };\n\n  var animationFallback = useTimeout(onAnimationEnd, 200);\n  React.useEffect(function () {\n    return closing ? animationFallback.set() : animationFallback.clear();\n  }, [animationFallback, closing]);\n  return /*#__PURE__*/React.createElement(FixedLayout, _extends({}, restProps, {\n    className: classNames(\"vkuiPanelHeaderContext\", platform === Platform.IOS && \"vkuiPanelHeaderContext--ios\", opened && \"vkuiPanelHeaderContext--opened\", closing && \"vkuiPanelHeaderContext--closing\", getSizeXClassName(\"vkuiPanelHeaderContext\", sizeX), \"vkuiPanelHeaderContext--rounded\", className),\n    vertical: \"top\"\n  }), visible && /*#__PURE__*/React.createElement(\"div\", {\n    onClick: function onClick(event) {\n      event.stopPropagation();\n      onClose();\n    },\n    className: \"vkuiPanelHeaderContext__fade\"\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"vkuiPanelHeaderContext__in\",\n    ref: elementRef,\n    onAnimationEnd: closing ? onAnimationEnd : undefined\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"vkuiPanelHeaderContext__content\"\n  }, visible && children)));\n};","map":{"version":3,"mappings":";;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,WAAT,QAA4B,4BAA5B;AACA,SAASC,UAAT,QAA2B,iBAA3B;AACA,SAASC,aAAT,QAA8B,2BAA9B;AACA,SAASC,MAAT,QAAuB,eAAvB;AACA,SAASC,QAAT,QAAyB,oBAAzB;AACA,SAASC,yBAAT,QAA0C,qCAA1C;AACA,SAASC,sBAAT,QAAuC,oCAAvC;AACA,SAASC,UAAT,QAA2B,wBAA3B;AACA,SAASC,WAAT,QAA4B,yBAA5B;AACA,SAASC,aAAT,QAA8B,0BAA9B;AACA,SAASC,iBAAT,QAAkC,iCAAlC;AAQA;AACA;AACA;;AACA,OAAO,IAAMC,kBAAkB,GAAG,SAArBA,kBAAqB,CAAHC,IAAG,EAMH;EAAA,IAL7BC,QAAQ,QAARA,QAK6B;EAAA,IAJ7BC,OAAO,QAAPA,OAI6B;EAAA,IAJtBC,mBACPC,MAG6B;EAAA,IAH7BA,MAAM,4BAAG,KAAH,GAAQD,WAGe;EAAA,IAF7BE,SAAS,QAATA,SAE6B;EAAA,IAD1BC,SAAS,4CACiB;;EAC7B,cAAqBf,MAAM,EAA3B;EAAA,IAAQgB,QAAQ,WAARA,QAAR;;EACA,IAAMC,QAAQ,GAAGZ,WAAW,EAA5B;;EACA,sBAA8BT,KAAK,CAACsB,QAANtB,CAAeiB,MAAfjB,CAA9B;EAAA,IAAoDuB,qDAApD;EAAA,IAAOC,OAAO,sBAAd;EAAA,IAAgBC,UAAU,sBAA1B;;EACA,IAAMC,OAAO,GAAGF,OAAO,IAAI,CAACP,MAA5B;;EACA,qBAAkBd,aAAa,EAA/B;EAAA,IAAQwB,KAAK,kBAALA,KAAR;;EACA,IAAMC,UAAU,GAAG5B,KAAK,CAAC6B,MAAN7B,CAA6B,IAA7BA,CAAnB;EAEAM,yBAAyB,CAAC,YAAM;IAC9BW,MAAM,IAAIQ,UAAU,CAAC,IAAD,CAApBR;EACD,CAFwB,EAEtB,CAACA,MAAD,CAFsB,CAAzBX;EAIAI,aAAa,CAACW,QAAQ,KAAKhB,QAAQ,CAACyB,KAAtBT,IAA+BJ,MAAhC,CAAbP,CAZ6B,CAc7B;;EACAH,sBAAsB,CACpBa,QADoB,EAEpB,OAFoB,EAGpBH,MAAM,IACJ,CAACS,OADHT,IAEG,UAACc,KAAD,EAAW;IACV,IAAIH,UAAU,CAACI,OAAXJ,IAAsB,CAACA,UAAU,CAACI,OAAXJ,CAAmBK,QAAnBL,CAA4BG,KAAK,CAACG,MAAlCN,CAA3B,EAA8E;MAC5EG,KAAK,CAACI,eAANJ;MACAhB,OAAO;IACT;EACA,CAVgB,EAWpB;IAAEqB,OAAO,EAAE;EAAX,CAXoB,CAAtB7B,CAf6B,CA6B7B;;EACA,IAAM8B,cAAc,GAAG,SAAjBA,cAAiB,GAAH;IAAA,OAASZ,UAAU,CAAC,KAAD,CAAnB;EAA0B,CAA9C;;EACA,IAAMa,iBAAiB,GAAG9B,UAAU,CAAC6B,cAAD,EAAiB,GAAjB,CAApC;EACArC,KAAK,CAACuC,SAANvC,CACE;IAAA,OAAO0B,OAAO,GAAGY,iBAAiB,CAACE,GAAlBF,EAAH,GAA6BA,iBAAiB,CAACG,KAAlBH,EAA3C;EAAqE,CADvEtC,EAEE,CAACsC,iBAAD,EAAoBZ,OAApB,CAFF1B;EAKA,oBACEA,oBAACC,WAAD,EAAYyC,aACNvB,SADM,EACG;IACbD,SAAS,EAAEhB,UAAU,2BAEnBmB,QAAQ,KAAKhB,QAAQ,CAACsC,GAAtBtB,IAAyB,6BAFN,EAGnBJ,MAAM,oCAHa,EAInBS,OAAO,qCAJY,EAKnBf,iBAAiB,2BAA+BgB,KAA/B,CALE,EAKmC,iCALnC,EAOnBT,SAPmB,CADR;IAUb0B,QAAQ,EAAC;EAVI,CADH,CAAZ,EAaGpB,OAAO,iBACNxB;IACE6C,OAAO,EAAE,iBAACd,KAAD,EAAW;MAClBA,KAAK,CAACI,eAANJ;MACAhB,OAAO;IACP,CAJJ;IAKEG,SAAS;EALX,EAdJ,EAqBG,aACDlB;IACEkB,SAAS,8BADX;IAEE4B,GAAG,EAAElB,UAFP;IAGES,cAAc,EAAEX,OAAO,GAAGW,cAAH,GAAoBU;EAH7C,GAGuD,aAErD/C;IAAKkB,SAAS;EAAd,GAAwDM,OAAO,IAAIV,QAAnE,CALF,CAtBF,CADF;AAgCD,CA3EM","names":["React","FixedLayout","classNames","useAdaptivity","useDOM","Platform","useIsomorphicLayoutEffect","useGlobalEventListener","useTimeout","usePlatform","useScrollLock","getSizeXClassName","PanelHeaderContext","_ref","children","onClose","_ref$opened","opened","className","restProps","document","platform","useState","_React$useState2","visible","setVisible","closing","sizeX","elementRef","useRef","VKCOM","event","current","contains","target","stopPropagation","capture","onAnimationEnd","animationFallback","useEffect","set","clear","_extends","IOS","vertical","onClick","ref","undefined"],"sources":["/Users/pitus_anonimous/Desktop/youth_bit_hack/youth_bit_vk/node_modules/@vkontakte/vkui/src/components/PanelHeaderContext/PanelHeaderContext.tsx"],"sourcesContent":["import * as React from 'react';\nimport { FixedLayout } from '../FixedLayout/FixedLayout';\nimport { classNames } from '@vkontakte/vkjs';\nimport { useAdaptivity } from '../../hooks/useAdaptivity';\nimport { useDOM } from '../../lib/dom';\nimport { Platform } from '../../lib/platform';\nimport { useIsomorphicLayoutEffect } from '../../lib/useIsomorphicLayoutEffect';\nimport { useGlobalEventListener } from '../../hooks/useGlobalEventListener';\nimport { useTimeout } from '../../hooks/useTimeout';\nimport { usePlatform } from '../../hooks/usePlatform';\nimport { useScrollLock } from '../AppRoot/ScrollContext';\nimport { getSizeXClassName } from '../../helpers/getSizeXClassName';\nimport styles from './PanelHeaderContext.module.css';\n\nexport interface PanelHeaderContextProps extends React.HTMLAttributes<HTMLDivElement> {\n  opened: boolean;\n  onClose: VoidFunction;\n}\n\n/**\n * @see https://vkcom.github.io/VKUI/#/PanelHeaderContext\n */\nexport const PanelHeaderContext = ({\n  children,\n  onClose,\n  opened = false,\n  className,\n  ...restProps\n}: PanelHeaderContextProps) => {\n  const { document } = useDOM();\n  const platform = usePlatform();\n  const [visible, setVisible] = React.useState(opened);\n  const closing = visible && !opened;\n  const { sizeX } = useAdaptivity();\n  const elementRef = React.useRef<HTMLDivElement>(null);\n\n  useIsomorphicLayoutEffect(() => {\n    opened && setVisible(true);\n  }, [opened]);\n\n  useScrollLock(platform !== Platform.VKCOM && opened);\n\n  // start closing on outer click\n  useGlobalEventListener(\n    document,\n    'click',\n    opened &&\n      !closing &&\n      ((event) => {\n        if (elementRef.current && !elementRef.current.contains(event.target as Node)) {\n          event.stopPropagation();\n          onClose();\n        }\n      }),\n    { capture: true },\n  );\n\n  // fallback onAnimationEnd when animationend not supported\n  const onAnimationEnd = () => setVisible(false);\n  const animationFallback = useTimeout(onAnimationEnd, 200);\n  React.useEffect(\n    () => (closing ? animationFallback.set() : animationFallback.clear()),\n    [animationFallback, closing],\n  );\n\n  return (\n    <FixedLayout\n      {...restProps}\n      className={classNames(\n        styles['PanelHeaderContext'],\n        platform === Platform.IOS && styles['PanelHeaderContext--ios'],\n        opened && styles['PanelHeaderContext--opened'],\n        closing && styles['PanelHeaderContext--closing'],\n        getSizeXClassName(styles['PanelHeaderContext'], sizeX),\n        styles['PanelHeaderContext--rounded'],\n        className,\n      )}\n      vertical=\"top\"\n    >\n      {visible && (\n        <div\n          onClick={(event) => {\n            event.stopPropagation();\n            onClose();\n          }}\n          className={styles['PanelHeaderContext__fade']}\n        />\n      )}\n      <div\n        className={styles['PanelHeaderContext__in']}\n        ref={elementRef}\n        onAnimationEnd={closing ? onAnimationEnd : undefined}\n      >\n        <div className={styles['PanelHeaderContext__content']}>{visible && children}</div>\n      </div>\n    </FixedLayout>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}