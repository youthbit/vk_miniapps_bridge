{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"children\", \"arrow\", \"appearance\", \"className\"];\nimport * as React from 'react';\nimport { HoverPopper } from '../HoverPopper/HoverPopper';\nimport { classNames } from '@vkontakte/vkjs';\n/**\n * @see https://vkcom.github.io/VKUI/#/RichTooltip\n */\n\nexport var RichTooltip = function RichTooltip(_ref) {\n  var children = _ref.children,\n      _ref$arrow = _ref.arrow,\n      arrow = _ref$arrow === void 0 ? true : _ref$arrow,\n      _ref$appearance = _ref.appearance,\n      appearance = _ref$appearance === void 0 ? 'neutral' : _ref$appearance,\n      className = _ref.className,\n      popperProps = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(HoverPopper, _extends({\n    className: classNames(\"vkuiRichTooltip\", styles[\"RichTooltip--appearance-\".concat(appearance)], className),\n    arrow: arrow,\n    arrowClassName: \"vkuiRichTooltip__arrow\"\n  }, popperProps), children);\n};\nvar styles = {\n  \"RichTooltip--appearance-accent\": \"vkuiRichTooltip--appearance-accent\",\n  \"RichTooltip--appearance-white\": \"vkuiRichTooltip--appearance-white\",\n  \"RichTooltip--appearance-black\": \"vkuiRichTooltip--appearance-black\",\n  \"RichTooltip--appearance-inversion\": \"vkuiRichTooltip--appearance-inversion\",\n  \"RichTooltip--appearance-neutral\": \"vkuiRichTooltip--appearance-neutral\"\n};","map":{"version":3,"mappings":";;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,WAAT,QAA8C,4BAA9C;AACA,SAASC,UAAT,QAA2B,iBAA3B;AAUA;AACA;AACA;;AACA,OAAO,IAAMC,WAAW,GAAG,SAAdA,WAAc,CAAHC,IAAG,EAMH;EAAA,IALtBC,QAAQ,QAARA,QAKsB;EAAA,IALdC,kBACRC,KAIsB;EAAA,IAJtBA,KAAK,2BAAG,IAAH,GAAOD,UAIU;EAAA,IAJVE,uBACZC,UAGsB;EAAA,IAHtBA,UAAU,gCAAG,SAAH,GAAYD,eAGA;EAAA,IAFtBE,SAAS,QAATA,SAEsB;EAAA,IADnBC,WAAW,4CACQ;;EACtB,oBACEX,oBAACC,WAAD,EAAYW;IACVF,SAAS,EAAER,UAAU,oBAEnBW,MAAM,mCAA4BJ,UAA5B,EAFa,EAGnBC,SAHmB,CADX;IAMVH,KAAK,EAAEA,KANG;IAOVO,cAAc;EAPJ,GAQNH,WARM,CAAZ,EAUGN,QAVH,CADF;AAcD,CArBM;AAqBL;EAAA;EAAA;EAAA;EAAA;EAAA;AAAA","names":["React","HoverPopper","classNames","RichTooltip","_ref","children","_ref$arrow","arrow","_ref$appearance","appearance","className","popperProps","_extends","styles","arrowClassName"],"sources":["/Users/pitus_anonimous/Desktop/youth_bit_hack/youth_bit_vk/node_modules/@vkontakte/vkui/src/components/RichTooltip/RichTooltip.tsx"],"sourcesContent":["import * as React from 'react';\nimport { HoverPopper, HoverPopperProps } from '../HoverPopper/HoverPopper';\nimport { classNames } from '@vkontakte/vkjs';\nimport styles from './RichTooltip.module.css';\n\nexport interface RichTooltipProps extends Omit<HoverPopperProps, 'arrowClassName'> {\n  /**\n   * Стиль отображения подсказки\n   */\n  appearance?: 'accent' | 'neutral' | 'white' | 'black' | 'inversion';\n}\n\n/**\n * @see https://vkcom.github.io/VKUI/#/RichTooltip\n */\nexport const RichTooltip = ({\n  children,\n  arrow = true,\n  appearance = 'neutral',\n  className,\n  ...popperProps\n}: RichTooltipProps) => {\n  return (\n    <HoverPopper\n      className={classNames(\n        styles['RichTooltip'],\n        styles[`RichTooltip--appearance-${appearance}`],\n        className,\n      )}\n      arrow={arrow}\n      arrowClassName={styles['RichTooltip__arrow']}\n      {...popperProps}\n    >\n      {children}\n    </HoverPopper>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}