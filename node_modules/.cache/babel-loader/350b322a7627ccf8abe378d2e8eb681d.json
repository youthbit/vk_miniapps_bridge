{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _objectSpread from \"@babel/runtime/helpers/objectSpread2\";\nimport _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport * as React from 'react';\nimport { ModalType } from './types';\nimport { warnOnce } from '../../lib/warnOnce';\nimport { getNavId } from '../../lib/getNavId';\nimport { useIsomorphicLayoutEffect } from '../../lib/useIsomorphicLayoutEffect';\nimport { noop, isFunction } from '@vkontakte/vkjs';\n\nfunction getModals(children) {\n  return React.Children.toArray(children);\n}\n\nvar warn = warnOnce('ModalRoot');\nexport function modalTransitionReducer(state, action) {\n  if (action.type === 'setActive' && action.id !== state.activeModal) {\n    var nextModal = action.id; // preserve exiting modal if switching mid-transition\n\n    var prevModal = state.exitingModal || state.activeModal;\n    var history = state.history ? _toConsumableArray(state.history) : [];\n    var isBack = Boolean(nextModal && history.includes(nextModal));\n\n    if (nextModal === null) {\n      history = [];\n    } else if (isBack) {\n      history = history.splice(0, history.indexOf(nextModal) + 1);\n    } else {\n      history.push(nextModal);\n    }\n\n    return {\n      activeModal: nextModal,\n      // not entering yet\n      enteringModal: null,\n      exitingModal: prevModal,\n      history: history,\n      isBack: isBack\n    };\n  }\n\n  if (action.type === 'entered' && action.id === state.enteringModal) {\n    return _objectSpread(_objectSpread({}, state), {}, {\n      enteringModal: null\n    });\n  }\n\n  if (action.type === 'exited' && action.id === state.exitingModal) {\n    return _objectSpread(_objectSpread({}, state), {}, {\n      exitingModal: null\n    });\n  }\n\n  if (action.type === 'inited' && action.id === state.activeModal) {\n    return _objectSpread(_objectSpread({}, state), {}, {\n      enteringModal: action.id\n    });\n  }\n\n  return state;\n}\n/**\n * Реализует переход модалок. При смене activeModal m1 -> m2:\n * 1. activeModal: m1, exitingModal: null, enteringModal: null, триггер перехода\n * 2. activeModal: m2, exitingModal: m1, enteringModal: null, рендерим m2 чтобы прошел init, начинаем анимацию выхода\n * одновременный переход между ModalPage:\n *   3a. activeModal: m2, exitingModal: m1, enteringModal: m2\n *   4a. exitingModal и enteringModal переходят в null в порядке завершения анимации\n * ИЛИ дожидаемся скрытия ModalCard\n *   3b. activeModal: m2, exitingModal: null, enteringModal: m2\n *   4b. enteringModal переходит в null после завершения анимации\n * 5. activeModal: m2, exitingModal: null, enteringModal: null, переход закончен\n */\n\nexport function useModalManager(activeModal, children) {\n  var onOpen = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : noop;\n  var onOpened = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : noop;\n  var onClose = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : noop;\n  var onClosed = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : noop;\n  var initModal = arguments.length > 6 && arguments[6] !== undefined ? arguments[6] : noop;\n  var modalsState = React.useRef({}).current;\n  getModals(children).forEach(function (Modal) {\n    var modalProps = Modal.props;\n    var id = getNavId(modalProps, warn);\n    var state = id !== undefined && modalsState[id] || {\n      id: id !== null && id !== void 0 ? id : null\n    };\n    state.onOpen = Modal.props.onOpen;\n    state.onOpened = Modal.props.onOpened;\n    state.onClose = Modal.props.onClose;\n    state.onClosed = Modal.props.onClosed;\n    state.dynamicContentHeight = !!modalProps.dynamicContentHeight; // ModalPage props\n\n    if (typeof modalProps.settlingHeight === 'number') {\n      state.settlingHeight = modalProps.settlingHeight;\n    }\n\n    if (state.id !== null) {\n      modalsState[state.id] = state;\n    }\n  });\n  var isMissing = activeModal && !modalsState[activeModal];\n  var safeActiveModal = isMissing ? null : activeModal;\n\n  var _React$useReducer = React.useReducer(modalTransitionReducer, {\n    activeModal: safeActiveModal,\n    enteringModal: null,\n    exitingModal: null,\n    history: safeActiveModal ? [safeActiveModal] : [],\n    isBack: false\n  }),\n      _React$useReducer2 = _slicedToArray(_React$useReducer, 2),\n      transitionState = _React$useReducer2[0],\n      dispatchTransition = _React$useReducer2[1]; // Map props to state, render activeModal for init\n\n\n  useIsomorphicLayoutEffect(function () {\n    // ignore non-existent activeModal\n    if (process.env.NODE_ENV === 'development' && isMissing) {\n      warn(\"\\u041F\\u0435\\u0440\\u0435\\u0445\\u043E\\u0434 \\u043D\\u0435\\u0432\\u043E\\u0437\\u043C\\u043E\\u0436\\u0435\\u043D - \\u043C\\u043E\\u0434\\u0430\\u043B\\u044C\\u043D\\u043E\\u0435 \\u043E\\u043A\\u043D\\u043E (\\u0441\\u0442\\u0440\\u0430\\u043D\\u0438\\u0446\\u0430) \".concat(activeModal, \" \\u043D\\u0435 \\u0441\\u0443\\u0449\\u0435\\u0441\\u0442\\u0432\\u0443\\u0435\\u0442\"), 'error');\n    }\n\n    dispatchTransition({\n      type: 'setActive',\n      id: safeActiveModal !== null && safeActiveModal !== void 0 ? safeActiveModal : null\n    });\n  }, [activeModal]); // Init activeModal & set enteringModal\n\n  useIsomorphicLayoutEffect(function () {\n    if (transitionState.activeModal) {\n      initModal(modalsState[transitionState.activeModal]);\n      dispatchTransition({\n        type: 'inited',\n        id: transitionState.activeModal\n      });\n    }\n  }, [transitionState.activeModal]);\n\n  var isCard = function isCard(id) {\n    var _modalsState$id;\n\n    return id != null && ((_modalsState$id = modalsState[id]) === null || _modalsState$id === void 0 ? void 0 : _modalsState$id.type) === ModalType.CARD;\n  };\n\n  var onEntered = React.useCallback(function (id) {\n    if (id) {\n      var modalState = modalsState[id];\n\n      if (isFunction(modalState.onOpened)) {\n        modalState.onOpened();\n      } else if (isFunction(onOpened)) {\n        onOpened(id);\n      }\n    }\n\n    dispatchTransition({\n      type: 'entered',\n      id: id\n    });\n  }, [modalsState, onOpened]);\n  var onExited = React.useCallback(function (id) {\n    if (id) {\n      var modalState = modalsState[id];\n\n      if (isFunction(modalState.onClosed)) {\n        modalState.onClosed();\n      } else if (isFunction(onClosed)) {\n        onClosed(id);\n      }\n    }\n\n    dispatchTransition({\n      type: 'exited',\n      id: id\n    });\n  }, [modalsState, onClosed]);\n  var delayEnter = Boolean(transitionState.exitingModal && (isCard(activeModal) || isCard(transitionState.exitingModal)));\n  var getModalState = React.useCallback(function (id) {\n    return modalsState[id];\n  }, [modalsState]);\n\n  function onEnter() {\n    var modalState = transitionState.activeModal && modalsState[transitionState.activeModal];\n\n    if (modalState) {\n      if (isFunction(modalState.onOpen)) {\n        modalState.onOpen();\n      } else if (isFunction(onOpen)) {\n        onOpen(modalState.id);\n      }\n    }\n  }\n\n  function onExit() {\n    var modalState = transitionState.activeModal && modalsState[transitionState.activeModal];\n\n    if (modalState) {\n      if (isFunction(modalState.onClose)) {\n        modalState.onClose();\n      } else if (isFunction(onClose)) {\n        onClose(modalState.id);\n      }\n    }\n  }\n\n  return _objectSpread(_objectSpread({\n    onEnter: onEnter,\n    onEntered: onEntered,\n    onExit: onExit,\n    onExited: onExited\n  }, transitionState), {}, {\n    delayEnter: delayEnter,\n    getModalState: getModalState\n  });\n}\nexport function withModalManager() {\n  var initModal = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : noop;\n  return function (Wrapped) {\n    return function WithModalManager(props) {\n      var transitionManager = useModalManager(props.activeModal, props.children, props.onOpen, props.onOpened, props.onClose, props.onClosed, initModal);\n      return /*#__PURE__*/React.createElement(Wrapped, _extends({}, props, transitionManager));\n    };\n  };\n}","map":{"version":3,"mappings":"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","names":["React","ModalType","warnOnce","getNavId","useIsomorphicLayoutEffect","noop","isFunction","getModals","children","Children","toArray","warn","modalTransitionReducer","state","action","type","id","activeModal","nextModal","prevModal","exitingModal","history","_toConsumableArray","isBack","Boolean","includes","splice","indexOf","push","enteringModal","useModalManager","onOpen","onOpened","onClose","onClosed","initModal","modalsState","useRef","current","forEach","Modal","modalProps","props","undefined","dynamicContentHeight","settlingHeight","isMissing","safeActiveModal","useReducer","_React$useReducer2","transitionState","dispatchTransition","process","env","NODE_ENV","isCard","_modalsState$id","CARD","onEntered","useCallback","modalState","onExited","delayEnter","getModalState","onEnter","onExit","withModalManager","Wrapped","WithModalManager","transitionManager","_extends"],"sources":["/Users/pitus_anonimous/Desktop/youth_bit_hack/youth_bit_vk/node_modules/@vkontakte/vkui/src/components/ModalRoot/useModalManager.tsx"],"sourcesContent":["import * as React from 'react';\nimport { ModalsState, ModalsStateEntry, ModalType } from './types';\nimport { warnOnce } from '../../lib/warnOnce';\nimport { getNavId } from '../../lib/getNavId';\nimport { useIsomorphicLayoutEffect } from '../../lib/useIsomorphicLayoutEffect';\nimport { noop, isFunction } from '@vkontakte/vkjs';\n\ninterface ModalTransitionState {\n  activeModal?: string | null;\n  enteringModal?: string | null;\n  exitingModal?: string | null;\n\n  history?: string[];\n  isBack?: boolean | null;\n}\n\nexport interface ModalTransitionProps extends ModalTransitionState {\n  onEnter: VoidFunction;\n  onEntered: (id: string | null) => void;\n  onExit: VoidFunction;\n  onExited: (id: string | null) => void;\n  getModalState: (id: string) => ModalsStateEntry;\n  delayEnter: boolean;\n}\n\nfunction getModals(children: React.ReactNode | React.ReactNode[]) {\n  return React.Children.toArray(children) as React.ReactElement[];\n}\n\nconst warn = warnOnce('ModalRoot');\n\nexport function modalTransitionReducer(\n  state: ModalTransitionState,\n  action: {\n    type: 'setActive' | 'entered' | 'exited' | 'inited';\n    id: string | null;\n  },\n): ModalTransitionState {\n  if (action.type === 'setActive' && action.id !== state.activeModal) {\n    const nextModal = action.id;\n    // preserve exiting modal if switching mid-transition\n    const prevModal = state.exitingModal || state.activeModal;\n    let history = state.history ? [...state.history] : [];\n    const isBack = Boolean(nextModal && history.includes(nextModal));\n\n    if (nextModal === null) {\n      history = [];\n    } else if (isBack) {\n      history = history.splice(0, history.indexOf(nextModal) + 1);\n    } else {\n      history.push(nextModal);\n    }\n\n    return {\n      activeModal: nextModal,\n      // not entering yet\n      enteringModal: null,\n      exitingModal: prevModal,\n      history,\n      isBack,\n    };\n  }\n  if (action.type === 'entered' && action.id === state.enteringModal) {\n    return { ...state, enteringModal: null };\n  }\n  if (action.type === 'exited' && action.id === state.exitingModal) {\n    return { ...state, exitingModal: null };\n  }\n  if (action.type === 'inited' && action.id === state.activeModal) {\n    return { ...state, enteringModal: action.id };\n  }\n  return state;\n}\n\n/**\n * Реализует переход модалок. При смене activeModal m1 -> m2:\n * 1. activeModal: m1, exitingModal: null, enteringModal: null, триггер перехода\n * 2. activeModal: m2, exitingModal: m1, enteringModal: null, рендерим m2 чтобы прошел init, начинаем анимацию выхода\n * одновременный переход между ModalPage:\n *   3a. activeModal: m2, exitingModal: m1, enteringModal: m2\n *   4a. exitingModal и enteringModal переходят в null в порядке завершения анимации\n * ИЛИ дожидаемся скрытия ModalCard\n *   3b. activeModal: m2, exitingModal: null, enteringModal: m2\n *   4b. enteringModal переходит в null после завершения анимации\n * 5. activeModal: m2, exitingModal: null, enteringModal: null, переход закончен\n */\nexport function useModalManager(\n  activeModal: string | null | undefined,\n  children: React.ReactNode | React.ReactNode[],\n  onOpen: (id: string) => void = noop,\n  onOpened: (id: string) => void = noop,\n  onClose: (id: string) => void = noop,\n  onClosed: (id: string) => void = noop,\n  initModal: (state: ModalsStateEntry) => void = noop,\n): ModalTransitionProps {\n  const modalsState = React.useRef<ModalsState>({}).current;\n  getModals(children).forEach((Modal) => {\n    const modalProps = Modal.props;\n    const id = getNavId(modalProps, warn);\n    const state: ModalsStateEntry = (id !== undefined && modalsState[id]) || {\n      id: id ?? null,\n    };\n\n    state.onOpen = Modal.props.onOpen;\n    state.onOpened = Modal.props.onOpened;\n    state.onClose = Modal.props.onClose;\n    state.onClosed = Modal.props.onClosed;\n    state.dynamicContentHeight = !!modalProps.dynamicContentHeight;\n    // ModalPage props\n    if (typeof modalProps.settlingHeight === 'number') {\n      state.settlingHeight = modalProps.settlingHeight;\n    }\n\n    if (state.id !== null) {\n      modalsState[state.id] = state;\n    }\n  });\n\n  const isMissing = activeModal && !modalsState[activeModal];\n  const safeActiveModal = isMissing ? null : activeModal;\n  const [transitionState, dispatchTransition] = React.useReducer(modalTransitionReducer, {\n    activeModal: safeActiveModal,\n    enteringModal: null,\n    exitingModal: null,\n    history: safeActiveModal ? [safeActiveModal] : [],\n    isBack: false,\n  });\n\n  // Map props to state, render activeModal for init\n  useIsomorphicLayoutEffect(() => {\n    // ignore non-existent activeModal\n    if (process.env.NODE_ENV === 'development' && isMissing) {\n      warn(`Переход невозможен - модальное окно (страница) ${activeModal} не существует`, 'error');\n    }\n    dispatchTransition({ type: 'setActive', id: safeActiveModal ?? null });\n  }, [activeModal]);\n\n  // Init activeModal & set enteringModal\n  useIsomorphicLayoutEffect(() => {\n    if (transitionState.activeModal) {\n      initModal(modalsState[transitionState.activeModal]);\n      dispatchTransition({ type: 'inited', id: transitionState.activeModal });\n    }\n  }, [transitionState.activeModal]);\n\n  const isCard = (id: string | null | undefined) =>\n    id != null && modalsState[id]?.type === ModalType.CARD;\n  const onEntered = React.useCallback(\n    (id: string | null) => {\n      if (id) {\n        const modalState = modalsState[id];\n\n        if (isFunction(modalState.onOpened)) {\n          modalState.onOpened();\n        } else if (isFunction(onOpened)) {\n          onOpened(id);\n        }\n      }\n\n      dispatchTransition({ type: 'entered', id });\n    },\n    [modalsState, onOpened],\n  );\n  const onExited = React.useCallback(\n    (id: string | null) => {\n      if (id) {\n        const modalState = modalsState[id];\n\n        if (isFunction(modalState.onClosed)) {\n          modalState.onClosed();\n        } else if (isFunction(onClosed)) {\n          onClosed(id);\n        }\n      }\n\n      dispatchTransition({ type: 'exited', id });\n    },\n    [modalsState, onClosed],\n  );\n  const delayEnter = Boolean(\n    transitionState.exitingModal && (isCard(activeModal) || isCard(transitionState.exitingModal)),\n  );\n  const getModalState = React.useCallback((id: string) => modalsState[id], [modalsState]);\n\n  function onEnter() {\n    const modalState = transitionState.activeModal && modalsState[transitionState.activeModal];\n    if (modalState) {\n      if (isFunction(modalState.onOpen)) {\n        modalState.onOpen();\n      } else if (isFunction(onOpen)) {\n        onOpen(modalState.id);\n      }\n    }\n  }\n\n  function onExit() {\n    const modalState = transitionState.activeModal && modalsState[transitionState.activeModal];\n    if (modalState) {\n      if (isFunction(modalState.onClose)) {\n        modalState.onClose();\n      } else if (isFunction(onClose)) {\n        onClose(modalState.id);\n      }\n    }\n  }\n\n  return {\n    onEnter,\n    onEntered,\n    onExit,\n    onExited,\n    ...transitionState,\n    delayEnter,\n    getModalState,\n  };\n}\n\nexport function withModalManager(initModal: (a: ModalsStateEntry) => void = noop) {\n  return function <Props extends ModalTransitionProps>(\n    Wrapped: React.ComponentType<Props>,\n  ): React.ComponentType<\n    Omit<Props, keyof ModalTransitionProps> & {\n      activeModal?: string | null;\n      children?: React.ReactNode;\n    }\n  > {\n    return function WithModalManager(props) {\n      const transitionManager = useModalManager(\n        props.activeModal,\n        props.children,\n        (props as any).onOpen,\n        (props as any).onOpened,\n        (props as any).onClose,\n        (props as any).onClosed,\n        initModal,\n      );\n      return <Wrapped {...(props as any)} {...transitionManager} />;\n    };\n  };\n}\n"]},"metadata":{},"sourceType":"module"}