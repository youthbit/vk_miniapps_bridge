{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport * as React from 'react';\nimport vkBridge from '@vkontakte/vk-bridge';\nimport { useIsomorphicLayoutEffect } from '../lib/useIsomorphicLayoutEffect';\nvar initialState = {\n  type: '',\n  viewportWidth: 0,\n  viewportHeight: 0\n};\n\nfunction resolveAdaptivity(e) {\n  var _e$detail = e.detail,\n      type = _e$detail.type,\n      data = _e$detail.data;\n\n  if (type !== 'VKWebAppUpdateConfig' || !data) {\n    return null;\n  }\n\n  var adaptivity = data.adaptivity,\n      viewportWidth = data.viewport_width,\n      viewportHeight = data.viewport_height;\n  var bridgeAdaptivity = {\n    type: '',\n    viewportWidth: isFinite(viewportWidth) ? +viewportWidth : 0,\n    viewportHeight: isFinite(viewportHeight) ? +viewportHeight : 0\n  };\n\n  switch (adaptivity) {\n    case 'force_mobile':\n    case 'force_mobile_compact':\n    case 'adaptive':\n      bridgeAdaptivity.type = adaptivity;\n  }\n\n  return bridgeAdaptivity;\n}\n\nvkBridge.subscribe(function (e) {\n  var bridgeAdaptivity = resolveAdaptivity(e);\n\n  if (bridgeAdaptivity) {\n    initialState = bridgeAdaptivity;\n  }\n});\nexport function useBridgeAdaptivity() {\n  var _React$useState = React.useState(initialState),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      bridgeAdaptivity = _React$useState2[0],\n      setBridgeAdaptivity = _React$useState2[1];\n\n  useIsomorphicLayoutEffect(function () {\n    function bridgeListener(e) {\n      var newBridgeAdaptivity = resolveAdaptivity(e);\n\n      if (newBridgeAdaptivity) {\n        setBridgeAdaptivity(newBridgeAdaptivity);\n      }\n    }\n\n    vkBridge.subscribe(bridgeListener);\n    return function () {\n      vkBridge.unsubscribe(bridgeListener);\n    };\n  }, []);\n  return bridgeAdaptivity;\n}","map":{"version":3,"mappings":";AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAOC,QAAP,MAAqB,sBAArB;AACA,SAASC,yBAAT,QAA0C,kCAA1C;AAiBA,IAAIC,YAA8B,GAAG;EACnCC,IAAI,EAAE,EAD6B;EAEnCC,aAAa,EAAE,CAFoB;EAGnCC,cAAc,EAAE;AAHmB,CAArC;;AAMA,SAASC,iBAAT,CAA2BC,CAA3B,EAAoE;EAClE,gBAAuBA,CAAC,CAACC,MAAzB;EAAA,IAAQL,IAAI,aAAJA,IAAR;EAAA,IAAcM,IAAI,aAAJA,IAAd;;EAEA,IAAIN,IAAI,KAAK,sBAATA,IAAmC,CAACM,IAAxC,EAA8C;IAC5C,OAAO,IAAP;EACF;;EAEA,IAAQC,UAAU,GAAqED,IAAI,CAAnFC,UAAR;EAAA,IAAoCN,aAAa,GAAsCK,IAAI,CAAvEE,cAApB;EAAA,IAAoEN,cAAc,GAAKI,IAAI,CAAxCG,eAAnD;EAEA,IAAMC,gBAAkC,GAAG;IACzCV,IAAI,EAAE,EADmC;IAEzCC,aAAa,EAAEU,QAAQ,CAACV,aAAD,CAARU,GAA0B,CAACV,aAA3BU,GAA2C,CAFjB;IAGzCT,cAAc,EAAES,QAAQ,CAACT,cAAD,CAARS,GAA2B,CAACT,cAA5BS,GAA6C;EAHpB,CAA3C;;EAMA,QAAQJ,UAAR;IACE,KAAK,cAAL;IACA,KAAK,sBAAL;IACA,KAAK,UAAL;MACEG,gBAAgB,CAACV,IAAjBU,GAAwBH,UAAxBG;EAJJ;;EAOA,OAAOA,gBAAP;AACF;;AAEAb,QAAQ,CAACe,SAATf,CAAmB,UAACO,CAAD,EAAoB;EACrC,IAAMM,gBAAgB,GAAGP,iBAAiB,CAACC,CAAD,CAA1C;;EAEA,IAAIM,gBAAJ,EAAsB;IACpBX,YAAY,GAAGW,gBAAfX;EACF;AACD,CANDF;AAQA,OAAO,SAASgB,mBAAT,GAAiD;EACtD,sBAAgDjB,KAAK,CAACkB,QAANlB,CAAiCG,YAAjCH,CAAhD;EAAA,IAA8FmB,qDAA9F;EAAA,IAAOL,gBAAgB,sBAAvB;EAAA,IAAyBM,mBAAmB,sBAA5C;;EAEAlB,yBAAyB,CAAC,YAAM;IAC9B,SAASmB,cAAT,CAAwBb,CAAxB,EAAwC;MACtC,IAAMc,mBAAmB,GAAGf,iBAAiB,CAACC,CAAD,CAA7C;;MAEA,IAAIc,mBAAJ,EAAyB;QACvBF,mBAAmB,CAACE,mBAAD,CAAnBF;MACF;IACF;;IAEAnB,QAAQ,CAACe,SAATf,CAAmBoB,cAAnBpB;IACA,OAAO,YAAM;MACXA,QAAQ,CAACsB,WAATtB,CAAqBoB,cAArBpB;IACD,CAFD;EAGD,CAbwB,EAatB,EAbsB,CAAzBC;EAeA,OAAOY,gBAAP;AACF","names":["React","vkBridge","useIsomorphicLayoutEffect","initialState","type","viewportWidth","viewportHeight","resolveAdaptivity","e","detail","data","adaptivity","viewport_width","viewport_height","bridgeAdaptivity","isFinite","subscribe","useBridgeAdaptivity","useState","_React$useState2","setBridgeAdaptivity","bridgeListener","newBridgeAdaptivity","unsubscribe"],"sources":["/Users/pitus_anonimous/Desktop/youth_bit_hack/youth_bit_vk/node_modules/@vkontakte/vkui/src/hooks/useBridgeAdaptivity.ts"],"sourcesContent":["import * as React from 'react';\nimport vkBridge from '@vkontakte/vk-bridge';\nimport { useIsomorphicLayoutEffect } from '../lib/useIsomorphicLayoutEffect';\n\nexport interface BridgeAdaptivity {\n  type: '' | 'force_mobile' | 'force_mobile_compact' | 'adaptive';\n  viewportWidth: number;\n  viewportHeight: number;\n}\n\ninterface BridgeEvent {\n  detail: {\n    type: string;\n    data: {\n      [index: string]: any;\n    };\n  };\n}\n\nlet initialState: BridgeAdaptivity = {\n  type: '',\n  viewportWidth: 0,\n  viewportHeight: 0,\n};\n\nfunction resolveAdaptivity(e: BridgeEvent): BridgeAdaptivity | null {\n  const { type, data } = e.detail;\n\n  if (type !== 'VKWebAppUpdateConfig' || !data) {\n    return null;\n  }\n\n  const { adaptivity, viewport_width: viewportWidth, viewport_height: viewportHeight } = data;\n\n  const bridgeAdaptivity: BridgeAdaptivity = {\n    type: '',\n    viewportWidth: isFinite(viewportWidth) ? +viewportWidth : 0,\n    viewportHeight: isFinite(viewportHeight) ? +viewportHeight : 0,\n  };\n\n  switch (adaptivity) {\n    case 'force_mobile':\n    case 'force_mobile_compact':\n    case 'adaptive':\n      bridgeAdaptivity.type = adaptivity;\n  }\n\n  return bridgeAdaptivity;\n}\n\nvkBridge.subscribe((e: BridgeEvent) => {\n  const bridgeAdaptivity = resolveAdaptivity(e);\n\n  if (bridgeAdaptivity) {\n    initialState = bridgeAdaptivity;\n  }\n});\n\nexport function useBridgeAdaptivity(): BridgeAdaptivity {\n  const [bridgeAdaptivity, setBridgeAdaptivity] = React.useState<BridgeAdaptivity>(initialState);\n\n  useIsomorphicLayoutEffect(() => {\n    function bridgeListener(e: BridgeEvent) {\n      const newBridgeAdaptivity = resolveAdaptivity(e);\n\n      if (newBridgeAdaptivity) {\n        setBridgeAdaptivity(newBridgeAdaptivity);\n      }\n    }\n\n    vkBridge.subscribe(bridgeListener);\n    return () => {\n      vkBridge.unsubscribe(bridgeListener);\n    };\n  }, []);\n\n  return bridgeAdaptivity;\n}\n"]},"metadata":{},"sourceType":"module"}