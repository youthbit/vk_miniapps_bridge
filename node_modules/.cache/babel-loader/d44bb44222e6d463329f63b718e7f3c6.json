{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"children\", \"isFetching\", \"onRefresh\", \"className\"];\nimport * as React from 'react';\nimport { useDOM } from '../../lib/dom';\nimport { classNames } from '@vkontakte/vkjs';\nimport { Platform } from '../../lib/platform';\nimport { runTapticImpactOccurred } from '../../lib/taptic';\nimport { useIsomorphicLayoutEffect } from '../../lib/useIsomorphicLayoutEffect';\nimport { usePlatform } from '../../hooks/usePlatform';\nimport { useGlobalEventListener } from '../../hooks/useGlobalEventListener';\nimport { useScroll } from '../AppRoot/ScrollContext';\nimport { Touch } from '../Touch/Touch';\nimport { FixedLayout } from '../FixedLayout/FixedLayout';\nimport { PullToRefreshSpinner } from './PullToRefreshSpinner';\nimport TouchRootContext from '../Touch/TouchContext';\nimport { usePrevious } from '../../hooks/usePrevious';\nimport { useTimeout } from '../../hooks/useTimeout';\nimport { clamp } from '../../helpers/math';\n\nfunction cancelEvent(event) {\n  if (!event) {\n    return false;\n  }\n\n  while (event.originalEvent) {\n    event = event.originalEvent;\n  }\n\n  if (event.preventDefault && event.cancelable) {\n    event.preventDefault();\n  }\n\n  if (event.stopPropagation) {\n    event.stopPropagation();\n  }\n\n  return false;\n}\n\nvar TOUCH_MOVE_EVENT_PARAMS = {\n  cancelable: true,\n  passive: false\n};\n/**\n * @see https://vkcom.github.io/VKUI/#/PullToRefresh\n */\n\nexport var PullToRefresh = function PullToRefresh(_ref) {\n  var children = _ref.children,\n      isFetching = _ref.isFetching,\n      onRefresh = _ref.onRefresh,\n      className = _ref.className,\n      restProps = _objectWithoutProperties(_ref, _excluded);\n\n  var platform = usePlatform();\n  var scroll = useScroll();\n\n  var _useDOM = useDOM(),\n      document = _useDOM.document;\n\n  var prevIsFetching = usePrevious(isFetching);\n  var initParams = React.useMemo(function () {\n    return {\n      start: platform === Platform.IOS ? -10 : -45,\n      max: platform === Platform.IOS ? 50 : 80,\n      maxY: platform === Platform.IOS ? 400 : 80,\n      refreshing: platform === Platform.IOS ? 36 : 50,\n      positionMultiplier: platform === Platform.IOS ? 0.21 : 1\n    };\n  }, [platform]);\n\n  var _React$useState = React.useState(initParams.start),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      spinnerY = _React$useState2[0],\n      setSpinnerY = _React$useState2[1];\n\n  var _React$useState3 = React.useState(false),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      watching = _React$useState4[0],\n      setWatching = _React$useState4[1];\n\n  var _React$useState5 = React.useState(false),\n      _React$useState6 = _slicedToArray(_React$useState5, 2),\n      refreshing = _React$useState6[0],\n      setRefreshing = _React$useState6[1];\n\n  var _React$useState7 = React.useState(false),\n      _React$useState8 = _slicedToArray(_React$useState7, 2),\n      canRefresh = _React$useState8[0],\n      setCanRefresh = _React$useState8[1];\n\n  var _React$useState9 = React.useState(false),\n      _React$useState10 = _slicedToArray(_React$useState9, 2),\n      touchDown = _React$useState10[0],\n      setTouchDown = _React$useState10[1];\n\n  var prevTouchDown = usePrevious(touchDown);\n  var touchY = React.useRef(0);\n\n  var _React$useState11 = React.useState(0),\n      _React$useState12 = _slicedToArray(_React$useState11, 2),\n      contentShift = _React$useState12[0],\n      setContentShift = _React$useState12[1];\n\n  var _React$useState13 = React.useState(0),\n      _React$useState14 = _slicedToArray(_React$useState13, 2),\n      spinnerProgress = _React$useState14[0],\n      setSpinnerProgress = _React$useState14[1];\n\n  var onWindowTouchMove = function onWindowTouchMove(event) {\n    if (refreshing) {\n      event.preventDefault();\n      event.stopPropagation();\n    }\n  };\n\n  useGlobalEventListener(document, 'touchmove', onWindowTouchMove, TOUCH_MOVE_EVENT_PARAMS);\n  var resetRefreshingState = React.useCallback(function () {\n    setWatching(false);\n    setCanRefresh(false);\n    setRefreshing(false);\n    setSpinnerY(initParams.start);\n    setSpinnerProgress(0);\n    setContentShift(0);\n  }, [initParams]);\n  var onRefreshingFinish = React.useCallback(function () {\n    if (!touchDown) {\n      resetRefreshingState();\n    }\n  }, [touchDown, resetRefreshingState]);\n\n  var _useTimeout = useTimeout(onRefreshingFinish, 1000),\n      setWaitFetchingTimeout = _useTimeout.set,\n      clearWaitFetchingTimeout = _useTimeout.clear;\n\n  useIsomorphicLayoutEffect(function () {\n    if (prevIsFetching !== undefined && prevIsFetching && !isFetching) {\n      onRefreshingFinish();\n    }\n  }, [prevIsFetching, isFetching, onRefreshingFinish]);\n  useIsomorphicLayoutEffect(function () {\n    if (prevIsFetching !== undefined && !prevIsFetching && isFetching) {\n      clearWaitFetchingTimeout();\n    }\n  }, [isFetching, prevIsFetching, clearWaitFetchingTimeout]);\n  var runRefreshing = React.useCallback(function () {\n    if (!refreshing && onRefresh) {\n      // cleanup if the consumer does not start fetching in 1s\n      setWaitFetchingTimeout();\n      setRefreshing(true);\n      setSpinnerY(function (prevSpinnerY) {\n        return platform === Platform.IOS ? prevSpinnerY : initParams.refreshing;\n      });\n      onRefresh();\n      runTapticImpactOccurred('light');\n    }\n  }, [refreshing, onRefresh, setWaitFetchingTimeout, platform, initParams.refreshing]);\n  useIsomorphicLayoutEffect(function () {\n    if (prevTouchDown !== undefined && prevTouchDown && !touchDown) {\n      if (!refreshing && canRefresh) {\n        runRefreshing();\n      } else if (refreshing && !isFetching) {\n        // only iOS can start refresh before gesture end\n        resetRefreshingState();\n      } else {\n        // refreshing && isFetching: refresh in progress\n        // OR !refreshing && !canRefresh: pull was not strong enough\n        setSpinnerY(refreshing ? initParams.refreshing : initParams.start);\n        setSpinnerProgress(0);\n        setContentShift(0);\n      }\n    }\n  }, [initParams, prevIsFetching, isFetching, onRefreshingFinish, prevTouchDown, touchDown, refreshing, canRefresh, runRefreshing]);\n\n  var onTouchStart = function onTouchStart(e) {\n    if (refreshing) {\n      cancelEvent(e);\n    }\n\n    setTouchDown(true);\n  };\n\n  var onTouchMove = function onTouchMove(e) {\n    var isY = e.isY,\n        shiftY = e.shiftY;\n    var start = initParams.start,\n        max = initParams.max;\n    var pageYOffset = scroll === null || scroll === void 0 ? void 0 : scroll.getScroll().y;\n\n    if (watching && touchDown) {\n      cancelEvent(e);\n      var positionMultiplier = initParams.positionMultiplier,\n          maxY = initParams.maxY;\n      var shift = Math.max(0, shiftY - touchY.current);\n      var currentY = clamp(start + shift * positionMultiplier, start, maxY);\n      var progress = currentY > -10 ? Math.abs((currentY + 10) / max) * 80 : 0;\n      setSpinnerY(currentY);\n      setSpinnerProgress(clamp(progress, 0, 80));\n      setCanRefresh(progress > 80);\n      setContentShift((currentY + 10) * 2.3);\n\n      if (progress > 85 && !refreshing && platform === Platform.IOS) {\n        runRefreshing();\n      }\n    } else if (isY && pageYOffset === 0 && shiftY > 0 && !refreshing && touchDown) {\n      cancelEvent(e);\n      touchY.current = shiftY;\n      setWatching(true);\n      setSpinnerY(start);\n      setSpinnerProgress(0);\n    }\n  };\n\n  var onTouchEnd = function onTouchEnd() {\n    setWatching(false);\n    setTouchDown(false);\n  };\n\n  var spinnerTransform = \"translate3d(0, \".concat(spinnerY, \"px, 0)\");\n  var contentTransform = '';\n\n  if (platform === Platform.IOS && refreshing && !touchDown) {\n    contentTransform = 'translate3d(0, 100px, 0)';\n  } else if (platform === Platform.IOS && (contentShift || refreshing)) {\n    contentTransform = \"translate3d(0, \".concat(contentShift, \"px, 0)\");\n  }\n\n  return /*#__PURE__*/React.createElement(TouchRootContext.Provider, {\n    value: true\n  }, /*#__PURE__*/React.createElement(Touch, _extends({}, restProps, {\n    onStart: onTouchStart,\n    onMove: onTouchMove,\n    onEnd: onTouchEnd,\n    className: classNames(\"vkuiPullToRefresh\", platform === Platform.IOS && \"vkuiPullToRefresh--ios\", watching && \"vkuiPullToRefresh--watching\", refreshing && \"vkuiPullToRefresh--refreshing\", className)\n  }), /*#__PURE__*/React.createElement(FixedLayout, {\n    className: \"vkuiPullToRefresh__controls\"\n  }, /*#__PURE__*/React.createElement(PullToRefreshSpinner, {\n    style: {\n      transform: spinnerTransform,\n      WebkitTransform: spinnerTransform,\n      opacity: watching || refreshing || canRefresh ? 1 : 0\n    },\n    on: refreshing,\n    progress: refreshing ? undefined : spinnerProgress\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"vkuiPullToRefresh__content\",\n    style: {\n      transform: contentTransform,\n      WebkitTransform: contentTransform\n    }\n  }, children)));\n};","map":{"version":3,"mappings":"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","names":["React","useDOM","classNames","Platform","runTapticImpactOccurred","useIsomorphicLayoutEffect","usePlatform","useGlobalEventListener","useScroll","Touch","FixedLayout","PullToRefreshSpinner","TouchRootContext","usePrevious","useTimeout","clamp","cancelEvent","event","originalEvent","preventDefault","cancelable","stopPropagation","TOUCH_MOVE_EVENT_PARAMS","passive","PullToRefresh","_ref","children","isFetching","onRefresh","className","restProps","platform","scroll","document","prevIsFetching","initParams","useMemo","start","IOS","max","maxY","refreshing","positionMultiplier","useState","_React$useState2","spinnerY","setSpinnerY","_React$useState4","watching","setWatching","_React$useState6","setRefreshing","_React$useState8","canRefresh","setCanRefresh","_React$useState10","touchDown","setTouchDown","prevTouchDown","touchY","useRef","_React$useState12","contentShift","setContentShift","_React$useState14","spinnerProgress","setSpinnerProgress","onWindowTouchMove","resetRefreshingState","useCallback","onRefreshingFinish","setWaitFetchingTimeout","set","clearWaitFetchingTimeout","clear","undefined","runRefreshing","prevSpinnerY","onTouchStart","e","onTouchMove","isY","shiftY","pageYOffset","getScroll","y","shift","Math","current","currentY","progress","abs","onTouchEnd","spinnerTransform","contentTransform","Provider","value","_extends","onStart","onMove","onEnd","style","transform","WebkitTransform","opacity","on"],"sources":["/Users/pitus_anonimous/Desktop/youth_bit_hack/youth_bit_vk/node_modules/@vkontakte/vkui/src/components/PullToRefresh/PullToRefresh.tsx"],"sourcesContent":["import * as React from 'react';\nimport { AnyFunction } from '../../types';\nimport { DOMProps, useDOM } from '../../lib/dom';\nimport { classNames } from '@vkontakte/vkjs';\nimport { Platform } from '../../lib/platform';\nimport { runTapticImpactOccurred } from '../../lib/taptic';\nimport { useIsomorphicLayoutEffect } from '../../lib/useIsomorphicLayoutEffect';\nimport { usePlatform } from '../../hooks/usePlatform';\nimport { useGlobalEventListener } from '../../hooks/useGlobalEventListener';\nimport { ScrollContextInterface, useScroll } from '../AppRoot/ScrollContext';\nimport { Touch, TouchEvent, TouchProps } from '../Touch/Touch';\nimport { FixedLayout } from '../FixedLayout/FixedLayout';\nimport { PullToRefreshSpinner } from './PullToRefreshSpinner';\nimport TouchRootContext from '../Touch/TouchContext';\nimport { usePrevious } from '../../hooks/usePrevious';\nimport { useTimeout } from '../../hooks/useTimeout';\nimport { clamp } from '../../helpers/math';\nimport styles from './PullToRefresh.module.css';\n\nfunction cancelEvent(event: any) {\n  if (!event) {\n    return false;\n  }\n  while (event.originalEvent) {\n    event = event.originalEvent;\n  }\n  if (event.preventDefault && event.cancelable) {\n    event.preventDefault();\n  }\n  if (event.stopPropagation) {\n    event.stopPropagation();\n  }\n  return false;\n}\n\nexport interface PullToRefreshProps extends DOMProps, TouchProps {\n  /**\n   * Будет вызвана для обновления контента (прим.: функция должна быть мемоизированным коллбэком)\n   */\n  onRefresh: AnyFunction;\n  /**\n   * Определяет, выполняется ли обновление. Для скрытия спиннера после получения контента необходимо передать `false`\n   */\n  isFetching?: boolean;\n  /** @ignore */\n  scroll?: ScrollContextInterface;\n  children?: React.ReactNode;\n}\n\nconst TOUCH_MOVE_EVENT_PARAMS = {\n  cancelable: true,\n  passive: false,\n};\n\n/**\n * @see https://vkcom.github.io/VKUI/#/PullToRefresh\n */\nexport const PullToRefresh = ({\n  children,\n  isFetching,\n  onRefresh,\n  className,\n  ...restProps\n}: PullToRefreshProps) => {\n  const platform = usePlatform();\n  const scroll = useScroll();\n  const { document } = useDOM();\n  const prevIsFetching = usePrevious(isFetching);\n\n  const initParams = React.useMemo(\n    () => ({\n      start: platform === Platform.IOS ? -10 : -45,\n      max: platform === Platform.IOS ? 50 : 80,\n      maxY: platform === Platform.IOS ? 400 : 80,\n      refreshing: platform === Platform.IOS ? 36 : 50,\n      positionMultiplier: platform === Platform.IOS ? 0.21 : 1,\n    }),\n    [platform],\n  );\n\n  const [spinnerY, setSpinnerY] = React.useState(initParams.start);\n  const [watching, setWatching] = React.useState(false);\n  const [refreshing, setRefreshing] = React.useState(false);\n  const [canRefresh, setCanRefresh] = React.useState(false);\n  const [touchDown, setTouchDown] = React.useState(false);\n  const prevTouchDown = usePrevious(touchDown);\n\n  const touchY = React.useRef(0);\n  const [contentShift, setContentShift] = React.useState(0);\n  const [spinnerProgress, setSpinnerProgress] = React.useState(0);\n\n  const onWindowTouchMove = (event: Event) => {\n    if (refreshing) {\n      event.preventDefault();\n      event.stopPropagation();\n    }\n  };\n\n  useGlobalEventListener(document, 'touchmove', onWindowTouchMove, TOUCH_MOVE_EVENT_PARAMS);\n\n  const resetRefreshingState = React.useCallback(() => {\n    setWatching(false);\n    setCanRefresh(false);\n    setRefreshing(false);\n    setSpinnerY(initParams.start);\n    setSpinnerProgress(0);\n    setContentShift(0);\n  }, [initParams]);\n\n  const onRefreshingFinish = React.useCallback(() => {\n    if (!touchDown) {\n      resetRefreshingState();\n    }\n  }, [touchDown, resetRefreshingState]);\n\n  const { set: setWaitFetchingTimeout, clear: clearWaitFetchingTimeout } = useTimeout(\n    onRefreshingFinish,\n    1000,\n  );\n\n  useIsomorphicLayoutEffect(() => {\n    if (prevIsFetching !== undefined && prevIsFetching && !isFetching) {\n      onRefreshingFinish();\n    }\n  }, [prevIsFetching, isFetching, onRefreshingFinish]);\n\n  useIsomorphicLayoutEffect(() => {\n    if (prevIsFetching !== undefined && !prevIsFetching && isFetching) {\n      clearWaitFetchingTimeout();\n    }\n  }, [isFetching, prevIsFetching, clearWaitFetchingTimeout]);\n\n  const runRefreshing = React.useCallback(() => {\n    if (!refreshing && onRefresh) {\n      // cleanup if the consumer does not start fetching in 1s\n      setWaitFetchingTimeout();\n\n      setRefreshing(true);\n      setSpinnerY((prevSpinnerY) =>\n        platform === Platform.IOS ? prevSpinnerY : initParams.refreshing,\n      );\n\n      onRefresh();\n      runTapticImpactOccurred('light');\n    }\n  }, [refreshing, onRefresh, setWaitFetchingTimeout, platform, initParams.refreshing]);\n\n  useIsomorphicLayoutEffect(() => {\n    if (prevTouchDown !== undefined && prevTouchDown && !touchDown) {\n      if (!refreshing && canRefresh) {\n        runRefreshing();\n      } else if (refreshing && !isFetching) {\n        // only iOS can start refresh before gesture end\n        resetRefreshingState();\n      } else {\n        // refreshing && isFetching: refresh in progress\n        // OR !refreshing && !canRefresh: pull was not strong enough\n        setSpinnerY(refreshing ? initParams.refreshing : initParams.start);\n        setSpinnerProgress(0);\n        setContentShift(0);\n      }\n    }\n  }, [\n    initParams,\n    prevIsFetching,\n    isFetching,\n    onRefreshingFinish,\n    prevTouchDown,\n    touchDown,\n    refreshing,\n    canRefresh,\n    runRefreshing,\n  ]);\n\n  const onTouchStart = (e: TouchEvent) => {\n    if (refreshing) {\n      cancelEvent(e);\n    }\n    setTouchDown(true);\n  };\n\n  const onTouchMove = (e: TouchEvent) => {\n    const { isY, shiftY } = e;\n    const { start, max } = initParams;\n    const pageYOffset = scroll?.getScroll().y;\n\n    if (watching && touchDown) {\n      cancelEvent(e);\n\n      const { positionMultiplier, maxY } = initParams;\n\n      const shift = Math.max(0, shiftY - touchY.current);\n\n      const currentY = clamp(start + shift * positionMultiplier, start, maxY);\n      const progress = currentY > -10 ? Math.abs((currentY + 10) / max) * 80 : 0;\n\n      setSpinnerY(currentY);\n      setSpinnerProgress(clamp(progress, 0, 80));\n      setCanRefresh(progress > 80);\n      setContentShift((currentY + 10) * 2.3);\n\n      if (progress > 85 && !refreshing && platform === Platform.IOS) {\n        runRefreshing();\n      }\n    } else if (isY && pageYOffset === 0 && shiftY > 0 && !refreshing && touchDown) {\n      cancelEvent(e);\n\n      touchY.current = shiftY;\n      setWatching(true);\n      setSpinnerY(start);\n      setSpinnerProgress(0);\n    }\n  };\n\n  const onTouchEnd = () => {\n    setWatching(false);\n    setTouchDown(false);\n  };\n\n  const spinnerTransform = `translate3d(0, ${spinnerY}px, 0)`;\n  let contentTransform = '';\n\n  if (platform === Platform.IOS && refreshing && !touchDown) {\n    contentTransform = 'translate3d(0, 100px, 0)';\n  } else if (platform === Platform.IOS && (contentShift || refreshing)) {\n    contentTransform = `translate3d(0, ${contentShift}px, 0)`;\n  }\n\n  return (\n    <TouchRootContext.Provider value={true}>\n      <Touch\n        {...restProps}\n        onStart={onTouchStart}\n        onMove={onTouchMove}\n        onEnd={onTouchEnd}\n        className={classNames(\n          styles['PullToRefresh'],\n          platform === Platform.IOS && styles['PullToRefresh--ios'],\n          watching && styles['PullToRefresh--watching'],\n          refreshing && styles['PullToRefresh--refreshing'],\n          className,\n        )}\n      >\n        <FixedLayout className={styles['PullToRefresh__controls']}>\n          <PullToRefreshSpinner\n            style={{\n              transform: spinnerTransform,\n              WebkitTransform: spinnerTransform,\n              opacity: watching || refreshing || canRefresh ? 1 : 0,\n            }}\n            on={refreshing}\n            progress={refreshing ? undefined : spinnerProgress}\n          />\n        </FixedLayout>\n\n        <div\n          className={styles['PullToRefresh__content']}\n          style={{\n            transform: contentTransform,\n            WebkitTransform: contentTransform,\n          }}\n        >\n          {children}\n        </div>\n      </Touch>\n    </TouchRootContext.Provider>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}