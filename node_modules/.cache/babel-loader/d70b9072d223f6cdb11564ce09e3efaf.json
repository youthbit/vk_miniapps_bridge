{"ast":null,"code":"import { eachDayOfInterval, startOfWeek, endOfWeek, addDays, subDays, subWeeks, addWeeks, startOfMonth, endOfMonth, isBefore, isFirstDayOfMonth, isLastDayOfMonth } from './date';\nexport var getYears = function getYears(currentYear, range) {\n  var years = [];\n\n  for (var i = currentYear - range; i <= currentYear + range; i++) {\n    years.push({\n      label: String(i).padStart(4, '0'),\n      value: i\n    });\n  }\n\n  return years;\n};\nexport var getMonths = function getMonths(locale) {\n  var months = [];\n  var formatter = new Intl.DateTimeFormat(locale, {\n    month: 'long'\n  });\n\n  for (var i = 0; i < 12; i++) {\n    months.push({\n      label: formatter.format(new Date('1970-01-01').setMonth(i)),\n      value: i\n    });\n  }\n\n  return months;\n};\nexport var getDaysNames = function getDaysNames(now, weekStartsOn, locale) {\n  var formatter = new Intl.DateTimeFormat(locale, {\n    weekday: 'short'\n  });\n  return eachDayOfInterval(startOfWeek(now, weekStartsOn), endOfWeek(now, weekStartsOn)).map(function (day) {\n    return formatter.format(day);\n  });\n};\nexport var navigateDate = function navigateDate(date, key) {\n  var newDate = date !== null && date !== void 0 ? date : new Date();\n\n  switch (key) {\n    case 'ArrowRight':\n      newDate = addDays(newDate, 1);\n      break;\n\n    case 'ArrowLeft':\n      newDate = subDays(newDate, 1);\n      break;\n\n    case 'ArrowUp':\n      newDate = subWeeks(newDate, 1);\n      break;\n\n    case 'ArrowDown':\n      newDate = addWeeks(newDate, 1);\n      break;\n  }\n\n  return newDate;\n};\nexport var getWeeks = function getWeeks(viewDate, weekStartsOn) {\n  var start = startOfWeek(startOfMonth(viewDate), weekStartsOn);\n  var end = endOfWeek(endOfMonth(viewDate), weekStartsOn);\n  var count = 0;\n  var current = start;\n  var nestedWeeks = [];\n  var lastDay = null;\n\n  while (isBefore(current, end)) {\n    var weekNumber = Math.floor(count / 7);\n    nestedWeeks[weekNumber] = nestedWeeks[weekNumber] || [];\n    var day = current.getDay();\n\n    if (lastDay !== day) {\n      lastDay = day;\n      nestedWeeks[weekNumber].push(current);\n      count += 1;\n    }\n\n    current = addDays(current, 1);\n  }\n\n  return nestedWeeks;\n};\nexport var setTimeEqual = function setTimeEqual(to, from) {\n  if (from) {\n    to.setHours(from.getHours());\n    to.setMinutes(from.getMinutes());\n    to.setSeconds(from.getSeconds());\n    to.setMilliseconds(from.getMilliseconds());\n  }\n\n  return to;\n};\nexport var isFirstDay = function isFirstDay(day, dayOfWeek) {\n  return dayOfWeek === 0 || isFirstDayOfMonth(day);\n};\nexport var isLastDay = function isLastDay(day, dayOfWeek) {\n  return dayOfWeek === 6 || isLastDayOfMonth(day);\n};","map":{"version":3,"mappings":"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","names":["eachDayOfInterval","startOfWeek","endOfWeek","addDays","subDays","subWeeks","addWeeks","startOfMonth","endOfMonth","isBefore","isFirstDayOfMonth","isLastDayOfMonth","getYears","currentYear","range","years","i","push","label","String","padStart","value","getMonths","locale","months","formatter","Intl","DateTimeFormat","month","format","Date","setMonth","getDaysNames","now","weekStartsOn","weekday","map","day","navigateDate","date","key","newDate","getWeeks","viewDate","start","end","count","current","nestedWeeks","lastDay","weekNumber","Math","floor","getDay","setTimeEqual","to","from","setHours","getHours","setMinutes","getMinutes","setSeconds","getSeconds","setMilliseconds","getMilliseconds","isFirstDay","dayOfWeek","isLastDay"],"sources":["/Users/pitus_anonimous/Desktop/youth_bit_hack/youth_bit_vk/node_modules/@vkontakte/vkui/src/lib/calendar.ts"],"sourcesContent":["import {\n  eachDayOfInterval,\n  startOfWeek,\n  endOfWeek,\n  addDays,\n  subDays,\n  subWeeks,\n  addWeeks,\n  startOfMonth,\n  endOfMonth,\n  isBefore,\n  isFirstDayOfMonth,\n  isLastDayOfMonth,\n} from './date';\n\nexport const getYears = (currentYear: number, range: number) => {\n  const years: Array<{\n    value: number;\n    label: string;\n  }> = [];\n\n  for (let i = currentYear - range; i <= currentYear + range; i++) {\n    years.push({ label: String(i).padStart(4, '0'), value: i });\n  }\n\n  return years;\n};\n\nexport const getMonths = (locale?: string) => {\n  const months: Array<{\n    value: number;\n    label: string;\n  }> = [];\n  const formatter = new Intl.DateTimeFormat(locale, {\n    month: 'long',\n  });\n\n  for (let i = 0; i < 12; i++) {\n    months.push({\n      label: formatter.format(new Date('1970-01-01').setMonth(i)),\n      value: i,\n    });\n  }\n\n  return months;\n};\n\nexport const getDaysNames = (\n  now: Date,\n  weekStartsOn: 0 | 1 | 2 | 3 | 4 | 5 | 6,\n  locale?: string,\n) => {\n  const formatter = new Intl.DateTimeFormat(locale, {\n    weekday: 'short',\n  });\n  return eachDayOfInterval(startOfWeek(now, weekStartsOn), endOfWeek(now, weekStartsOn)).map(\n    (day) => formatter.format(day),\n  );\n};\n\nexport const navigateDate = (date?: Date | null, key?: string) => {\n  let newDate = date ?? new Date();\n\n  switch (key) {\n    case 'ArrowRight':\n      newDate = addDays(newDate, 1);\n      break;\n    case 'ArrowLeft':\n      newDate = subDays(newDate, 1);\n      break;\n    case 'ArrowUp':\n      newDate = subWeeks(newDate, 1);\n      break;\n    case 'ArrowDown':\n      newDate = addWeeks(newDate, 1);\n      break;\n  }\n\n  return newDate;\n};\n\nexport const getWeeks = (viewDate: Date, weekStartsOn: 0 | 1 | 2 | 3 | 4 | 5 | 6) => {\n  const start = startOfWeek(startOfMonth(viewDate), weekStartsOn);\n  const end = endOfWeek(endOfMonth(viewDate), weekStartsOn);\n\n  let count = 0;\n  let current = start;\n  const nestedWeeks: Date[][] = [];\n  let lastDay = null;\n  while (isBefore(current, end)) {\n    const weekNumber = Math.floor(count / 7);\n    nestedWeeks[weekNumber] = nestedWeeks[weekNumber] || [];\n    const day = current.getDay();\n    if (lastDay !== day) {\n      lastDay = day;\n      nestedWeeks[weekNumber].push(current);\n      count += 1;\n    }\n    current = addDays(current, 1);\n  }\n  return nestedWeeks;\n};\n\nexport const setTimeEqual = (to: Date, from?: Date | null) => {\n  if (from) {\n    to.setHours(from.getHours());\n    to.setMinutes(from.getMinutes());\n    to.setSeconds(from.getSeconds());\n    to.setMilliseconds(from.getMilliseconds());\n  }\n\n  return to;\n};\n\nexport const isFirstDay = (day: Date, dayOfWeek: number) =>\n  dayOfWeek === 0 || isFirstDayOfMonth(day);\n\nexport const isLastDay = (day: Date, dayOfWeek: number) => dayOfWeek === 6 || isLastDayOfMonth(day);\n"]},"metadata":{},"sourceType":"module"}