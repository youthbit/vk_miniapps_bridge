{"ast":null,"code":"import _objectSpread from \"@babel/runtime/helpers/objectSpread2\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"children\"];\nimport React from 'react';\nimport { ConfigProviderContext, useConfigProvider } from './ConfigProviderContext';\nimport { useObjectMemo } from '../../hooks/useObjectMemo';\n/**\n * Компонент предназначен для перебивания одного из значений контекста\n */\n\nexport function ConfigProviderOverride(_ref) {\n  var children = _ref.children,\n      contextValue = _objectWithoutProperties(_ref, _excluded);\n\n  var parentConfig = useConfigProvider();\n  var configContext = useObjectMemo(_objectSpread(_objectSpread({}, parentConfig), contextValue));\n  return /*#__PURE__*/React.createElement(ConfigProviderContext.Provider, {\n    value: configContext\n  }, children);\n}","map":{"version":3,"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SACEC,qBADF,EAGEC,iBAHF,QAIO,yBAJP;AAKA,SAASC,aAAT,QAA8B,2BAA9B;AAMA;AACA;AACA;;AACA,OAAO,SAASC,sBAAT,CAA+BC,IAA/B,EAA4F;EAAA,IAA1DC,QAAQ,QAARA,QAA0D;EAAA,IAA7CC,YAAY,4CAAiC;;EACjG,IAAMC,YAAY,GAAGN,iBAAiB,EAAtC;EAEA,IAAMO,aAAa,GAAGN,aAAa,iCAC9BK,YAD8B,GAE9BD,YAF8B,EAAnC;EAKA,oBACEP,oBAACC,qBAAqB,CAACS,QAAvB,EAA+B;IAACC,KAAK,EAAEF;EAAR,CAA/B,EACGH,QADH,CADF;AAKF","names":["React","ConfigProviderContext","useConfigProvider","useObjectMemo","ConfigProviderOverride","_ref","children","contextValue","parentConfig","configContext","Provider","value"],"sources":["/Users/pitus_anonimous/Desktop/youth_bit_hack/youth_bit_vk/node_modules/@vkontakte/vkui/src/components/ConfigProvider/ConfigProviderOverride.tsx"],"sourcesContent":["import React from 'react';\nimport {\n  ConfigProviderContext,\n  ConfigProviderContextInterface,\n  useConfigProvider,\n} from './ConfigProviderContext';\nimport { useObjectMemo } from '../../hooks/useObjectMemo';\n\nexport interface ConfigProviderOverrideProps extends Partial<ConfigProviderContextInterface> {\n  children: React.ReactNode;\n}\n\n/**\n * Компонент предназначен для перебивания одного из значений контекста\n */\nexport function ConfigProviderOverride({ children, ...contextValue }: ConfigProviderOverrideProps) {\n  const parentConfig = useConfigProvider();\n\n  const configContext = useObjectMemo({\n    ...parentConfig,\n    ...contextValue,\n  });\n\n  return (\n    <ConfigProviderContext.Provider value={configContext}>\n      {children}\n    </ConfigProviderContext.Provider>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}