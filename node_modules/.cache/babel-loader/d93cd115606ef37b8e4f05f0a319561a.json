{"ast":null,"code":"import _objectSpread from \"@babel/runtime/helpers/objectSpread2\";\nimport _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _createForOfIteratorHelper from \"@babel/runtime/helpers/createForOfIteratorHelper\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _excluded = [\"fieldValue\", \"selectedOptions\"];\nimport * as React from 'react';\nimport { useChipsInput } from './useChipsInput';\nexport var useChipsSelect = function useChipsSelect(props) {\n  var options = props.options,\n      filterFn = props.filterFn,\n      getOptionLabel = props.getOptionLabel,\n      getOptionValue = props.getOptionValue;\n\n  var _React$useState = React.useState(false),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      opened = _React$useState2[0],\n      setOpened = _React$useState2[1];\n\n  var _React$useState3 = React.useState(0),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      focusedOptionIndex = _React$useState4[0],\n      setFocusedOptionIndex = _React$useState4[1];\n\n  var _React$useState5 = React.useState(null),\n      _React$useState6 = _slicedToArray(_React$useState5, 2),\n      focusedOption = _React$useState6[0],\n      setFocusedOption = _React$useState6[1];\n\n  var _useChipsInput = useChipsInput(props),\n      fieldValue = _useChipsInput.fieldValue,\n      selectedOptions = _useChipsInput.selectedOptions,\n      chipsInputState = _objectWithoutProperties(_useChipsInput, _excluded);\n\n  var handleInputChange = function handleInputChange(e) {\n    if (!e) {\n      return;\n    }\n\n    chipsInputState.handleInputChange(e);\n\n    if (!opened) {\n      setOpened(true);\n      setFocusedOptionIndex(0);\n    }\n  };\n\n  var filteredOptions = React.useMemo(function () {\n    return filterFn ? options.filter(function (option) {\n      return filterFn(fieldValue, option, getOptionLabel);\n    }) : options;\n  }, [options, filterFn, fieldValue, getOptionLabel]);\n  filteredOptions = React.useMemo(function () {\n    if (!filteredOptions.length) {\n      return filteredOptions;\n    }\n\n    var filteredSet = new Set(filteredOptions);\n    var selected = selectedOptions.map(function (item) {\n      return getOptionValue(item);\n    });\n\n    var _iterator = _createForOfIteratorHelper(filteredSet),\n        _step;\n\n    try {\n      for (_iterator.s(); !(_step = _iterator.n()).done;) {\n        var item = _step.value;\n\n        if (selected.includes(getOptionValue(item))) {\n          filteredSet.delete(item);\n        }\n      }\n    } catch (err) {\n      _iterator.e(err);\n    } finally {\n      _iterator.f();\n    }\n\n    return _toConsumableArray(filteredSet);\n  }, [filteredOptions, selectedOptions, getOptionValue]);\n  return _objectSpread(_objectSpread({}, chipsInputState), {}, {\n    fieldValue: fieldValue,\n    handleInputChange: handleInputChange,\n    opened: opened,\n    setOpened: setOpened,\n    filteredOptions: filteredOptions,\n    focusedOptionIndex: focusedOptionIndex,\n    setFocusedOptionIndex: setFocusedOptionIndex,\n    focusedOption: focusedOption,\n    setFocusedOption: setFocusedOption,\n    selectedOptions: selectedOptions\n  });\n};","map":{"version":3,"mappings":"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","names":["React","useChipsInput","useChipsSelect","props","options","filterFn","getOptionLabel","getOptionValue","useState","_React$useState2","opened","setOpened","_React$useState4","focusedOptionIndex","setFocusedOptionIndex","_React$useState6","focusedOption","setFocusedOption","fieldValue","selectedOptions","chipsInputState","handleInputChange","e","filteredOptions","useMemo","filter","option","length","filteredSet","Set","selected","map","item","_step","includes","delete","_iterator"],"sources":["/Users/pitus_anonimous/Desktop/youth_bit_hack/youth_bit_vk/node_modules/@vkontakte/vkui/src/hooks/useChipsSelect.ts"],"sourcesContent":["import * as React from 'react';\nimport { useChipsInput } from './useChipsInput';\nimport { ChipsSelectProps } from '../components/ChipsSelect/ChipsSelect';\nimport { ChipOption } from '../components/Chip/Chip';\n\nexport const useChipsSelect = <Option extends ChipOption>(\n  props: Partial<ChipsSelectProps<Option>>,\n) => {\n  const { options, filterFn, getOptionLabel, getOptionValue } = props;\n\n  const [opened, setOpened] = React.useState(false);\n  const [focusedOptionIndex, setFocusedOptionIndex] = React.useState<number | null>(0);\n  const [focusedOption, setFocusedOption] = React.useState<Option | null>(null);\n\n  const { fieldValue, selectedOptions, ...chipsInputState } = useChipsInput(props);\n\n  const handleInputChange = (e: React.ChangeEvent<HTMLInputElement> | undefined) => {\n    if (!e) {\n      return;\n    }\n    chipsInputState.handleInputChange(e);\n\n    if (!opened) {\n      setOpened(true);\n      setFocusedOptionIndex(0);\n    }\n  };\n\n  let filteredOptions = React.useMemo(() => {\n    return filterFn\n      ? options!.filter((option) => filterFn(fieldValue, option, getOptionLabel))\n      : (options as Option[]);\n  }, [options, filterFn, fieldValue, getOptionLabel]);\n\n  filteredOptions = React.useMemo(() => {\n    if (!filteredOptions.length) {\n      return filteredOptions;\n    }\n\n    const filteredSet = new Set(filteredOptions);\n    const selected = selectedOptions.map((item) => getOptionValue!(item));\n\n    for (const item of filteredSet) {\n      if (selected.includes(getOptionValue!(item))) {\n        filteredSet.delete(item);\n      }\n    }\n\n    return [...filteredSet];\n  }, [filteredOptions, selectedOptions, getOptionValue]);\n\n  return {\n    ...chipsInputState,\n    fieldValue,\n    handleInputChange,\n    opened,\n    setOpened,\n    filteredOptions,\n    focusedOptionIndex,\n    setFocusedOptionIndex,\n    focusedOption,\n    setFocusedOption,\n    selectedOptions,\n  };\n};\n"]},"metadata":{},"sourceType":"module"}