{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport * as React from 'react';\nimport { useExternRef } from './useExternRef';\nimport { warnOnce } from '../lib/warnOnce';\nimport { useEffectDev } from './useEffectDev';\n\nvar isDOMTypeElement = function isDOMTypeElement(element) {\n  return typeof element.type === 'string';\n};\n\nvar warn = warnOnce('usePatchChildrenRef');\nexport var usePatchChildrenRef = function usePatchChildrenRef(children) {\n  var childRef = /*#__PURE__*/React.isValidElement(children) && (isDOMTypeElement(children) ? children.ref : children.props.getRootRef);\n  var patchedRef = useExternRef(childRef);\n  useEffectDev(function () {\n    if (!patchedRef.current) {\n      warn('Кажется, в children передан компонент, который не поддерживает свойство getRootRef. Мы не можем получить ссылку на корневой dom-элемент этого компонента', 'error');\n    }\n  }, [children === null || children === void 0 ? void 0 : children.type, patchedRef]);\n  return [patchedRef, /*#__PURE__*/React.isValidElement(children) ? /*#__PURE__*/React.cloneElement(children, _defineProperty({}, isDOMTypeElement(children) ? 'ref' : 'getRootRef', patchedRef)) : children];\n};","map":{"version":3,"mappings":";AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,YAAT,QAA6B,gBAA7B;AACA,SAASC,QAAT,QAAyB,iBAAzB;AACA,SAASC,YAAT,QAA6B,gBAA7B;;AAIA,IAAMC,gBAAgB,GAAG,SAAnBA,gBAAmB,CAACC,OAAD,EAAwE;EAC/F,OAAO,OAAOA,OAAO,CAACC,IAAf,KAAwB,QAA/B;AACD,CAFD;;AAIA,IAAMC,IAAI,GAAGL,QAAQ,CAAC,qBAAD,CAArB;AAEA,OAAO,IAAMM,mBAAmB,GAAG,SAAtBA,mBAAsB,CACjCC,QADiC,EAEsC;EACvE,IAAMC,QAAQ,GACZ,kBAAK,CAACC,cAANX,CAAqBS,QAArBT,MACCI,gBAAgB,CAACK,QAAD,CAAhBL,GAA8BK,QAAQ,CAACG,GAAvCR,GAA8DK,QAAQ,CAACI,KAATJ,CAAeK,UAD9Ed,CADF;EAGA,IAAMe,UAAU,GAAGd,YAAY,CAAIS,QAAJ,CAA/B;EAEAP,YAAY,CAAC,YAAM;IACjB,IAAI,CAACY,UAAU,CAACC,OAAhB,EAAyB;MACvBT,IAAI,CACF,0JADE,EAEF,OAFE,CAAJA;IAIF;EACD,CAPW,EAOT,CAACE,QAAQ,SAARA,YAAQ,WAARA,GAAQ,MAARA,WAAQ,CAAEH,IAAX,EAAiBS,UAAjB,CAPS,CAAZZ;EASA,OAAO,CACLY,UADK,EAEL,kBAAK,CAACJ,cAANX,CAAqBS,QAArBT,IAA8B,aAC1BA,KAAK,CAACiB,YAANjB,CAAmBS,QAAnBT,EAA2BkB,oBACxBd,gBAAgB,CAACK,QAAD,CAAhBL,GAA6B,KAA7BA,GAAqC,YADb,EAC4BW,UAD5B,CAA3Bf,CADJA,GAIIS,QANC,CAAP;AAQD,CAzBM","names":["React","useExternRef","warnOnce","useEffectDev","isDOMTypeElement","element","type","warn","usePatchChildrenRef","children","childRef","isValidElement","ref","props","getRootRef","patchedRef","current","cloneElement","_defineProperty"],"sources":["/Users/pitus_anonimous/Desktop/youth_bit_hack/youth_bit_vk/node_modules/@vkontakte/vkui/src/hooks/usePatchChildrenRef.ts"],"sourcesContent":["import * as React from 'react';\nimport { useExternRef } from './useExternRef';\nimport { warnOnce } from '../lib/warnOnce';\nimport { useEffectDev } from './useEffectDev';\n\ntype ChildrenElement<T> = React.ReactElement<{ getRootRef?: React.Ref<T> }>;\n\nconst isDOMTypeElement = (element: React.ReactElement): element is React.DOMElement<any, any> => {\n  return typeof element.type === 'string';\n};\n\nconst warn = warnOnce('usePatchChildrenRef');\n\nexport const usePatchChildrenRef = <T = HTMLElement>(\n  children?: ChildrenElement<T>,\n): [React.MutableRefObject<T | null>, ChildrenElement<T> | undefined] => {\n  const childRef =\n    React.isValidElement(children) &&\n    (isDOMTypeElement(children) ? (children.ref as React.Ref<T>) : children.props.getRootRef);\n  const patchedRef = useExternRef<T>(childRef);\n\n  useEffectDev(() => {\n    if (!patchedRef.current) {\n      warn(\n        'Кажется, в children передан компонент, который не поддерживает свойство getRootRef. Мы не можем получить ссылку на корневой dom-элемент этого компонента',\n        'error',\n      );\n    }\n  }, [children?.type, patchedRef]);\n\n  return [\n    patchedRef,\n    React.isValidElement(children)\n      ? React.cloneElement(children, {\n          [isDOMTypeElement(children) ? 'ref' : 'getRootRef']: patchedRef,\n        })\n      : children,\n  ];\n};\n"]},"metadata":{},"sourceType":"module"}