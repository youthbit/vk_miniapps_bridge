{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"subhead\", \"children\", \"text\", \"caption\", \"before\", \"after\", \"afterCaption\", \"bottom\", \"actions\", \"multiline\", \"className\"];\nimport * as React from 'react';\nimport { classNames } from '@vkontakte/vkjs';\nimport { Tappable } from '../Tappable/Tappable';\nimport { Subhead } from '../Typography/Subhead/Subhead';\nimport { getSizeYClassName } from '../../helpers/getSizeYClassName';\nimport { useAdaptivity } from '../../hooks/useAdaptivity';\n/**\n * @see https://vkcom.github.io/VKUI/#/RichCell\n */\n\nexport var RichCell = function RichCell(_ref) {\n  var subhead = _ref.subhead,\n      children = _ref.children,\n      text = _ref.text,\n      caption = _ref.caption,\n      before = _ref.before,\n      after = _ref.after,\n      afterCaption = _ref.afterCaption,\n      bottom = _ref.bottom,\n      actions = _ref.actions,\n      multiline = _ref.multiline,\n      className = _ref.className,\n      restProps = _objectWithoutProperties(_ref, _excluded);\n\n  var _useAdaptivity = useAdaptivity(),\n      sizeY = _useAdaptivity.sizeY;\n\n  return /*#__PURE__*/React.createElement(Tappable, _extends({}, restProps, {\n    className: classNames(\"vkuiRichCell\", !multiline && \"vkuiRichCell--text-ellipsis\", getSizeYClassName(\"vkuiRichCell\", sizeY), className)\n  }), before && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"vkuiRichCell__before\"\n  }, before), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"vkuiRichCell__in\"\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"vkuiRichCell__content\"\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"vkuiRichCell__content-before\"\n  }, subhead && /*#__PURE__*/React.createElement(Subhead, {\n    Component: \"div\",\n    className: \"vkuiRichCell__subhead\"\n  }, subhead), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"vkuiRichCell__children\"\n  }, children), text && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"vkuiRichCell__text\"\n  }, text), caption && /*#__PURE__*/React.createElement(Subhead, {\n    Component: \"div\",\n    className: \"vkuiRichCell__caption\"\n  }, caption)), (after || afterCaption) && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"vkuiRichCell__content-after\"\n  }, after && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"vkuiRichCell__after-children\"\n  }, after), afterCaption && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"vkuiRichCell__after-caption\"\n  }, afterCaption))), bottom && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"vkuiRichCell__bottom\"\n  }, bottom), actions && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"vkuiRichCell__actions\"\n  }, actions)));\n};","map":{"version":3,"mappings":";;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,UAAT,QAA2B,iBAA3B;AACA,SAAwBC,QAAxB,QAAwC,sBAAxC;AACA,SAASC,OAAT,QAAwB,+BAAxB;AACA,SAASC,iBAAT,QAAkC,iCAAlC;AACA,SAASC,aAAT,QAA8B,2BAA9B;AAqDA;AACA;AACA;;AACA,OAAO,IAAMC,QAAQ,GAAG,SAAXA,QAAW,CAAHC,IAAG,EAaH;EAAA,IAZnBC,OAAO,QAAPA,OAYmB;EAAA,IAXnBC,QAAQ,QAARA,QAWmB;EAAA,IAVnBC,IAAI,QAAJA,IAUmB;EAAA,IATnBC,OAAO,QAAPA,OASmB;EAAA,IARnBC,MAAM,QAANA,MAQmB;EAAA,IAPnBC,KAAK,QAALA,KAOmB;EAAA,IANnBC,YAAY,QAAZA,YAMmB;EAAA,IALnBC,MAAM,QAANA,MAKmB;EAAA,IAJnBC,OAAO,QAAPA,OAImB;EAAA,IAHnBC,SAAS,QAATA,SAGmB;EAAA,IAFnBC,SAAS,QAATA,SAEmB;EAAA,IADhBC,SAAS,4CACO;;EACnB,qBAAkBd,aAAa,EAA/B;EAAA,IAAQe,KAAK,kBAALA,KAAR;;EAEA,oBACEpB,oBAACE,QAAD,EAASmB,aACHF,SADG,EACM;IACbD,SAAS,EAAEjB,UAAU,iBAEnB,CAACgB,SAAD,IAAU,6BAFS,EAGnBb,iBAAiB,iBAAqBgB,KAArB,CAHE,EAInBF,SAJmB;EADR,CADN,CAAT,EASGN,MAAM,iBAAIZ;IAAKkB,SAAS;EAAd,GAA6CN,MAA7C,CATb,EASuE,aACrEZ;IAAKkB,SAAS;EAAd,GAAuC,aACrClB;IAAKkB,SAAS;EAAd,GAA4C,aAC1ClB;IAAKkB,SAAS;EAAd,GACGV,OAAO,iBACNR,oBAACG,OAAD,EAAQ;IAACmB,SAAS,EAAC,KAAX;IAAiBJ,SAAS;EAA1B,CAAR,EACGV,OADH,CAFJ,EAKG,aACDR;IAAKkB,SAAS;EAAd,GAA+CT,QAA/C,CANF,EAOGC,IAAI,iBAAIV;IAAKkB,SAAS;EAAd,GAA2CR,IAA3C,CAPX,EAQGC,OAAO,iBACNX,oBAACG,OAAD,EAAQ;IAACmB,SAAS,EAAC,KAAX;IAAiBJ,SAAS;EAA1B,CAAR,EACGP,OADH,CATJ,CADF,EAeG,CAACE,KAAK,IAAIC,YAAV,KAAsB,aACrBd;IAAKkB,SAAS;EAAd,GACGL,KAAK,iBAAIb;IAAKkB,SAAS;EAAd,GAAqDL,KAArD,CADZ,EAEGC,YAAY,iBACXd;IAAKkB,SAAS;EAAd,GAAoDJ,YAApD,CAHJ,CAhBJ,CADF,EAyBGC,MAAM,iBAAIf;IAAKkB,SAAS;EAAd,GAA6CH,MAA7C,CAzBb,EA0BGC,OAAO,iBAAIhB;IAAKkB,SAAS;EAAd,GAA8CF,OAA9C,CA1Bd,CAVF,CADF;AAyCD,CAzDM","names":["React","classNames","Tappable","Subhead","getSizeYClassName","useAdaptivity","RichCell","_ref","subhead","children","text","caption","before","after","afterCaption","bottom","actions","multiline","className","restProps","sizeY","_extends","Component"],"sources":["/Users/pitus_anonimous/Desktop/youth_bit_hack/youth_bit_vk/node_modules/@vkontakte/vkui/src/components/RichCell/RichCell.tsx"],"sourcesContent":["import * as React from 'react';\nimport { classNames } from '@vkontakte/vkjs';\nimport { TappableProps, Tappable } from '../Tappable/Tappable';\nimport { Subhead } from '../Typography/Subhead/Subhead';\nimport { getSizeYClassName } from '../../helpers/getSizeYClassName';\nimport { useAdaptivity } from '../../hooks/useAdaptivity';\nimport styles from './RichCell.module.css';\n\nexport interface RichCellProps extends TappableProps {\n  /**\n   * Контейнер для текста над `children`.\n   */\n  subhead?: React.ReactNode;\n  /**\n   * Контейнер для текста под `children`.\n   */\n  text?: React.ReactNode;\n  /**\n   * Контейнер для текста под `text`.\n   */\n  caption?: React.ReactNode;\n  /**\n   * Контейнер для контента под `caption`. Например `<UsersStack size=\"m\" />`.\n   */\n  bottom?: React.ReactNode;\n  /**\n   * Кнопки-действия. Принимает [`Button`](https://vkcom.github.io/VKUI/#/Button) с параметрами:\n   *\n   * - `mode=\"primary\" size=\"s\"`\n   * - `mode=\"secondary\" size=\"s\"`\n   *\n   * Для набора кнопок используйте [`ButtonGroup`](https://vkcom.github.io/VKUI/#/ButtonGroup) с параметрами:\n   *\n   * - `mode=\"horizontal\" gap=\"s\" stretched`\n   */\n  actions?: React.ReactNode;\n  /**\n   * `<Avatar size={40|48|72} />`.\n   */\n  before?: React.ReactNode;\n  /**\n   * Иконка 24 или текст.\n   */\n  after?: React.ReactNode;\n  /**\n   * Текст под `after`.\n   */\n  afterCaption?: React.ReactNode;\n  /**\n   * Убирает анимацию нажатия.\n   */\n  disabled?: boolean;\n  /**\n   * Включает многострочный режим для `subhead`, `children`, `text` и `caption`.\n   */\n  multiline?: boolean;\n}\n\n/**\n * @see https://vkcom.github.io/VKUI/#/RichCell\n */\nexport const RichCell = ({\n  subhead,\n  children,\n  text,\n  caption,\n  before,\n  after,\n  afterCaption,\n  bottom,\n  actions,\n  multiline,\n  className,\n  ...restProps\n}: RichCellProps) => {\n  const { sizeY } = useAdaptivity();\n\n  return (\n    <Tappable\n      {...restProps}\n      className={classNames(\n        styles['RichCell'],\n        !multiline && styles['RichCell--text-ellipsis'],\n        getSizeYClassName(styles['RichCell'], sizeY),\n        className,\n      )}\n    >\n      {before && <div className={styles['RichCell__before']}>{before}</div>}\n      <div className={styles['RichCell__in']}>\n        <div className={styles['RichCell__content']}>\n          <div className={styles['RichCell__content-before']}>\n            {subhead && (\n              <Subhead Component=\"div\" className={styles['RichCell__subhead']}>\n                {subhead}\n              </Subhead>\n            )}\n            <div className={styles['RichCell__children']}>{children}</div>\n            {text && <div className={styles['RichCell__text']}>{text}</div>}\n            {caption && (\n              <Subhead Component=\"div\" className={styles['RichCell__caption']}>\n                {caption}\n              </Subhead>\n            )}\n          </div>\n          {(after || afterCaption) && (\n            <div className={styles['RichCell__content-after']}>\n              {after && <div className={styles['RichCell__after-children']}>{after}</div>}\n              {afterCaption && (\n                <div className={styles['RichCell__after-caption']}>{afterCaption}</div>\n              )}\n            </div>\n          )}\n        </div>\n        {bottom && <div className={styles['RichCell__bottom']}>{bottom}</div>}\n        {actions && <div className={styles['RichCell__actions']}>{actions}</div>}\n      </div>\n    </Tappable>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}