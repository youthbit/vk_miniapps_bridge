{"ast":null,"code":"import * as React from 'react';\nimport { ModalRootTouch } from './ModalRoot';\nimport { ModalRootDesktop } from './ModalRootDesktop';\nimport { useScrollLock } from '../AppRoot/ScrollContext';\nimport { useAdaptivityWithJSMediaQueries } from '../../hooks/useAdaptivityWithJSMediaQueries';\n/**\n * @see https://vkcom.github.io/VKUI/#/ModalRoot\n */\n\nexport var ModalRoot = function ModalRoot(props) {\n  var _useAdaptivityWithJSM = useAdaptivityWithJSMediaQueries(),\n      isDesktop = _useAdaptivityWithJSM.isDesktop;\n\n  useScrollLock(!!props.activeModal);\n  var RootComponent = isDesktop ? ModalRootDesktop : ModalRootTouch;\n  return /*#__PURE__*/React.createElement(RootComponent, props);\n};","map":{"version":3,"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,cAAT,QAA+B,aAA/B;AACA,SAASC,gBAAT,QAAiC,oBAAjC;AACA,SAASC,aAAT,QAA8B,0BAA9B;AACA,SAASC,+BAAT,QAAgD,6CAAhD;AA2BA;AACA;AACA;;AACA,OAAO,IAAMC,SAAS,GAAG,SAAZA,SAAY,CAACC,KAAD,EAA2B;EAClD,4BAAsBF,+BAA+B,EAArD;EAAA,IAAQG,SAAS,yBAATA,SAAR;;EAEAJ,aAAa,CAAC,CAAC,CAACG,KAAK,CAACE,WAAT,CAAbL;EAEA,IAAMM,aAAa,GAAGF,SAAS,GAAGL,gBAAH,GAAsBD,cAArD;EAEA,oBAAOD,oBAACS,aAAD,EAAmBH,KAAnB,CAAP;AACD,CARM","names":["React","ModalRootTouch","ModalRootDesktop","useScrollLock","useAdaptivityWithJSMediaQueries","ModalRoot","props","isDesktop","activeModal","RootComponent"],"sources":["/Users/pitus_anonimous/Desktop/youth_bit_hack/youth_bit_vk/node_modules/@vkontakte/vkui/src/components/ModalRoot/ModalRootAdaptive.tsx"],"sourcesContent":["import * as React from 'react';\nimport { ModalRootTouch } from './ModalRoot';\nimport { ModalRootDesktop } from './ModalRootDesktop';\nimport { useScrollLock } from '../AppRoot/ScrollContext';\nimport { useAdaptivityWithJSMediaQueries } from '../../hooks/useAdaptivityWithJSMediaQueries';\n\nexport interface ModalRootProps {\n  activeModal?: string | null;\n\n  /**\n   * Будет вызвано при начале открытия активной модалки с её id\n   */\n  onOpen?(modalId: string): void;\n\n  /**\n   * Будет вызвано при окончательном открытии активной модалки с её id\n   */\n  onOpened?(modalId: string): void;\n\n  /**\n   * Будет вызвано при начале закрытия активной модалки с её id\n   */\n  onClose?(modalId: string): void;\n\n  /**\n   * Будет вызвано при окончательном закрытии активной модалки с её id\n   */\n  onClosed?(modalId: string): void;\n  children?: React.ReactNode;\n}\n\n/**\n * @see https://vkcom.github.io/VKUI/#/ModalRoot\n */\nexport const ModalRoot = (props: ModalRootProps) => {\n  const { isDesktop } = useAdaptivityWithJSMediaQueries();\n\n  useScrollLock(!!props.activeModal);\n\n  const RootComponent = isDesktop ? ModalRootDesktop : ModalRootTouch;\n\n  return <RootComponent {...props} />;\n};\n"]},"metadata":{},"sourceType":"module"}