{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectSpread from \"@babel/runtime/helpers/objectSpread2\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"bullets\", \"getRootRef\", \"children\", \"slideWidth\", \"slideIndex\", \"isDraggable\", \"onDragStart\", \"onDragEnd\", \"onChange\", \"onPrevClick\", \"onNextClick\", \"align\", \"showArrows\", \"getRef\", \"className\", \"arrowSize\"];\nimport * as React from 'react';\nimport { classNames } from '@vkontakte/vkjs';\nimport { Touch } from '../Touch/Touch';\nimport { HorizontalScrollArrow } from '../HorizontalScroll/HorizontalScrollArrow';\nimport { useExternRef } from '../../hooks/useExternRef';\nimport { useDOM } from '../../lib/dom';\nimport { useAdaptivityHasPointer } from '../../hooks/useAdaptivityHasPointer';\nimport { useIsomorphicLayoutEffect } from '../../lib/useIsomorphicLayoutEffect';\nimport { useGlobalEventListener } from '../../hooks/useGlobalEventListener';\nimport { calcMax, calcMin } from './helpers';\nvar ANIMATION_DURATION = 0.24;\nvar LAYOUT_DEFAULT_STATE = {\n  containerWidth: 0,\n  viewportOffsetWidth: 0,\n  layerWidth: 0,\n  min: 0,\n  max: 0,\n  slides: [],\n  isFullyVisible: true\n};\nvar SHIFT_DEFAULT_STATE = {\n  animation: undefined,\n  shiftX: 0,\n  dragging: false,\n  deltaX: 0,\n  indent: 0\n};\nexport var BaseGallery = function BaseGallery(_ref) {\n  var _layoutState$current$9;\n\n  var _ref$bullets = _ref.bullets,\n      bullets = _ref$bullets === void 0 ? false : _ref$bullets,\n      getRootRef = _ref.getRootRef,\n      children = _ref.children,\n      _ref$slideWidth = _ref.slideWidth,\n      slideWidth = _ref$slideWidth === void 0 ? '100%' : _ref$slideWidth,\n      _ref$slideIndex = _ref.slideIndex,\n      slideIndex = _ref$slideIndex === void 0 ? 0 : _ref$slideIndex,\n      _ref$isDraggable = _ref.isDraggable,\n      isDraggableProp = _ref$isDraggable === void 0 ? true : _ref$isDraggable,\n      onDragStart = _ref.onDragStart,\n      onDragEnd = _ref.onDragEnd,\n      onChange = _ref.onChange,\n      onPrevClick = _ref.onPrevClick,\n      onNextClick = _ref.onNextClick,\n      _ref$align = _ref.align,\n      align = _ref$align === void 0 ? 'left' : _ref$align,\n      showArrows = _ref.showArrows,\n      getRef = _ref.getRef,\n      className = _ref.className,\n      _ref$arrowSize = _ref.arrowSize,\n      arrowSize = _ref$arrowSize === void 0 ? 'l' : _ref$arrowSize,\n      restProps = _objectWithoutProperties(_ref, _excluded);\n\n  var slidesStore = React.useRef({});\n  var layoutState = React.useRef(LAYOUT_DEFAULT_STATE);\n\n  var _React$useState = React.useState(SHIFT_DEFAULT_STATE),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      shiftState = _React$useState2[0],\n      setShiftState = _React$useState2[1];\n\n  var rootRef = useExternRef(getRootRef);\n  var viewportRef = useExternRef(getRef);\n\n  var _useDOM = useDOM(),\n      window = _useDOM.window;\n\n  var hasPointer = useAdaptivityHasPointer();\n  var isCenterWithCustomWidth = slideWidth === 'custom' && align === 'center';\n\n  var validateIndent = function validateIndent(value) {\n    var _layoutState$current$, _layoutState$current$2;\n\n    var localMax = (_layoutState$current$ = layoutState.current.max) !== null && _layoutState$current$ !== void 0 ? _layoutState$current$ : 0;\n    var localMin = (_layoutState$current$2 = layoutState.current.min) !== null && _layoutState$current$2 !== void 0 ? _layoutState$current$2 : 0;\n\n    if (value < localMin) {\n      return localMin;\n    } else if (value > localMax) {\n      return localMax;\n    }\n\n    return value;\n  };\n  /*\n   * Считает отступ слоя галереи\n   */\n\n\n  var calculateIndent = function calculateIndent(targetIndex) {\n    var _layoutState$current$3;\n\n    if (layoutState.current.isFullyVisible) {\n      return 0;\n    }\n\n    var targetSlide = (_layoutState$current$3 = layoutState.current.slides) !== null && _layoutState$current$3 !== void 0 && _layoutState$current$3.length ? layoutState.current.slides[targetIndex] : null;\n\n    if (targetSlide) {\n      var coordX = targetSlide.coordX,\n          width = targetSlide.width;\n\n      if (isCenterWithCustomWidth) {\n        var _layoutState$current$4;\n\n        var viewportWidth = (_layoutState$current$4 = layoutState.current.viewportOffsetWidth) !== null && _layoutState$current$4 !== void 0 ? _layoutState$current$4 : 0;\n        return viewportWidth / 2 - coordX - width / 2;\n      }\n\n      return validateIndent(-1 * coordX);\n    }\n\n    return 0;\n  };\n  /*\n   * Считает отступ слоя галереи во время драга\n   */\n\n\n  var calculateDragIndent = function calculateDragIndent() {\n    var _layoutState$current$5, _layoutState$current$6;\n\n    var localMax = (_layoutState$current$5 = layoutState.current.max) !== null && _layoutState$current$5 !== void 0 ? _layoutState$current$5 : 0;\n    var localMin = (_layoutState$current$6 = layoutState.current.min) !== null && _layoutState$current$6 !== void 0 ? _layoutState$current$6 : 0;\n    var indent = shiftState.shiftX + shiftState.deltaX;\n\n    if (indent > localMax) {\n      return localMax + Number((indent - localMax) / 3);\n    } else if (indent < localMin) {\n      return localMin + Number((indent - localMin) / 3);\n    }\n\n    return indent;\n  };\n\n  var initializeSlides = function initializeSlides() {\n    var _React$Children$map, _rootRef$current$offs, _rootRef$current, _viewportRef$current$, _viewportRef$current, _layoutState$current$7, _localSlides$slideInd;\n\n    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    var localSlides = (_React$Children$map = React.Children.map(children, function (_item, i) {\n      var _elem$offsetLeft, _elem$offsetWidth;\n\n      var elem = slidesStore.current[\"slide-\".concat(i)];\n      return {\n        coordX: (_elem$offsetLeft = elem === null || elem === void 0 ? void 0 : elem.offsetLeft) !== null && _elem$offsetLeft !== void 0 ? _elem$offsetLeft : 0,\n        width: (_elem$offsetWidth = elem === null || elem === void 0 ? void 0 : elem.offsetWidth) !== null && _elem$offsetWidth !== void 0 ? _elem$offsetWidth : 0\n      };\n    })) !== null && _React$Children$map !== void 0 ? _React$Children$map : [];\n    var localContainerWidth = (_rootRef$current$offs = (_rootRef$current = rootRef.current) === null || _rootRef$current === void 0 ? void 0 : _rootRef$current.offsetWidth) !== null && _rootRef$current$offs !== void 0 ? _rootRef$current$offs : 0;\n    var localViewportOffsetWidth = (_viewportRef$current$ = (_viewportRef$current = viewportRef.current) === null || _viewportRef$current === void 0 ? void 0 : _viewportRef$current.offsetWidth) !== null && _viewportRef$current$ !== void 0 ? _viewportRef$current$ : 0;\n    var localLayerWidth = localSlides.reduce(function (val, slide) {\n      return slide.width + val;\n    }, 0);\n    var adjustShiftX = localSlides.length <= layoutState.current.slides.length || ((_layoutState$current$7 = layoutState.current.slides[slideIndex]) === null || _layoutState$current$7 === void 0 ? void 0 : _layoutState$current$7.coordX) !== ((_localSlides$slideInd = localSlides[slideIndex]) === null || _localSlides$slideInd === void 0 ? void 0 : _localSlides$slideInd.coordX);\n    layoutState.current = {\n      containerWidth: localContainerWidth,\n      viewportOffsetWidth: localViewportOffsetWidth,\n      layerWidth: localLayerWidth,\n      max: calcMax({\n        slides: localSlides,\n        viewportOffsetWidth: localViewportOffsetWidth,\n        isCenterWithCustomWidth: isCenterWithCustomWidth\n      }),\n      min: calcMin({\n        containerWidth: localContainerWidth,\n        layerWidth: localLayerWidth,\n        slides: localSlides,\n        viewportOffsetWidth: localViewportOffsetWidth,\n        isCenterWithCustomWidth: isCenterWithCustomWidth,\n        align: align\n      }),\n      slides: localSlides,\n      isFullyVisible: localLayerWidth <= localContainerWidth\n    };\n    setShiftState(function (prevState) {\n      var _options$animation;\n\n      return _objectSpread(_objectSpread({}, prevState), {}, {\n        shiftX: adjustShiftX ? calculateIndent(slideIndex) : prevState.shiftX,\n        animation: (_options$animation = options.animation) !== null && _options$animation !== void 0 ? _options$animation : prevState.shiftX === validateIndent(prevState.shiftX)\n      });\n    });\n  };\n\n  var onResize = function onResize() {\n    if (shiftState.animation !== undefined) {\n      initializeSlides({\n        animation: false\n      });\n    }\n  };\n\n  useGlobalEventListener(window, 'resize', onResize);\n  useIsomorphicLayoutEffect(function () {\n    initializeSlides({\n      animation: false\n    });\n  }, [children, align, slideWidth]);\n  useIsomorphicLayoutEffect(function () {\n    if (shiftState.animation !== undefined) {\n      setShiftState(function (prevState) {\n        return _objectSpread(_objectSpread({}, prevState), {}, {\n          animation: true,\n          deltaX: 0,\n          shiftX: calculateIndent(slideIndex !== null && slideIndex !== void 0 ? slideIndex : 0)\n        });\n      });\n    }\n  }, [slideIndex]);\n\n  var slideLeft = function slideLeft(event) {\n    onChange === null || onChange === void 0 ? void 0 : onChange(slideIndex - 1);\n    onPrevClick === null || onPrevClick === void 0 ? void 0 : onPrevClick(event);\n  };\n\n  var slideRight = function slideRight(event) {\n    onChange === null || onChange === void 0 ? void 0 : onChange(slideIndex + 1);\n    onNextClick === null || onNextClick === void 0 ? void 0 : onNextClick(event);\n  };\n  /*\n   * Получает индекс слайда, к которому будет осуществлен переход\n   */\n\n\n  var getTarget = function getTarget(e) {\n    var _layoutState$current$8;\n\n    var expectDeltaX = shiftState.deltaX / e.duration * 240 * 0.6;\n    var shift = shiftState.shiftX + shiftState.deltaX + expectDeltaX - ((_layoutState$current$8 = layoutState.current.max) !== null && _layoutState$current$8 !== void 0 ? _layoutState$current$8 : 0);\n    var direction = shiftState.deltaX < 0 ? 1 : -1; // Находим ближайшую границу слайда к текущему отступу\n\n    var targetIndex = layoutState.current.slides.reduce(function (val, item, index) {\n      var previousValue = Math.abs(layoutState.current.slides[val].coordX + shift);\n      var currentValue = Math.abs(item.coordX + shift);\n      return previousValue < currentValue ? val : index;\n    }, slideIndex);\n\n    if (targetIndex === slideIndex) {\n      var targetSlide = slideIndex + direction;\n\n      if (targetSlide >= 0 && targetSlide < layoutState.current.slides.length) {\n        if (Math.abs(shiftState.deltaX) > layoutState.current.slides[targetSlide].width * 0.05) {\n          targetIndex = targetSlide;\n        }\n      }\n    }\n\n    return targetIndex;\n  };\n\n  var onStart = function onStart(e) {\n    onDragStart === null || onDragStart === void 0 ? void 0 : onDragStart(e);\n    setShiftState(function (prevState) {\n      return _objectSpread(_objectSpread({}, prevState), {}, {\n        animation: false\n      });\n    });\n  };\n\n  var onMoveX = function onMoveX(e) {\n    if (isDraggableProp && !layoutState.current.isFullyVisible) {\n      e.originalEvent.preventDefault();\n\n      if (e.isSlideX) {\n        if (shiftState.deltaX !== e.shiftX) {\n          setShiftState(function (prevState) {\n            return _objectSpread(_objectSpread({}, prevState), {}, {\n              deltaX: e.shiftX,\n              dragging: e.isSlideX\n            });\n          });\n        }\n      }\n    }\n  };\n\n  var onEnd = function onEnd(e) {\n    var targetIndex = e.isSlide ? getTarget(e) : slideIndex !== null && slideIndex !== void 0 ? slideIndex : 0;\n    onDragEnd === null || onDragEnd === void 0 ? void 0 : onDragEnd(e, targetIndex);\n    var nextShiftState = {\n      animation: true,\n      dragging: false,\n      deltaX: 0\n    };\n    var shiftXStick = calculateDragIndent();\n\n    if (targetIndex !== slideIndex) {\n      // Сохраняем сдвиг слайда в том положении, в каком его оставили после драга (fix issue #2185)\n      nextShiftState.shiftX = shiftXStick;\n    }\n\n    setShiftState(function (prevState) {\n      return _objectSpread(_objectSpread({}, prevState), nextShiftState);\n    });\n\n    if (targetIndex !== slideIndex) {\n      onChange === null || onChange === void 0 ? void 0 : onChange(targetIndex);\n    }\n  };\n\n  var indent = shiftState.dragging ? calculateDragIndent() : shiftState.shiftX;\n  var layerStyle = {\n    WebkitTransform: \"translateX(\".concat(indent, \"px)\"),\n    transform: \"translateX(\".concat(indent, \"px)\"),\n    WebkitTransition: shiftState.animation ? \"-webkit-transform \".concat(ANIMATION_DURATION, \"s cubic-bezier(.1, 0, .25, 1)\") : 'none',\n    transition: shiftState.animation ? \"transform \".concat(ANIMATION_DURATION, \"s cubic-bezier(.1, 0, .25, 1)\") : 'none'\n  };\n\n  var setSlideRef = function setSlideRef(slideRef, slideIndex) {\n    slidesStore.current[\"slide-\".concat(slideIndex)] = slideRef;\n  }; // shiftX is negative number <= 0, we can swipe back only if it is < 0\n\n\n  var canSlideLeft = !layoutState.current.isFullyVisible && shiftState.shiftX < 0;\n  var canSlideRight = !layoutState.current.isFullyVisible && ( // we can't move right when gallery layer fully scrolled right, if gallery aligned by left side\n  align === 'left' && layoutState.current.containerWidth - shiftState.shiftX < ((_layoutState$current$9 = layoutState.current.layerWidth) !== null && _layoutState$current$9 !== void 0 ? _layoutState$current$9 : 0) || // otherwise we need to check current slide index (align = right or align = center)\n  align !== 'left' && slideIndex < layoutState.current.slides.length - 1);\n  var isDraggable = isDraggableProp && !layoutState.current.isFullyVisible;\n  return /*#__PURE__*/React.createElement(\"div\", _extends({}, restProps, {\n    className: classNames(\"vkuiBaseGallery\", styles[\"BaseGallery--align-\".concat(align)], shiftState.dragging && \"vkuiBaseGallery--dragging\", slideWidth === 'custom' && \"vkuiBaseGallery--custom-width\", isDraggable && \"vkuiBaseGallery--draggable\", className),\n    ref: rootRef\n  }), /*#__PURE__*/React.createElement(Touch, {\n    className: \"vkuiBaseGallery__viewport\",\n    onStartX: onStart,\n    onMoveX: onMoveX,\n    onEnd: onEnd,\n    style: {\n      width: slideWidth === 'custom' ? '100%' : slideWidth\n    },\n    getRootRef: viewportRef,\n    noSlideClick: true\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"vkuiBaseGallery__layer\",\n    style: layerStyle\n  }, React.Children.map(children, function (item, i) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"vkuiBaseGallery__slide\",\n      key: \"slide-\".concat(i),\n      ref: function ref(el) {\n        return setSlideRef(el, i);\n      }\n    }, item);\n  }))), bullets && /*#__PURE__*/React.createElement(\"div\", {\n    \"aria-hidden\": true,\n    className: classNames(\"vkuiBaseGallery__bullets\", styles[\"BaseGallery__bullets--\".concat(bullets)])\n  }, React.Children.map(children, function (_item, index) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: classNames(\"vkuiBaseGallery__bullet\", index === slideIndex && \"vkuiBaseGallery__bullet--active\"),\n      key: index\n    });\n  })), showArrows && hasPointer && canSlideLeft && /*#__PURE__*/React.createElement(HorizontalScrollArrow, {\n    direction: \"left\",\n    onClick: slideLeft,\n    size: arrowSize\n  }), showArrows && hasPointer && canSlideRight && /*#__PURE__*/React.createElement(HorizontalScrollArrow, {\n    direction: \"right\",\n    onClick: slideRight,\n    size: arrowSize\n  }));\n};\nvar styles = {\n  \"BaseGallery--align-center\": \"vkuiBaseGallery--align-center\",\n  \"BaseGallery--align-left\": \"vkuiBaseGallery--align-left\",\n  \"BaseGallery--align-right\": \"vkuiBaseGallery--align-right\",\n  \"BaseGallery__bullets--dark\": \"vkuiBaseGallery__bullets--dark\",\n  \"BaseGallery__bullets--light\": \"vkuiBaseGallery__bullets--light\"\n};","map":{"version":3,"mappings":"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","names":["React","classNames","Touch","HorizontalScrollArrow","useExternRef","useDOM","useAdaptivityHasPointer","useIsomorphicLayoutEffect","useGlobalEventListener","calcMax","calcMin","ANIMATION_DURATION","LAYOUT_DEFAULT_STATE","containerWidth","viewportOffsetWidth","layerWidth","min","max","slides","isFullyVisible","SHIFT_DEFAULT_STATE","animation","undefined","shiftX","dragging","deltaX","indent","BaseGallery","_ref","bullets","_ref$bullets","getRootRef","children","_ref$slideWidth","slideWidth","_ref$slideIndex","slideIndex","_ref$isDraggable","isDraggable","isDraggableProp","onDragStart","onDragEnd","onChange","onPrevClick","onNextClick","_ref$align","align","showArrows","getRef","className","_ref$arrowSize","arrowSize","restProps","slidesStore","useRef","layoutState","useState","_React$useState2","shiftState","setShiftState","rootRef","viewportRef","window","hasPointer","isCenterWithCustomWidth","validateIndent","value","localMax","current","_layoutState$current$","localMin","_layoutState$current$2","calculateIndent","targetIndex","targetSlide","_layoutState$current$3","length","coordX","width","viewportWidth","_layoutState$current$4","calculateDragIndent","_layoutState$current$5","_layoutState$current$6","Number","initializeSlides","options","localSlides","Children","map","_item","i","elem","offsetLeft","_elem$offsetLeft","offsetWidth","_elem$offsetWidth","_React$Children$map","localContainerWidth","_rootRef$current","_rootRef$current$offs","localViewportOffsetWidth","_viewportRef$current","_viewportRef$current$","localLayerWidth","reduce","val","slide","adjustShiftX","_layoutState$current$7","_localSlides$slideInd","prevState","_options$animation","onResize","slideLeft","event","slideRight","getTarget","e","expectDeltaX","duration","shift","_layoutState$current$8","direction","item","index","previousValue","Math","abs","currentValue","onStart","onMoveX","originalEvent","preventDefault","isSlideX","onEnd","isSlide","nextShiftState","shiftXStick","layerStyle","WebkitTransform","transform","WebkitTransition","transition","setSlideRef","slideRef","canSlideLeft","canSlideRight","_layoutState$current$9","styles","ref","onStartX","style","noSlideClick","key","el","onClick","size"],"sources":["/Users/pitus_anonimous/Desktop/youth_bit_hack/youth_bit_vk/node_modules/@vkontakte/vkui/src/components/BaseGallery/BaseGallery.tsx"],"sourcesContent":["import * as React from 'react';\nimport { classNames } from '@vkontakte/vkjs';\nimport { Touch, TouchEvent } from '../Touch/Touch';\nimport { HorizontalScrollArrow } from '../HorizontalScroll/HorizontalScrollArrow';\nimport { useExternRef } from '../../hooks/useExternRef';\nimport { useDOM } from '../../lib/dom';\nimport { useAdaptivityHasPointer } from '../../hooks/useAdaptivityHasPointer';\nimport { useIsomorphicLayoutEffect } from '../../lib/useIsomorphicLayoutEffect';\nimport { useGlobalEventListener } from '../../hooks/useGlobalEventListener';\nimport { calcMax, calcMin } from './helpers';\nimport { BaseGalleryProps, GallerySlidesState, LayoutState, ShiftingState } from './types';\nimport styles from './BaseGallery.module.css';\n\nconst ANIMATION_DURATION = 0.24;\n\nconst LAYOUT_DEFAULT_STATE = {\n  containerWidth: 0,\n  viewportOffsetWidth: 0,\n  layerWidth: 0,\n  min: 0,\n  max: 0,\n  slides: [],\n  isFullyVisible: true,\n};\n\nconst SHIFT_DEFAULT_STATE = {\n  animation: undefined,\n  shiftX: 0,\n  dragging: false,\n  deltaX: 0,\n  indent: 0,\n};\n\nexport const BaseGallery = ({\n  bullets = false,\n  getRootRef,\n  children,\n  slideWidth = '100%',\n  slideIndex = 0,\n  isDraggable: isDraggableProp = true,\n  onDragStart,\n  onDragEnd,\n  onChange,\n  onPrevClick,\n  onNextClick,\n  align = 'left',\n  showArrows,\n  getRef,\n  className,\n  arrowSize = 'l',\n  ...restProps\n}: BaseGalleryProps) => {\n  const slidesStore = React.useRef<Record<string, HTMLDivElement | null>>({});\n  const layoutState = React.useRef<LayoutState>(LAYOUT_DEFAULT_STATE);\n  const [shiftState, setShiftState] = React.useState<ShiftingState>(SHIFT_DEFAULT_STATE);\n\n  const rootRef = useExternRef(getRootRef);\n  const viewportRef = useExternRef(getRef);\n\n  const { window } = useDOM();\n  const hasPointer = useAdaptivityHasPointer();\n\n  const isCenterWithCustomWidth = slideWidth === 'custom' && align === 'center';\n\n  const validateIndent = (value: number) => {\n    const localMax = layoutState.current.max ?? 0;\n    const localMin = layoutState.current.min ?? 0;\n\n    if (value < localMin) {\n      return localMin;\n    } else if (value > localMax) {\n      return localMax;\n    }\n\n    return value;\n  };\n\n  /*\n   * Считает отступ слоя галереи\n   */\n  const calculateIndent = (targetIndex: number) => {\n    if (layoutState.current.isFullyVisible) {\n      return 0;\n    }\n\n    const targetSlide = layoutState.current.slides?.length\n      ? layoutState.current.slides[targetIndex]\n      : null;\n\n    if (targetSlide) {\n      const { coordX, width } = targetSlide;\n\n      if (isCenterWithCustomWidth) {\n        const viewportWidth = layoutState.current.viewportOffsetWidth ?? 0;\n        return viewportWidth / 2 - coordX - width / 2;\n      }\n\n      return validateIndent(-1 * coordX);\n    }\n\n    return 0;\n  };\n\n  /*\n   * Считает отступ слоя галереи во время драга\n   */\n  const calculateDragIndent = () => {\n    const localMax = layoutState.current.max ?? 0;\n    const localMin = layoutState.current.min ?? 0;\n    const indent = shiftState.shiftX + shiftState.deltaX;\n\n    if (indent > localMax) {\n      return localMax + Number((indent - localMax) / 3);\n    } else if (indent < localMin) {\n      return localMin + Number((indent - localMin) / 3);\n    }\n\n    return indent;\n  };\n\n  const initializeSlides = (options: { animation?: boolean } = {}) => {\n    const localSlides =\n      React.Children.map(children, (_item: React.ReactNode, i: number): GallerySlidesState => {\n        const elem = slidesStore.current[`slide-${i}`];\n        return {\n          coordX: elem?.offsetLeft ?? 0,\n          width: elem?.offsetWidth ?? 0,\n        };\n      }) ?? [];\n\n    const localContainerWidth = rootRef.current?.offsetWidth ?? 0;\n    const localViewportOffsetWidth = viewportRef.current?.offsetWidth ?? 0;\n    const localLayerWidth = localSlides.reduce(\n      (val: number, slide: GallerySlidesState) => slide.width + val,\n      0,\n    );\n    const adjustShiftX =\n      localSlides.length <= layoutState.current.slides.length ||\n      layoutState.current.slides[slideIndex]?.coordX !== localSlides[slideIndex]?.coordX;\n\n    layoutState.current = {\n      containerWidth: localContainerWidth,\n      viewportOffsetWidth: localViewportOffsetWidth,\n      layerWidth: localLayerWidth,\n      max: calcMax({\n        slides: localSlides,\n        viewportOffsetWidth: localViewportOffsetWidth,\n        isCenterWithCustomWidth,\n      }),\n      min: calcMin({\n        containerWidth: localContainerWidth,\n        layerWidth: localLayerWidth,\n        slides: localSlides,\n        viewportOffsetWidth: localViewportOffsetWidth,\n        isCenterWithCustomWidth,\n        align,\n      }),\n      slides: localSlides,\n      isFullyVisible: localLayerWidth <= localContainerWidth,\n    };\n\n    setShiftState((prevState) => ({\n      ...prevState,\n      shiftX: adjustShiftX ? calculateIndent(slideIndex) : prevState.shiftX,\n      animation: options.animation ?? prevState.shiftX === validateIndent(prevState.shiftX),\n    }));\n  };\n\n  const onResize = () => {\n    if (shiftState.animation !== undefined) {\n      initializeSlides({ animation: false });\n    }\n  };\n\n  useGlobalEventListener(window, 'resize', onResize);\n\n  useIsomorphicLayoutEffect(() => {\n    initializeSlides({ animation: false });\n  }, [children, align, slideWidth]);\n\n  useIsomorphicLayoutEffect(() => {\n    if (shiftState.animation !== undefined) {\n      setShiftState((prevState) => ({\n        ...prevState,\n        animation: true,\n        deltaX: 0,\n        shiftX: calculateIndent(slideIndex ?? 0),\n      }));\n    }\n  }, [slideIndex]);\n\n  const slideLeft = (event: React.MouseEvent) => {\n    onChange?.(slideIndex - 1);\n    onPrevClick?.(event);\n  };\n\n  const slideRight = (event: React.MouseEvent) => {\n    onChange?.(slideIndex + 1);\n    onNextClick?.(event);\n  };\n\n  /*\n   * Получает индекс слайда, к которому будет осуществлен переход\n   */\n  const getTarget = (e: TouchEvent) => {\n    const expectDeltaX = (shiftState.deltaX / e.duration) * 240 * 0.6;\n    const shift =\n      shiftState.shiftX + shiftState.deltaX + expectDeltaX - (layoutState.current.max ?? 0);\n    const direction = shiftState.deltaX < 0 ? 1 : -1;\n\n    // Находим ближайшую границу слайда к текущему отступу\n    let targetIndex = layoutState.current.slides.reduce(\n      (val: number, item: GallerySlidesState, index: number) => {\n        const previousValue = Math.abs(layoutState.current.slides[val].coordX + shift);\n        const currentValue = Math.abs(item.coordX + shift);\n\n        return previousValue < currentValue ? val : index;\n      },\n      slideIndex,\n    );\n\n    if (targetIndex === slideIndex) {\n      let targetSlide = slideIndex + direction;\n\n      if (targetSlide >= 0 && targetSlide < layoutState.current.slides.length) {\n        if (Math.abs(shiftState.deltaX) > layoutState.current.slides[targetSlide].width * 0.05) {\n          targetIndex = targetSlide;\n        }\n      }\n    }\n\n    return targetIndex;\n  };\n\n  const onStart = (e: TouchEvent) => {\n    onDragStart?.(e);\n    setShiftState((prevState) => ({ ...prevState, animation: false }));\n  };\n\n  const onMoveX = (e: TouchEvent) => {\n    if (isDraggableProp && !layoutState.current.isFullyVisible) {\n      e.originalEvent.preventDefault();\n\n      if (e.isSlideX) {\n        if (shiftState.deltaX !== e.shiftX) {\n          setShiftState((prevState) => ({\n            ...prevState,\n            deltaX: e.shiftX,\n            dragging: e.isSlideX,\n          }));\n        }\n      }\n    }\n  };\n\n  const onEnd = (e: TouchEvent) => {\n    const targetIndex = e.isSlide ? getTarget(e) : slideIndex ?? 0;\n    onDragEnd?.(e, targetIndex);\n\n    const nextShiftState: Partial<ShiftingState> = {\n      animation: true,\n      dragging: false,\n      deltaX: 0,\n    };\n\n    const shiftXStick = calculateDragIndent();\n    if (targetIndex !== slideIndex) {\n      // Сохраняем сдвиг слайда в том положении, в каком его оставили после драга (fix issue #2185)\n      nextShiftState.shiftX = shiftXStick;\n    }\n\n    setShiftState((prevState) => ({ ...prevState, ...nextShiftState }));\n    if (targetIndex !== slideIndex) {\n      onChange?.(targetIndex);\n    }\n  };\n\n  const indent = shiftState.dragging ? calculateDragIndent() : shiftState.shiftX;\n\n  const layerStyle = {\n    WebkitTransform: `translateX(${indent}px)`,\n    transform: `translateX(${indent}px)`,\n    WebkitTransition: shiftState.animation\n      ? `-webkit-transform ${ANIMATION_DURATION}s cubic-bezier(.1, 0, .25, 1)`\n      : 'none',\n    transition: shiftState.animation\n      ? `transform ${ANIMATION_DURATION}s cubic-bezier(.1, 0, .25, 1)`\n      : 'none',\n  };\n\n  const setSlideRef = (slideRef: HTMLDivElement | null, slideIndex: number) => {\n    slidesStore.current[`slide-${slideIndex}`] = slideRef;\n  };\n\n  // shiftX is negative number <= 0, we can swipe back only if it is < 0\n  const canSlideLeft = !layoutState.current.isFullyVisible && shiftState.shiftX < 0;\n\n  const canSlideRight =\n    !layoutState.current.isFullyVisible &&\n    // we can't move right when gallery layer fully scrolled right, if gallery aligned by left side\n    ((align === 'left' &&\n      layoutState.current.containerWidth - shiftState.shiftX <\n        (layoutState.current.layerWidth ?? 0)) ||\n      // otherwise we need to check current slide index (align = right or align = center)\n      (align !== 'left' && slideIndex < layoutState.current.slides.length - 1));\n\n  const isDraggable = isDraggableProp && !layoutState.current.isFullyVisible;\n\n  return (\n    <div\n      {...restProps}\n      className={classNames(\n        styles['BaseGallery'],\n        styles[`BaseGallery--align-${align}`],\n        shiftState.dragging && styles['BaseGallery--dragging'],\n        slideWidth === 'custom' && styles['BaseGallery--custom-width'],\n        isDraggable && styles['BaseGallery--draggable'],\n        className,\n      )}\n      ref={rootRef}\n    >\n      <Touch\n        className={styles['BaseGallery__viewport']}\n        onStartX={onStart}\n        onMoveX={onMoveX}\n        onEnd={onEnd}\n        style={{ width: slideWidth === 'custom' ? '100%' : slideWidth }}\n        getRootRef={viewportRef}\n        noSlideClick\n      >\n        <div className={styles['BaseGallery__layer']} style={layerStyle}>\n          {React.Children.map(children, (item: React.ReactNode, i: number) => (\n            <div\n              className={styles['BaseGallery__slide']}\n              key={`slide-${i}`}\n              ref={(el) => setSlideRef(el, i)}\n            >\n              {item}\n            </div>\n          ))}\n        </div>\n      </Touch>\n\n      {bullets && (\n        <div\n          aria-hidden\n          className={classNames(\n            styles['BaseGallery__bullets'],\n            styles[`BaseGallery__bullets--${bullets}`],\n          )}\n        >\n          {React.Children.map(children, (_item: React.ReactNode, index: number) => (\n            <div\n              className={classNames(\n                styles['BaseGallery__bullet'],\n                index === slideIndex && styles['BaseGallery__bullet--active'],\n              )}\n              key={index}\n            />\n          ))}\n        </div>\n      )}\n\n      {showArrows && hasPointer && canSlideLeft && (\n        <HorizontalScrollArrow direction=\"left\" onClick={slideLeft} size={arrowSize} />\n      )}\n      {showArrows && hasPointer && canSlideRight && (\n        <HorizontalScrollArrow direction=\"right\" onClick={slideRight} size={arrowSize} />\n      )}\n    </div>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}