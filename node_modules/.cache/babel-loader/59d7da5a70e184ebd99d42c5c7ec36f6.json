{"ast":null,"code":"import * as React from 'react';\nimport { hasHover as hasHoverLib } from '@vkontakte/vkjs';\nimport { AdaptivityContext } from '../components/AdaptivityProvider/AdaptivityContext';\nimport { useIsClient } from './useIsClient';\n/**\n * Определение происходит с помощью `window.matchMedia`. Для того, чтобы не было ошибок при гидратации, по умолчанию\n * откладываем определение на второй рендер.\n *\n * [No SSR] Если передать `false`, то определение будет сразу.\n */\n\nexport function useAdaptivityHasHover() {\n  var deferDetect = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n\n  var _React$useContext = React.useContext(AdaptivityContext),\n      hasHoverContext = _React$useContext.hasHover;\n\n  var hasHover = hasHoverContext === undefined ? hasHoverLib : hasHoverContext;\n  var isClient = useIsClient(!deferDetect);\n\n  if (!isClient) {\n    return undefined;\n  }\n\n  return hasHover;\n}","map":{"version":3,"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,QAAQ,IAAIC,WAArB,QAAwC,iBAAxC;AACA,SAASC,iBAAT,QAAkC,oDAAlC;AACA,SAASC,WAAT,QAA4B,eAA5B;AAEA;AACA;AACA;AACA;AACA;AACA;;AAGA,OAAO,SAASC,qBAAT,GAAwE;EAAA,IAAzCC,WAAW,uEAAG,IAA2B;;EAC7E,wBAAsCN,KAAK,CAACO,UAANP,CAAiBG,iBAAjBH,CAAtC;EAAA,IAAkBQ,eAAe,qBAAzBP,QAAR;;EACA,IAAMA,QAAQ,GAAGO,eAAe,KAAKC,SAApBD,GAAgCN,WAAhCM,GAA8CA,eAA/D;EAEA,IAAME,QAAQ,GAAGN,WAAW,CAAC,CAACE,WAAF,CAA5B;;EACA,IAAI,CAACI,QAAL,EAAe;IACb,OAAOD,SAAP;EACF;;EAEA,OAAOR,QAAP;AACF","names":["React","hasHover","hasHoverLib","AdaptivityContext","useIsClient","useAdaptivityHasHover","deferDetect","useContext","hasHoverContext","undefined","isClient"],"sources":["/Users/pitus_anonimous/Desktop/youth_bit_hack/youth_bit_vk/node_modules/@vkontakte/vkui/src/hooks/useAdaptivityHasHover.ts"],"sourcesContent":["import * as React from 'react';\nimport { hasHover as hasHoverLib } from '@vkontakte/vkjs';\nimport { AdaptivityContext } from '../components/AdaptivityProvider/AdaptivityContext';\nimport { useIsClient } from './useIsClient';\n\n/**\n * Определение происходит с помощью `window.matchMedia`. Для того, чтобы не было ошибок при гидратации, по умолчанию\n * откладываем определение на второй рендер.\n *\n * [No SSR] Если передать `false`, то определение будет сразу.\n */\nexport function useAdaptivityHasHover(deferDetect?: true): undefined | boolean;\nexport function useAdaptivityHasHover(deferDetect?: false): boolean;\nexport function useAdaptivityHasHover(deferDetect = true): undefined | boolean {\n  const { hasHover: hasHoverContext } = React.useContext(AdaptivityContext);\n  const hasHover = hasHoverContext === undefined ? hasHoverLib : hasHoverContext;\n\n  const isClient = useIsClient(!deferDetect);\n  if (!isClient) {\n    return undefined;\n  }\n\n  return hasHover;\n}\n"]},"metadata":{},"sourceType":"module"}