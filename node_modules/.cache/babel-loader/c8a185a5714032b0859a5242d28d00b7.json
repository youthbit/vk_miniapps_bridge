{"ast":null,"code":"/**\n * Returns true if value is a number (excluding NaN), or is a numeric string.\n *\n * NOTE: It treats all Number-coercible strings as numeric (e.g. `'0x123'`, `'123e-1'`),\n * so for number-type values it's better to just use `Number.isFinite()`.\n */\nexport function isNumeric(value) {\n  return !isNaN(parseFloat(value)) && isFinite(value) && // Handle `[1]` being serialized and parsed as `1`\n  !Array.isArray(value);\n}","map":{"version":3,"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASA,SAAT,CAAmBC,KAAnB,EAAwC;EAC7C,OACE,CAACC,KAAK,CAACC,UAAU,CAACF,KAAD,CAAX,CAAN,IACAG,QAAQ,CAACH,KAAD,CADR,IAEA;EACA,CAACI,KAAK,CAACC,OAAND,CAAcJ,KAAdI,CAJH;AAMF","names":["isNumeric","value","isNaN","parseFloat","isFinite","Array","isArray"],"sources":["/Users/pitus_anonimous/Desktop/youth_bit_hack/youth_bit_vk/node_modules/@vkontakte/vkjs/src/common.ts"],"sourcesContent":["/**\n * Returns true if value is a number (excluding NaN), or is a numeric string.\n *\n * NOTE: It treats all Number-coercible strings as numeric (e.g. `'0x123'`, `'123e-1'`),\n * so for number-type values it's better to just use `Number.isFinite()`.\n */\nexport function isNumeric(value: any): boolean {\n  return (\n    !isNaN(parseFloat(value)) &&\n    isFinite(value) &&\n    // Handle `[1]` being serialized and parsed as `1`\n    !Array.isArray(value)\n  );\n}\n"]},"metadata":{},"sourceType":"module"}