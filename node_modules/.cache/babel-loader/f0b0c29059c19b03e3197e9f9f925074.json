{"ast":null,"code":"import * as React from 'react';\nimport { createPortal } from 'react-dom';\nimport { AppRootContext } from './AppRootContext';\nimport { AppearanceProvider } from '../AppearanceProvider/AppearanceProvider';\nimport { useAppearance } from '../../hooks/useAppearance';\nimport { useIsClient } from '../../hooks/useIsClient';\nexport var AppRootPortal = function AppRootPortal(_ref) {\n  var children = _ref.children,\n      className = _ref.className,\n      forcePortalProp = _ref.forcePortal;\n\n  var _React$useContext = React.useContext(AppRootContext),\n      portalRoot = _React$useContext.portalRoot,\n      mode = _React$useContext.mode,\n      disablePortal = _React$useContext.disablePortal;\n\n  var appearance = useAppearance();\n  var isClient = useIsClient();\n\n  if (!isClient) {\n    return null;\n  }\n\n  var forcePortal = forcePortalProp !== null && forcePortalProp !== void 0 ? forcePortalProp : mode !== 'full';\n  return !disablePortal && portalRoot && forcePortal ? /*#__PURE__*/createPortal( /*#__PURE__*/React.createElement(AppearanceProvider, {\n    appearance: appearance\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: className\n  }, children)), portalRoot) : /*#__PURE__*/React.createElement(React.Fragment, null, children);\n};","map":{"version":3,"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,YAAT,QAA6B,WAA7B;AACA,SAASC,cAAT,QAA+B,kBAA/B;AACA,SAASC,kBAAT,QAAmC,0CAAnC;AACA,SAASC,aAAT,QAA8B,2BAA9B;AACA,SAASC,WAAT,QAA4B,yBAA5B;AAQA,OAAO,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,CAAHC,IAAG,EAIH;EAAA,IAHxBC,QAAQ,QAARA,QAGwB;EAAA,IAFxBC,SAAS,QAATA,SAEwB;EAAA,IADXC,eAAe,QAA5BC,WACwB;;EACxB,wBAA4CX,KAAK,CAACY,UAANZ,CAAiBE,cAAjBF,CAA5C;EAAA,IAAQa,UAAU,qBAAVA,UAAR;EAAA,IAAoBC,IAAI,qBAAJA,IAApB;EAAA,IAA0BC,aAAa,qBAAbA,aAA1B;;EACA,IAAMC,UAAU,GAAGZ,aAAa,EAAhC;EAEA,IAAMa,QAAQ,GAAGZ,WAAW,EAA5B;;EACA,IAAI,CAACY,QAAL,EAAe;IACb,OAAO,IAAP;EACF;;EAEA,IAAMN,WAAW,GAAGD,eAAe,SAAfA,mBAAe,WAAfA,qBAAmBI,IAAI,KAAK,MAAhD;EAEA,OAAO,CAACC,aAAD,IAAkBF,UAAlB,IAAgCF,WAAhC,GAA2C,aAChDV,YAAY,eACVD,oBAACG,kBAAD,EAAmB;IAACa,UAAU,EAAEA;EAAb,CAAnB,EAA2C,aACzChB;IAAKS,SAAS,EAAEA;EAAhB,GAA4BD,QAA5B,CADF,CADU,EAIVK,UAJU,CADP,GAMJ,aAEDb,oBAACA,KAAK,CAACkB,QAAP,EAAe,IAAf,EAAiBV,QAAjB,CARF;AAUD,CAzBM","names":["React","createPortal","AppRootContext","AppearanceProvider","useAppearance","useIsClient","AppRootPortal","_ref","children","className","forcePortalProp","forcePortal","useContext","portalRoot","mode","disablePortal","appearance","isClient","Fragment"],"sources":["/Users/pitus_anonimous/Desktop/youth_bit_hack/youth_bit_vk/node_modules/@vkontakte/vkui/src/components/AppRoot/AppRootPortal.tsx"],"sourcesContent":["import * as React from 'react';\nimport { createPortal } from 'react-dom';\nimport { AppRootContext } from './AppRootContext';\nimport { AppearanceProvider } from '../AppearanceProvider/AppearanceProvider';\nimport { useAppearance } from '../../hooks/useAppearance';\nimport { useIsClient } from '../../hooks/useIsClient';\n\nexport interface AppRootPortalProps {\n  className?: string;\n  forcePortal?: boolean;\n  children?: React.ReactNode;\n}\n\nexport const AppRootPortal = ({\n  children,\n  className,\n  forcePortal: forcePortalProp,\n}: AppRootPortalProps) => {\n  const { portalRoot, mode, disablePortal } = React.useContext(AppRootContext);\n  const appearance = useAppearance();\n\n  const isClient = useIsClient();\n  if (!isClient) {\n    return null;\n  }\n\n  const forcePortal = forcePortalProp ?? mode !== 'full';\n\n  return !disablePortal && portalRoot && forcePortal ? (\n    createPortal(\n      <AppearanceProvider appearance={appearance}>\n        <div className={className}>{children}</div>\n      </AppearanceProvider>,\n      portalRoot,\n    )\n  ) : (\n    <React.Fragment>{children}</React.Fragment>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}