{"ast":null,"code":"export function getOffsetRect(el) {\n  var isElement = el instanceof HTMLElement;\n\n  if (typeof window === 'undefined' || !isElement) {\n    return {\n      top: 0,\n      left: 0,\n      width: 0,\n      height: 0\n    };\n  }\n\n  var box = el.getBoundingClientRect();\n  var body = document.body;\n  var doc = document.documentElement;\n  var scrollTop = window.pageYOffset || doc.scrollTop || body.scrollTop;\n  var scrollLeft = window.pageXOffset || doc.scrollLeft || body.scrollLeft;\n  var clientTop = doc.clientTop || body.clientTop || 0;\n  var clientLeft = doc.clientLeft || body.clientLeft || 0;\n  return {\n    top: Math.round(box.top + scrollTop - clientTop),\n    left: Math.round(box.left + scrollLeft - clientLeft),\n    width: el.offsetWidth,\n    height: el.offsetHeight\n  };\n}","map":{"version":3,"mappings":"AAOA,OAAO,SAASA,aAAT,CAAuBC,EAAvB,EAA8D;EACnE,IAAMC,SAAS,GAAGD,EAAE,YAAYE,WAAhC;;EAEA,IAAI,OAAOC,MAAP,KAAkB,WAAlB,IAAiC,CAACF,SAAtC,EAAiD;IAC/C,OAAO;MACLG,GAAG,EAAE,CADA;MAELC,IAAI,EAAE,CAFD;MAGLC,KAAK,EAAE,CAHF;MAILC,MAAM,EAAE;IAJH,CAAP;EAMF;;EAEA,IAAMC,GAAG,GAAGR,EAAE,CAACS,qBAAHT,EAAZ;EACA,IAAMU,IAAI,GAAGC,QAAQ,CAACD,IAAtB;EACA,IAAME,GAAG,GAAGD,QAAQ,CAACE,eAArB;EACA,IAAMC,SAAS,GAAGX,MAAM,CAACY,WAAPZ,IAAsBS,GAAG,CAACE,SAA1BX,IAAuCO,IAAI,CAACI,SAA9D;EACA,IAAME,UAAU,GAAGb,MAAM,CAACc,WAAPd,IAAsBS,GAAG,CAACI,UAA1Bb,IAAwCO,IAAI,CAACM,UAAhE;EACA,IAAME,SAAS,GAAGN,GAAG,CAACM,SAAJN,IAAiBF,IAAI,CAACQ,SAAtBN,IAAmC,CAArD;EACA,IAAMO,UAAU,GAAGP,GAAG,CAACO,UAAJP,IAAkBF,IAAI,CAACS,UAAvBP,IAAqC,CAAxD;EAEA,OAAO;IACLR,GAAG,EAAEgB,IAAI,CAACC,KAALD,CAAWZ,GAAG,CAACJ,GAAJI,GAAUM,SAAVN,GAAsBU,SAAjCE,CADA;IAELf,IAAI,EAAEe,IAAI,CAACC,KAALD,CAAWZ,GAAG,CAACH,IAAJG,GAAWQ,UAAXR,GAAwBW,UAAnCC,CAFD;IAGLd,KAAK,EAAEN,EAAE,CAACsB,WAHL;IAILf,MAAM,EAAEP,EAAE,CAACuB;EAJN,CAAP;AAMF","names":["getOffsetRect","el","isElement","HTMLElement","window","top","left","width","height","box","getBoundingClientRect","body","document","doc","documentElement","scrollTop","pageYOffset","scrollLeft","pageXOffset","clientTop","clientLeft","Math","round","offsetWidth","offsetHeight"],"sources":["/Users/pitus_anonimous/Desktop/youth_bit_hack/youth_bit_vk/node_modules/@vkontakte/vkjs/src/getOffsetRect.ts"],"sourcesContent":["interface Bounds {\n  top: number;\n  left: number;\n  width: number;\n  height: number;\n}\n\nexport function getOffsetRect(el: HTMLElement | Text | null): Bounds {\n  const isElement = el instanceof HTMLElement;\n\n  if (typeof window === 'undefined' || !isElement) {\n    return {\n      top: 0,\n      left: 0,\n      width: 0,\n      height: 0,\n    };\n  }\n\n  const box = el.getBoundingClientRect();\n  const body = document.body;\n  const doc = document.documentElement;\n  const scrollTop = window.pageYOffset || doc.scrollTop || body.scrollTop;\n  const scrollLeft = window.pageXOffset || doc.scrollLeft || body.scrollLeft;\n  const clientTop = doc.clientTop || body.clientTop || 0;\n  const clientLeft = doc.clientLeft || body.clientLeft || 0;\n\n  return {\n    top: Math.round(box.top + scrollTop - clientTop),\n    left: Math.round(box.left + scrollLeft - clientLeft),\n    width: el.offsetWidth,\n    height: el.offsetHeight,\n  };\n}\n"]},"metadata":{},"sourceType":"module"}