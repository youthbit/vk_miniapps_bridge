{"ast":null,"code":"import { SizeType, ViewWidth, tryToCheckIsDesktop } from '../../lib/adaptivity';\nexport var getAdaptiveSizeType = function getAdaptiveSizeType(type, compactClassNames, regularClassNames) {\n  return {\n    compact: type === undefined ? compactClassNames.mq : type === SizeType.COMPACT ? compactClassNames[type] : false,\n    regular: type === undefined ? regularClassNames.mq : type === SizeType.REGULAR ? regularClassNames[type] : false\n  };\n};\nexport var getAdaptiveViewWidth = function getAdaptiveViewWidth(viewWidth, viewWidthClassNames) {\n  return {\n    tabletMinus: viewWidth === undefined ? viewWidthClassNames.tabletMinus.mq : viewWidth < ViewWidth.TABLET ? viewWidthClassNames.tabletMinus.forced : false,\n    tabletPlus: viewWidth === undefined ? viewWidthClassNames.tabletPlus.mq : viewWidth >= ViewWidth.TABLET ? viewWidthClassNames.tabletPlus.forced : false\n  };\n};\nexport var getAdaptiveDeviceType = function getAdaptiveDeviceType(viewWidth, viewHeight, hasPointer, platform, deviceTypeClassNames) {\n  var isDesktop = tryToCheckIsDesktop(viewWidth, viewHeight, hasPointer, platform);\n\n  if (isDesktop === null) {\n    return {\n      mobile: deviceTypeClassNames.mobile.mq,\n      desktop: deviceTypeClassNames.desktop.mq\n    };\n  }\n\n  if (isDesktop) {\n    return {\n      mobile: false,\n      desktop: deviceTypeClassNames.desktop.forced\n    };\n  }\n\n  return {\n    mobile: deviceTypeClassNames.mobile.forced,\n    desktop: false\n  };\n};","map":{"version":3,"mappings":"AAAA,SAASA,QAAT,EAAmBC,SAAnB,EAA0CC,mBAA1C,QAAqE,sBAArE;AAWA,OAAO,IAAMC,mBAAmB,GAAG,SAAtBA,mBAAsB,CACjCC,IADiC,EAEjCC,iBAFiC,EAGjCC,iBAHiC,EAIZ;EACrB,OAAO;IACLC,OAAO,EACLH,IAAI,KAAKI,SAATJ,GACIC,iBAAiB,CAACI,EADtBL,GAEIA,IAAI,KAAKJ,QAAQ,CAACU,OAAlBN,GACAC,iBAAiB,CAACD,IAAD,CADjBA,GAEA,KAND;IAOLO,OAAO,EACLP,IAAI,KAAKI,SAATJ,GACIE,iBAAiB,CAACG,EADtBL,GAEIA,IAAI,KAAKJ,QAAQ,CAACY,OAAlBR,GACAE,iBAAiB,CAACF,IAAD,CADjBA,GAEA;EAZD,CAAP;AAcD,CAnBM;AAqBP,OAAO,IAAMS,oBAAoB,GAAG,SAAvBA,oBAAuB,CAClCC,SADkC,EAElCC,mBAFkC,EAGZ;EACtB,OAAO;IACLC,WAAW,EACTF,SAAS,KAAKN,SAAdM,GACIC,mBAAmB,CAACC,WAApBD,CAAgCN,EADpCK,GAEIA,SAAS,GAAGb,SAAS,CAACgB,MAAtBH,GACAC,mBAAmB,CAACC,WAApBD,CAAgCG,MADhCJ,GAEA,KAND;IAOLK,UAAU,EACRL,SAAS,KAAKN,SAAdM,GACIC,mBAAmB,CAACI,UAApBJ,CAA+BN,EADnCK,GAEIA,SAAS,IAAIb,SAAS,CAACgB,MAAvBH,GACAC,mBAAmB,CAACI,UAApBJ,CAA+BG,MAD/BJ,GAEA;EAZD,CAAP;AAcD,CAlBM;AAoBP,OAAO,IAAMM,qBAAqB,GAAG,SAAxBA,qBAAwB,CACnCN,SADmC,EAEnCO,UAFmC,EAGnCC,UAHmC,EAInCC,QAJmC,EAKnCC,oBALmC,EAMZ;EACvB,IAAMC,SAAS,GAAGvB,mBAAmB,CAACY,SAAD,EAAYO,UAAZ,EAAwBC,UAAxB,EAAoCC,QAApC,CAArC;;EAEA,IAAIE,SAAS,KAAK,IAAlB,EAAwB;IACtB,OAAO;MACLC,MAAM,EAAEF,oBAAoB,CAACE,MAArBF,CAA4Bf,EAD/B;MAELkB,OAAO,EAAEH,oBAAoB,CAACG,OAArBH,CAA6Bf;IAFjC,CAAP;EAIF;;EAEA,IAAIgB,SAAJ,EAAe;IACb,OAAO;MACLC,MAAM,EAAE,KADH;MAELC,OAAO,EAAEH,oBAAoB,CAACG,OAArBH,CAA6BN;IAFjC,CAAP;EAIF;;EAEA,OAAO;IACLQ,MAAM,EAAEF,oBAAoB,CAACE,MAArBF,CAA4BN,MAD/B;IAELS,OAAO,EAAE;EAFJ,CAAP;AAID,CA3BM","names":["SizeType","ViewWidth","tryToCheckIsDesktop","getAdaptiveSizeType","type","compactClassNames","regularClassNames","compact","undefined","mq","COMPACT","regular","REGULAR","getAdaptiveViewWidth","viewWidth","viewWidthClassNames","tabletMinus","TABLET","forced","tabletPlus","getAdaptiveDeviceType","viewHeight","hasPointer","platform","deviceTypeClassNames","isDesktop","mobile","desktop"],"sources":["/Users/pitus_anonimous/Desktop/youth_bit_hack/youth_bit_vk/node_modules/@vkontakte/vkui/src/hooks/useAdaptivityConditionalRender/helpers.ts"],"sourcesContent":["import { SizeType, ViewWidth, ViewHeight, tryToCheckIsDesktop } from '../../lib/adaptivity';\nimport type { PlatformType } from '../../lib/platform';\nimport type {\n  ElementProps,\n  AdaptiveSizeType,\n  ViewWidthCSSBreakpoints,\n  AdaptiveViewWidth,\n  DeviceTypeCSSBreakpoints,\n  AdaptiveDeviceType,\n} from './types';\n\nexport const getAdaptiveSizeType = (\n  type: undefined | SizeType,\n  compactClassNames: Record<'mq' | SizeType.COMPACT, ElementProps>,\n  regularClassNames: Record<'mq' | SizeType.REGULAR, ElementProps>,\n): AdaptiveSizeType => {\n  return {\n    compact:\n      type === undefined\n        ? compactClassNames.mq\n        : type === SizeType.COMPACT\n        ? compactClassNames[type]\n        : false,\n    regular:\n      type === undefined\n        ? regularClassNames.mq\n        : type === SizeType.REGULAR\n        ? regularClassNames[type]\n        : false,\n  };\n};\n\nexport const getAdaptiveViewWidth = (\n  viewWidth: undefined | ViewWidth,\n  viewWidthClassNames: Record<ViewWidthCSSBreakpoints, Record<'mq' | 'forced', ElementProps>>,\n): AdaptiveViewWidth => {\n  return {\n    tabletMinus:\n      viewWidth === undefined\n        ? viewWidthClassNames.tabletMinus.mq\n        : viewWidth < ViewWidth.TABLET\n        ? viewWidthClassNames.tabletMinus.forced\n        : false,\n    tabletPlus:\n      viewWidth === undefined\n        ? viewWidthClassNames.tabletPlus.mq\n        : viewWidth >= ViewWidth.TABLET\n        ? viewWidthClassNames.tabletPlus.forced\n        : false,\n  };\n};\n\nexport const getAdaptiveDeviceType = (\n  viewWidth: undefined | ViewWidth,\n  viewHeight: undefined | ViewHeight,\n  hasPointer: undefined | boolean,\n  platform: PlatformType,\n  deviceTypeClassNames: Record<DeviceTypeCSSBreakpoints, Record<'mq' | 'forced', ElementProps>>,\n): AdaptiveDeviceType => {\n  const isDesktop = tryToCheckIsDesktop(viewWidth, viewHeight, hasPointer, platform);\n\n  if (isDesktop === null) {\n    return {\n      mobile: deviceTypeClassNames.mobile.mq,\n      desktop: deviceTypeClassNames.desktop.mq,\n    };\n  }\n\n  if (isDesktop) {\n    return {\n      mobile: false,\n      desktop: deviceTypeClassNames.desktop.forced,\n    };\n  }\n\n  return {\n    mobile: deviceTypeClassNames.mobile.forced,\n    desktop: false,\n  };\n};\n"]},"metadata":{},"sourceType":"module"}