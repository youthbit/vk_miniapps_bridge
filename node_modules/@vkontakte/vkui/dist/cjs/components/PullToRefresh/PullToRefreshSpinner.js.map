{"version":3,"file":"PullToRefreshSpinner.js","names":["calcStrokeDashOffset","value","radius","progress","Math","PI","PullToRefreshSpinner","on","size","strokeWidth","style","ariaLabel","dasharray","circleCenter","dashoffset","classNames","undefined","width","height","transformOrigin"],"sources":["../../../../src/components/PullToRefresh/PullToRefreshSpinner.tsx"],"sourcesContent":["import * as React from 'react';\nimport { classNames } from '@vkontakte/vkjs';\nimport styles from './PullToRefresh.module.css';\n\nfunction calcStrokeDashOffset(value: number, radius: number) {\n  const progress = value / 100;\n  return 2 * Math.PI * radius * (1 - progress);\n}\n\nexport interface PullToRefreshSpinnerProps extends React.HTMLAttributes<HTMLDivElement> {\n  'size'?: number;\n  'strokeWidth'?: number;\n  'on'?: boolean;\n  'progress'?: number;\n  'aria-label'?: string;\n}\n\nexport const PullToRefreshSpinner = ({\n  on = true,\n  size = 24,\n  strokeWidth = 2.5,\n  style,\n  progress = 0,\n  'aria-label': ariaLabel = 'Пожалуйста, подождите...',\n}: PullToRefreshSpinnerProps) => {\n  const radius = 0.5 * size - 0.5 * strokeWidth;\n  const dasharray = 2 * Math.PI * radius;\n  const circleCenter = 0.5 * size;\n\n  const dashoffset = calcStrokeDashOffset(on ? 80 : progress, radius);\n\n  return (\n    <div\n      className={classNames(\n        styles['PullToRefresh__spinner'],\n        on && styles['PullToRefresh__spinner--on'],\n      )}\n      style={style}\n      aria-label={on ? ariaLabel : undefined}\n    >\n      <svg\n        role=\"presentation\"\n        className={styles['PullToRefresh__spinner-self']}\n        style={{\n          width: size,\n          height: size,\n        }}\n        viewBox={`0 0 ${size} ${size}`}\n        xmlns=\"http://www.w3.org/2000/svg\"\n      >\n        <g\n          style={{\n            width: size,\n            height: size,\n            transformOrigin: `${circleCenter}px ${circleCenter}px`,\n          }}\n        >\n          <circle\n            className={styles['PullToRefresh__spinner-path']}\n            fill=\"none\"\n            strokeDasharray={dasharray}\n            strokeDashoffset={dashoffset}\n            strokeWidth={strokeWidth}\n            strokeLinecap=\"round\"\n            cx={circleCenter}\n            cy={circleCenter}\n            r={radius}\n          />\n        </g>\n      </svg>\n    </div>\n  );\n};\n"],"mappings":";;;;;;;AAAA;AACA;AAGA,SAASA,oBAAoB,CAACC,KAAa,EAAEC,MAAc,EAAE;EAC3D,IAAMC,QAAQ,GAAGF,KAAK,GAAG,GAAG;EAC5B,OAAO,CAAC,GAAGG,IAAI,CAACC,EAAE,GAAGH,MAAM,IAAI,CAAC,GAAGC,QAAQ,CAAC;AAC9C;AAUO,IAAMG,oBAAoB,GAAG,SAAvBA,oBAAoB,OAOA;EAAA,mBAN/BC,EAAE;IAAFA,EAAE,wBAAG,IAAI;IAAA,iBACTC,IAAI;IAAJA,IAAI,0BAAG,EAAE;IAAA,wBACTC,WAAW;IAAXA,WAAW,iCAAG,GAAG;IACjBC,KAAK,QAALA,KAAK;IAAA,qBACLP,QAAQ;IAARA,QAAQ,8BAAG,CAAC;IAAA,sBACZ,YAAY;IAAEQ,SAAS,+BAAG,0BAA0B;EAEpD,IAAMT,MAAM,GAAG,GAAG,GAAGM,IAAI,GAAG,GAAG,GAAGC,WAAW;EAC7C,IAAMG,SAAS,GAAG,CAAC,GAAGR,IAAI,CAACC,EAAE,GAAGH,MAAM;EACtC,IAAMW,YAAY,GAAG,GAAG,GAAGL,IAAI;EAE/B,IAAMM,UAAU,GAAGd,oBAAoB,CAACO,EAAE,GAAG,EAAE,GAAGJ,QAAQ,EAAED,MAAM,CAAC;EAEnE,oBACE;IACE,SAAS,EAAE,IAAAa,gBAAU,gCAEnBR,EAAE,oCAAwC,CAC1C;IACF,KAAK,EAAEG,KAAM;IACb,cAAYH,EAAE,GAAGI,SAAS,GAAGK;EAAU,gBAEvC;IACE,IAAI,EAAC,cAAc;IACnB,SAAS,mCAAwC;IACjD,KAAK,EAAE;MACLC,KAAK,EAAET,IAAI;MACXU,MAAM,EAAEV;IACV,CAAE;IACF,OAAO,gBAASA,IAAI,cAAIA,IAAI,CAAG;IAC/B,KAAK,EAAC;EAA4B,gBAElC;IACE,KAAK,EAAE;MACLS,KAAK,EAAET,IAAI;MACXU,MAAM,EAAEV,IAAI;MACZW,eAAe,YAAKN,YAAY,gBAAMA,YAAY;IACpD;EAAE,gBAEF;IACE,SAAS,mCAAwC;IACjD,IAAI,EAAC,MAAM;IACX,eAAe,EAAED,SAAU;IAC3B,gBAAgB,EAAEE,UAAW;IAC7B,WAAW,EAAEL,WAAY;IACzB,aAAa,EAAC,OAAO;IACrB,EAAE,EAAEI,YAAa;IACjB,EAAE,EAAEA,YAAa;IACjB,CAAC,EAAEX;EAAO,EACV,CACA,CACA,CACF;AAEV,CAAC;AAAC"}