{"version":3,"file":"useKeyboard.js","names":["getPreciseKeyboardState","window","innerHeight","availHeight","screen","coveredViewportPercentage","Math","round","eventOptions","passive","capture","useKeyboard","useDOM","document","React","useState","isOpened","setIsOpened","onFocus","useCallback","event","type","activeElement","tagName","useEffect","useGlobalEventListener"],"sources":["../../../src/hooks/useKeyboard.ts"],"sourcesContent":["import * as React from 'react';\nimport { useDOM } from '../lib/dom';\nimport { useGlobalEventListener } from './useGlobalEventListener';\n\ninterface SoftwareKeyboardState {\n  isOpened: boolean;\n}\n\n/**\n Проверяет, закрыла ли клавиатура часть экрана, 24% подошло к большинству устройств\n Работает на iOS и Android, где софт-клавиатура ресайзит viewport в браузерах\n */\nexport function getPreciseKeyboardState(window: any): boolean {\n  const {\n    innerHeight,\n    screen: { availHeight },\n  } = window;\n\n  const coveredViewportPercentage = Math.round((1 - innerHeight / availHeight) * 100);\n  return coveredViewportPercentage > 24;\n}\n\nconst eventOptions = {\n  passive: true,\n  capture: false,\n};\n\nexport function useKeyboard(): SoftwareKeyboardState {\n  const { document } = useDOM();\n\n  const [isOpened, setIsOpened] = React.useState(false);\n\n  const onFocus = React.useCallback(\n    (event: FocusEvent | true) => {\n      const isOpened =\n        (event === true || event.type === 'focusin') &&\n        (document?.activeElement?.tagName === 'INPUT' ||\n          document?.activeElement?.tagName === 'TEXTAREA');\n      setIsOpened(isOpened);\n    },\n    [document?.activeElement?.tagName],\n  );\n\n  /**\n   У полей с autoFocus не отлавливаются события focus, для этого вызываем вручную,\n   чтобы иметь хоть какое-то понимание происходящего.\n   */\n  React.useEffect(() => {\n    onFocus(true);\n  }, [onFocus]);\n\n  useGlobalEventListener(document, 'focusout', onFocus, eventOptions);\n  useGlobalEventListener(document, 'focusin', onFocus, eventOptions);\n\n  return { isOpened };\n}\n"],"mappings":";;;;;;;;;;AAAA;AACA;AACA;AAMA;AACA;AACA;AACA;AACO,SAASA,uBAAuB,CAACC,MAAW,EAAW;EAC5D,IACEC,WAAW,GAETD,MAAM,CAFRC,WAAW;IACDC,WAAW,GACnBF,MAAM,CADRG,MAAM,CAAID,WAAW;EAGvB,IAAME,yBAAyB,GAAGC,IAAI,CAACC,KAAK,CAAC,CAAC,CAAC,GAAGL,WAAW,GAAGC,WAAW,IAAI,GAAG,CAAC;EACnF,OAAOE,yBAAyB,GAAG,EAAE;AACvC;AAEA,IAAMG,YAAY,GAAG;EACnBC,OAAO,EAAE,IAAI;EACbC,OAAO,EAAE;AACX,CAAC;AAEM,SAASC,WAAW,GAA0B;EAAA;EACnD,cAAqB,IAAAC,WAAM,GAAE;IAArBC,QAAQ,WAARA,QAAQ;EAEhB,sBAAgCC,KAAK,CAACC,QAAQ,CAAC,KAAK,CAAC;IAAA;IAA9CC,QAAQ;IAAEC,WAAW;EAE5B,IAAMC,OAAO,GAAGJ,KAAK,CAACK,WAAW,CAC/B,UAACC,KAAwB,EAAK;IAAA;IAC5B,IAAMJ,QAAQ,GACZ,CAACI,KAAK,KAAK,IAAI,IAAIA,KAAK,CAACC,IAAI,KAAK,SAAS,MAC1C,CAAAR,QAAQ,aAARA,QAAQ,gDAARA,QAAQ,CAAES,aAAa,0DAAvB,sBAAyBC,OAAO,MAAK,OAAO,IAC3C,CAAAV,QAAQ,aAARA,QAAQ,iDAARA,QAAQ,CAAES,aAAa,2DAAvB,uBAAyBC,OAAO,MAAK,UAAU,CAAC;IACpDN,WAAW,CAACD,QAAQ,CAAC;EACvB,CAAC,EACD,CAACH,QAAQ,aAARA,QAAQ,iDAARA,QAAQ,CAAES,aAAa,2DAAvB,uBAAyBC,OAAO,CAAC,CACnC;;EAED;AACF;AACA;AACA;EACET,KAAK,CAACU,SAAS,CAAC,YAAM;IACpBN,OAAO,CAAC,IAAI,CAAC;EACf,CAAC,EAAE,CAACA,OAAO,CAAC,CAAC;EAEb,IAAAO,8CAAsB,EAACZ,QAAQ,EAAE,UAAU,EAAEK,OAAO,EAAEV,YAAY,CAAC;EACnE,IAAAiB,8CAAsB,EAACZ,QAAQ,EAAE,SAAS,EAAEK,OAAO,EAAEV,YAAY,CAAC;EAElE,OAAO;IAAEQ,QAAQ,EAARA;EAAS,CAAC;AACrB"}