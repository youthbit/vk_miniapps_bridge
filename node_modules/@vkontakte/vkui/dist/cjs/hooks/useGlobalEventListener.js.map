{"version":3,"file":"useGlobalEventListener.js","names":["useGlobalEventListener","element","event","cb","options","listener","useEventListener","useIsomorphicLayoutEffect","add","remove","Boolean"],"sources":["../../../src/hooks/useGlobalEventListener.ts"],"sourcesContent":["import { useIsomorphicLayoutEffect } from '../lib/useIsomorphicLayoutEffect';\nimport { useEventListener } from './useEventListener';\n\nexport function useGlobalEventListener<K extends keyof GlobalEventHandlersEventMap>(\n  element: Document | HTMLElement | Window | null | undefined,\n  event: K,\n  cb: ((ev: GlobalEventHandlersEventMap[K]) => void) | null | false | undefined,\n  options?: AddEventListenerOptions,\n): void;\nexport function useGlobalEventListener<E extends Event>(\n  element: Document | HTMLElement | Window | null | undefined,\n  event: string,\n  cb: ((ev: E) => void) | null | false | undefined,\n  options?: AddEventListenerOptions,\n): void;\nexport function useGlobalEventListener<\n  K extends keyof GlobalEventHandlersEventMap,\n  E extends Event,\n>(\n  element: Document | HTMLElement | Window | null | undefined,\n  event: K | string,\n  cb: ((ev: E) => void) | null | false | undefined,\n  options?: AddEventListenerOptions,\n) {\n  const listener = useEventListener(event, cb, options);\n  useIsomorphicLayoutEffect(() => {\n    if (cb && element) {\n      listener.add(element);\n    } else {\n      listener.remove();\n    }\n  }, [Boolean(cb), Boolean(element)]);\n}\n"],"mappings":";;;;;;AAAA;AACA;AAcO,SAASA,sBAAsB,CAIpCC,OAA2D,EAC3DC,KAAiB,EACjBC,EAAgD,EAChDC,OAAiC,EACjC;EACA,IAAMC,QAAQ,GAAG,IAAAC,kCAAgB,EAACJ,KAAK,EAAEC,EAAE,EAAEC,OAAO,CAAC;EACrD,IAAAG,oDAAyB,EAAC,YAAM;IAC9B,IAAIJ,EAAE,IAAIF,OAAO,EAAE;MACjBI,QAAQ,CAACG,GAAG,CAACP,OAAO,CAAC;IACvB,CAAC,MAAM;MACLI,QAAQ,CAACI,MAAM,EAAE;IACnB;EACF,CAAC,EAAE,CAACC,OAAO,CAACP,EAAE,CAAC,EAAEO,OAAO,CAACT,OAAO,CAAC,CAAC,CAAC;AACrC"}