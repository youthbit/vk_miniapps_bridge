{"version":3,"file":"useMediaQueries.js","names":["storedMediaQueries","window","undefined","mediaQueries","useMediaQueries","useDOM","React","useMemo","initializeStoreOrUpdateStoreIfWindowChanges","matchMedia","bind","mediaQueryNull","desktopPlus","MEDIA_QUERIES","DESKTOP_PLUS","smallTabletPlus","SMALL_TABLET_PLUS","tablet","TABLET","smallTablet","SMALL_TABLET","mobile","MOBILE","mediumHeight","MEDIUM_HEIGHT","mobileLandscapeHeight","MOBILE_LANDSCAPE_HEIGHT"],"sources":["../../../src/hooks/useMediaQueries.ts"],"sourcesContent":["import * as React from 'react';\nimport { type MediaQueries, MEDIA_QUERIES } from '../lib/adaptivity';\nimport { mediaQueryNull } from '../lib/browser';\nimport { useDOM } from '../lib/dom';\n\ninterface StoredMediaQueries {\n  /**\n   * Постоянная ссылка на окно. Это необходима, чтобы пересоздать медиа выражение если окно вдруг измениться.\n   *\n   * > `styleguide`\n   * >\n   * > В данный момент изменения окна существует в рамках песочницы. По сути мы храним ссылку на окно ради этого кейса\n   * > в песочнице.\n   */\n  window: Window | undefined;\n  /**\n   * Хранит созданные медиа выражения.\n   *\n   * Достаточно единожды создать экземпляры `MediaQueryList`, а дальше подписываться на события\n   * через метод `addEventListener(type, listener)`.\n   *\n   * {@link https://developer.mozilla.org/en-US/docs/Web/API/MediaQueryList}\n   */\n  mediaQueries: MediaQueries | null;\n}\n\nconst storedMediaQueries: StoredMediaQueries = {\n  window: undefined,\n  mediaQueries: null,\n};\n\n/**\n * Возвращает медиа выражения определенные дизайн-системой.\n */\nexport const useMediaQueries = () => {\n  const { window } = useDOM();\n\n  return React.useMemo(\n    function initializeStoreOrUpdateStoreIfWindowChanges() {\n      if (storedMediaQueries.window === window && storedMediaQueries.mediaQueries !== null) {\n        return storedMediaQueries.mediaQueries;\n      }\n\n      const matchMedia = window ? window.matchMedia.bind(window) : mediaQueryNull;\n\n      storedMediaQueries.window = window;\n      storedMediaQueries.mediaQueries = {\n        desktopPlus: matchMedia(MEDIA_QUERIES.DESKTOP_PLUS),\n        smallTabletPlus: matchMedia(MEDIA_QUERIES.SMALL_TABLET_PLUS),\n        tablet: matchMedia(MEDIA_QUERIES.TABLET),\n        smallTablet: matchMedia(MEDIA_QUERIES.SMALL_TABLET),\n        mobile: matchMedia(MEDIA_QUERIES.MOBILE),\n        mediumHeight: matchMedia(MEDIA_QUERIES.MEDIUM_HEIGHT),\n        mobileLandscapeHeight: matchMedia(MEDIA_QUERIES.MOBILE_LANDSCAPE_HEIGHT),\n      };\n\n      return storedMediaQueries.mediaQueries;\n    },\n    [window],\n  );\n};\n"],"mappings":";;;;;;;AAAA;AACA;AACA;AACA;AAuBA,IAAMA,kBAAsC,GAAG;EAC7CC,MAAM,EAAEC,SAAS;EACjBC,YAAY,EAAE;AAChB,CAAC;;AAED;AACA;AACA;AACO,IAAMC,eAAe,GAAG,SAAlBA,eAAe,GAAS;EACnC,cAAmB,IAAAC,WAAM,GAAE;IAAnBJ,MAAM,WAANA,MAAM;EAEd,OAAOK,KAAK,CAACC,OAAO,CAClB,SAASC,2CAA2C,GAAG;IACrD,IAAIR,kBAAkB,CAACC,MAAM,KAAKA,MAAM,IAAID,kBAAkB,CAACG,YAAY,KAAK,IAAI,EAAE;MACpF,OAAOH,kBAAkB,CAACG,YAAY;IACxC;IAEA,IAAMM,UAAU,GAAGR,MAAM,GAAGA,MAAM,CAACQ,UAAU,CAACC,IAAI,CAACT,MAAM,CAAC,GAAGU,uBAAc;IAE3EX,kBAAkB,CAACC,MAAM,GAAGA,MAAM;IAClCD,kBAAkB,CAACG,YAAY,GAAG;MAChCS,WAAW,EAAEH,UAAU,CAACI,yBAAa,CAACC,YAAY,CAAC;MACnDC,eAAe,EAAEN,UAAU,CAACI,yBAAa,CAACG,iBAAiB,CAAC;MAC5DC,MAAM,EAAER,UAAU,CAACI,yBAAa,CAACK,MAAM,CAAC;MACxCC,WAAW,EAAEV,UAAU,CAACI,yBAAa,CAACO,YAAY,CAAC;MACnDC,MAAM,EAAEZ,UAAU,CAACI,yBAAa,CAACS,MAAM,CAAC;MACxCC,YAAY,EAAEd,UAAU,CAACI,yBAAa,CAACW,aAAa,CAAC;MACrDC,qBAAqB,EAAEhB,UAAU,CAACI,yBAAa,CAACa,uBAAuB;IACzE,CAAC;IAED,OAAO1B,kBAAkB,CAACG,YAAY;EACxC,CAAC,EACD,CAACF,MAAM,CAAC,CACT;AACH,CAAC;AAAC"}