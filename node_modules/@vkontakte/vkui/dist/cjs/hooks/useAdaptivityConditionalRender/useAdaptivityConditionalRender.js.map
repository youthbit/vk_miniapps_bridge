{"version":3,"file":"useAdaptivityConditionalRender.js","names":["useAdaptivityConditionalRender","React","useContext","AdaptivityContext","sizeXContext","sizeX","sizeYContext","sizeY","viewWidthContext","viewWidth","viewHeightContext","viewHeight","hasPointerContext","hasPointer","platform","usePlatform","useMemo","getAdaptiveSizeType","sizeXCompactClassNames","sizeXRegularClassNames","sizeYCompactClassNames","sizeYRegularClassNames","getAdaptiveViewWidth","viewWidthClassNames","deviceType","getAdaptiveDeviceType","deviceTypeClassNames"],"sources":["../../../../src/hooks/useAdaptivityConditionalRender/useAdaptivityConditionalRender.tsx"],"sourcesContent":["import * as React from 'react';\nimport { AdaptivityContext } from '../../components/AdaptivityProvider/AdaptivityContext';\nimport { usePlatform } from '../usePlatform';\nimport type { UseAdaptivityConditionalRender } from './types';\nimport {\n  sizeXCompactClassNames,\n  sizeXRegularClassNames,\n  sizeYCompactClassNames,\n  sizeYRegularClassNames,\n  viewWidthClassNames,\n  deviceTypeClassNames,\n} from './constants';\nimport { getAdaptiveSizeType, getAdaptiveViewWidth, getAdaptiveDeviceType } from './helpers';\n\nexport const useAdaptivityConditionalRender = (): UseAdaptivityConditionalRender => {\n  const {\n    sizeX: sizeXContext,\n    sizeY: sizeYContext,\n    viewWidth: viewWidthContext,\n    viewHeight: viewHeightContext,\n    hasPointer: hasPointerContext,\n  } = React.useContext(AdaptivityContext);\n  const platform = usePlatform();\n\n  return React.useMemo(() => {\n    const sizeX = getAdaptiveSizeType(sizeXContext, sizeXCompactClassNames, sizeXRegularClassNames);\n    const sizeY = getAdaptiveSizeType(sizeYContext, sizeYCompactClassNames, sizeYRegularClassNames);\n    const viewWidth = getAdaptiveViewWidth(viewWidthContext, viewWidthClassNames);\n    const deviceType = getAdaptiveDeviceType(\n      viewWidthContext,\n      viewHeightContext,\n      hasPointerContext,\n      platform,\n      deviceTypeClassNames,\n    );\n    return {\n      sizeX,\n      sizeY,\n      viewWidth,\n      deviceType,\n    };\n  }, [\n    sizeXContext,\n    sizeYContext,\n    viewWidthContext,\n    viewHeightContext,\n    hasPointerContext,\n    platform,\n  ]);\n};\n"],"mappings":";;;;;;;AAAA;AACA;AACA;AAEA;AAQA;AAEO,IAAMA,8BAA8B,GAAG,SAAjCA,8BAA8B,GAAyC;EAClF,wBAMIC,KAAK,CAACC,UAAU,CAACC,oCAAiB,CAAC;IAL9BC,YAAY,qBAAnBC,KAAK;IACEC,YAAY,qBAAnBC,KAAK;IACMC,gBAAgB,qBAA3BC,SAAS;IACGC,iBAAiB,qBAA7BC,UAAU;IACEC,iBAAiB,qBAA7BC,UAAU;EAEZ,IAAMC,QAAQ,GAAG,IAAAC,wBAAW,GAAE;EAE9B,OAAOd,KAAK,CAACe,OAAO,CAAC,YAAM;IACzB,IAAMX,KAAK,GAAG,IAAAY,4BAAmB,EAACb,YAAY,EAAEc,iCAAsB,EAAEC,iCAAsB,CAAC;IAC/F,IAAMZ,KAAK,GAAG,IAAAU,4BAAmB,EAACX,YAAY,EAAEc,iCAAsB,EAAEC,iCAAsB,CAAC;IAC/F,IAAMZ,SAAS,GAAG,IAAAa,6BAAoB,EAACd,gBAAgB,EAAEe,8BAAmB,CAAC;IAC7E,IAAMC,UAAU,GAAG,IAAAC,8BAAqB,EACtCjB,gBAAgB,EAChBE,iBAAiB,EACjBE,iBAAiB,EACjBE,QAAQ,EACRY,+BAAoB,CACrB;IACD,OAAO;MACLrB,KAAK,EAALA,KAAK;MACLE,KAAK,EAALA,KAAK;MACLE,SAAS,EAATA,SAAS;MACTe,UAAU,EAAVA;IACF,CAAC;EACH,CAAC,EAAE,CACDpB,YAAY,EACZE,YAAY,EACZE,gBAAgB,EAChBE,iBAAiB,EACjBE,iBAAiB,EACjBE,QAAQ,CACT,CAAC;AACJ,CAAC;AAAC"}