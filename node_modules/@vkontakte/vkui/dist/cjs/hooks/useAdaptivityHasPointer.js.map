{"version":3,"file":"useAdaptivityHasPointer.js","names":["useAdaptivityHasPointer","deferDetect","React","useContext","AdaptivityContext","hasPointerContext","hasPointer","undefined","hasPointerLib","isClient","useIsClient"],"sources":["../../../src/hooks/useAdaptivityHasPointer.ts"],"sourcesContent":["import * as React from 'react';\nimport { hasMouse as hasPointerLib } from '@vkontakte/vkjs';\nimport { AdaptivityContext } from '../components/AdaptivityProvider/AdaptivityContext';\nimport { useIsClient } from './useIsClient';\n\n/**\n * Определение происходит с помощью `window.matchMedia`. Для того, чтобы не было ошибок при гидратации, по умолчанию\n * откладываем определение на второй рендер.\n *\n * [No SSR] Если передать `false`, то определение будет сразу.\n */\nexport function useAdaptivityHasPointer(deferDetect?: true): undefined | boolean; // prettier-ignore\nexport function useAdaptivityHasPointer(deferDetect?: false): boolean;\nexport function useAdaptivityHasPointer(deferDetect = true): undefined | boolean {\n  const { hasPointer: hasPointerContext } = React.useContext(AdaptivityContext);\n  const hasPointer = hasPointerContext === undefined ? hasPointerLib : hasPointerContext;\n\n  const isClient = useIsClient(!deferDetect);\n  if (!isClient) {\n    return undefined;\n  }\n\n  return hasPointer;\n}\n"],"mappings":";;;;;;;AAAA;AACA;AACA;AACA;AAUO,SAASA,uBAAuB,GAA0C;EAAA,IAAzCC,WAAW,uEAAG,IAAI;EACxD,wBAA0CC,KAAK,CAACC,UAAU,CAACC,oCAAiB,CAAC;IAAzDC,iBAAiB,qBAA7BC,UAAU;EAClB,IAAMA,UAAU,GAAGD,iBAAiB,KAAKE,SAAS,GAAGC,cAAa,GAAGH,iBAAiB;EAEtF,IAAMI,QAAQ,GAAG,IAAAC,wBAAW,EAAC,CAACT,WAAW,CAAC;EAC1C,IAAI,CAACQ,QAAQ,EAAE;IACb,OAAOF,SAAS;EAClB;EAEA,OAAOD,UAAU;AACnB"}