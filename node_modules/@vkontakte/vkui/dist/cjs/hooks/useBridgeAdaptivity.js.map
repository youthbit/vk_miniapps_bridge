{"version":3,"file":"useBridgeAdaptivity.js","names":["initialState","type","viewportWidth","viewportHeight","resolveAdaptivity","e","detail","data","adaptivity","viewport_width","viewport_height","bridgeAdaptivity","isFinite","vkBridge","subscribe","useBridgeAdaptivity","React","useState","setBridgeAdaptivity","useIsomorphicLayoutEffect","bridgeListener","newBridgeAdaptivity","unsubscribe"],"sources":["../../../src/hooks/useBridgeAdaptivity.ts"],"sourcesContent":["import * as React from 'react';\nimport vkBridge from '@vkontakte/vk-bridge';\nimport { useIsomorphicLayoutEffect } from '../lib/useIsomorphicLayoutEffect';\n\nexport interface BridgeAdaptivity {\n  type: '' | 'force_mobile' | 'force_mobile_compact' | 'adaptive';\n  viewportWidth: number;\n  viewportHeight: number;\n}\n\ninterface BridgeEvent {\n  detail: {\n    type: string;\n    data: {\n      [index: string]: any;\n    };\n  };\n}\n\nlet initialState: BridgeAdaptivity = {\n  type: '',\n  viewportWidth: 0,\n  viewportHeight: 0,\n};\n\nfunction resolveAdaptivity(e: BridgeEvent): BridgeAdaptivity | null {\n  const { type, data } = e.detail;\n\n  if (type !== 'VKWebAppUpdateConfig' || !data) {\n    return null;\n  }\n\n  const { adaptivity, viewport_width: viewportWidth, viewport_height: viewportHeight } = data;\n\n  const bridgeAdaptivity: BridgeAdaptivity = {\n    type: '',\n    viewportWidth: isFinite(viewportWidth) ? +viewportWidth : 0,\n    viewportHeight: isFinite(viewportHeight) ? +viewportHeight : 0,\n  };\n\n  switch (adaptivity) {\n    case 'force_mobile':\n    case 'force_mobile_compact':\n    case 'adaptive':\n      bridgeAdaptivity.type = adaptivity;\n  }\n\n  return bridgeAdaptivity;\n}\n\nvkBridge.subscribe((e: BridgeEvent) => {\n  const bridgeAdaptivity = resolveAdaptivity(e);\n\n  if (bridgeAdaptivity) {\n    initialState = bridgeAdaptivity;\n  }\n});\n\nexport function useBridgeAdaptivity(): BridgeAdaptivity {\n  const [bridgeAdaptivity, setBridgeAdaptivity] = React.useState<BridgeAdaptivity>(initialState);\n\n  useIsomorphicLayoutEffect(() => {\n    function bridgeListener(e: BridgeEvent) {\n      const newBridgeAdaptivity = resolveAdaptivity(e);\n\n      if (newBridgeAdaptivity) {\n        setBridgeAdaptivity(newBridgeAdaptivity);\n      }\n    }\n\n    vkBridge.subscribe(bridgeListener);\n    return () => {\n      vkBridge.unsubscribe(bridgeListener);\n    };\n  }, []);\n\n  return bridgeAdaptivity;\n}\n"],"mappings":";;;;;;;;;AAAA;AACA;AACA;AAiBA,IAAIA,YAA8B,GAAG;EACnCC,IAAI,EAAE,EAAE;EACRC,aAAa,EAAE,CAAC;EAChBC,cAAc,EAAE;AAClB,CAAC;AAED,SAASC,iBAAiB,CAACC,CAAc,EAA2B;EAClE,gBAAuBA,CAAC,CAACC,MAAM;IAAvBL,IAAI,aAAJA,IAAI;IAAEM,IAAI,aAAJA,IAAI;EAElB,IAAIN,IAAI,KAAK,sBAAsB,IAAI,CAACM,IAAI,EAAE;IAC5C,OAAO,IAAI;EACb;EAEA,IAAQC,UAAU,GAAqED,IAAI,CAAnFC,UAAU;IAAkBN,aAAa,GAAsCK,IAAI,CAAvEE,cAAc;IAAkCN,cAAc,GAAKI,IAAI,CAAxCG,eAAe;EAElE,IAAMC,gBAAkC,GAAG;IACzCV,IAAI,EAAE,EAAE;IACRC,aAAa,EAAEU,QAAQ,CAACV,aAAa,CAAC,GAAG,CAACA,aAAa,GAAG,CAAC;IAC3DC,cAAc,EAAES,QAAQ,CAACT,cAAc,CAAC,GAAG,CAACA,cAAc,GAAG;EAC/D,CAAC;EAED,QAAQK,UAAU;IAChB,KAAK,cAAc;IACnB,KAAK,sBAAsB;IAC3B,KAAK,UAAU;MACbG,gBAAgB,CAACV,IAAI,GAAGO,UAAU;EAAC;EAGvC,OAAOG,gBAAgB;AACzB;AAEAE,iBAAQ,CAACC,SAAS,CAAC,UAACT,CAAc,EAAK;EACrC,IAAMM,gBAAgB,GAAGP,iBAAiB,CAACC,CAAC,CAAC;EAE7C,IAAIM,gBAAgB,EAAE;IACpBX,YAAY,GAAGW,gBAAgB;EACjC;AACF,CAAC,CAAC;AAEK,SAASI,mBAAmB,GAAqB;EACtD,sBAAgDC,KAAK,CAACC,QAAQ,CAAmBjB,YAAY,CAAC;IAAA;IAAvFW,gBAAgB;IAAEO,mBAAmB;EAE5C,IAAAC,oDAAyB,EAAC,YAAM;IAC9B,SAASC,cAAc,CAACf,CAAc,EAAE;MACtC,IAAMgB,mBAAmB,GAAGjB,iBAAiB,CAACC,CAAC,CAAC;MAEhD,IAAIgB,mBAAmB,EAAE;QACvBH,mBAAmB,CAACG,mBAAmB,CAAC;MAC1C;IACF;IAEAR,iBAAQ,CAACC,SAAS,CAACM,cAAc,CAAC;IAClC,OAAO,YAAM;MACXP,iBAAQ,CAACS,WAAW,CAACF,cAAc,CAAC;IACtC,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;EAEN,OAAOT,gBAAgB;AACzB"}