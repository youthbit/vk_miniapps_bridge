{"version":3,"file":"useMediaQueries.js","names":["React","MEDIA_QUERIES","mediaQueryNull","useDOM","storedMediaQueries","window","undefined","mediaQueries","useMediaQueries","useMemo","initializeStoreOrUpdateStoreIfWindowChanges","matchMedia","bind","desktopPlus","DESKTOP_PLUS","smallTabletPlus","SMALL_TABLET_PLUS","tablet","TABLET","smallTablet","SMALL_TABLET","mobile","MOBILE","mediumHeight","MEDIUM_HEIGHT","mobileLandscapeHeight","MOBILE_LANDSCAPE_HEIGHT"],"sources":["../../src/hooks/useMediaQueries.ts"],"sourcesContent":["import * as React from 'react';\nimport { type MediaQueries, MEDIA_QUERIES } from '../lib/adaptivity';\nimport { mediaQueryNull } from '../lib/browser';\nimport { useDOM } from '../lib/dom';\n\ninterface StoredMediaQueries {\n  /**\n   * Постоянная ссылка на окно. Это необходима, чтобы пересоздать медиа выражение если окно вдруг измениться.\n   *\n   * > `styleguide`\n   * >\n   * > В данный момент изменения окна существует в рамках песочницы. По сути мы храним ссылку на окно ради этого кейса\n   * > в песочнице.\n   */\n  window: Window | undefined;\n  /**\n   * Хранит созданные медиа выражения.\n   *\n   * Достаточно единожды создать экземпляры `MediaQueryList`, а дальше подписываться на события\n   * через метод `addEventListener(type, listener)`.\n   *\n   * {@link https://developer.mozilla.org/en-US/docs/Web/API/MediaQueryList}\n   */\n  mediaQueries: MediaQueries | null;\n}\n\nconst storedMediaQueries: StoredMediaQueries = {\n  window: undefined,\n  mediaQueries: null,\n};\n\n/**\n * Возвращает медиа выражения определенные дизайн-системой.\n */\nexport const useMediaQueries = () => {\n  const { window } = useDOM();\n\n  return React.useMemo(\n    function initializeStoreOrUpdateStoreIfWindowChanges() {\n      if (storedMediaQueries.window === window && storedMediaQueries.mediaQueries !== null) {\n        return storedMediaQueries.mediaQueries;\n      }\n\n      const matchMedia = window ? window.matchMedia.bind(window) : mediaQueryNull;\n\n      storedMediaQueries.window = window;\n      storedMediaQueries.mediaQueries = {\n        desktopPlus: matchMedia(MEDIA_QUERIES.DESKTOP_PLUS),\n        smallTabletPlus: matchMedia(MEDIA_QUERIES.SMALL_TABLET_PLUS),\n        tablet: matchMedia(MEDIA_QUERIES.TABLET),\n        smallTablet: matchMedia(MEDIA_QUERIES.SMALL_TABLET),\n        mobile: matchMedia(MEDIA_QUERIES.MOBILE),\n        mediumHeight: matchMedia(MEDIA_QUERIES.MEDIUM_HEIGHT),\n        mobileLandscapeHeight: matchMedia(MEDIA_QUERIES.MOBILE_LANDSCAPE_HEIGHT),\n      };\n\n      return storedMediaQueries.mediaQueries;\n    },\n    [window],\n  );\n};\n"],"mappings":"AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,SAA4BC,aAAa,QAAQ,mBAAmB;AACpE,SAASC,cAAc,QAAQ,gBAAgB;AAC/C,SAASC,MAAM,QAAQ,YAAY;AAuBnC,IAAMC,kBAAsC,GAAG;EAC7CC,MAAM,EAAEC,SAAS;EACjBC,YAAY,EAAE;AAChB,CAAC;;AAED;AACA;AACA;AACA,OAAO,IAAMC,eAAe,GAAG,SAAlBA,eAAe,GAAS;EACnC,cAAmBL,MAAM,EAAE;IAAnBE,MAAM,WAANA,MAAM;EAEd,OAAOL,KAAK,CAACS,OAAO,CAClB,SAASC,2CAA2C,GAAG;IACrD,IAAIN,kBAAkB,CAACC,MAAM,KAAKA,MAAM,IAAID,kBAAkB,CAACG,YAAY,KAAK,IAAI,EAAE;MACpF,OAAOH,kBAAkB,CAACG,YAAY;IACxC;IAEA,IAAMI,UAAU,GAAGN,MAAM,GAAGA,MAAM,CAACM,UAAU,CAACC,IAAI,CAACP,MAAM,CAAC,GAAGH,cAAc;IAE3EE,kBAAkB,CAACC,MAAM,GAAGA,MAAM;IAClCD,kBAAkB,CAACG,YAAY,GAAG;MAChCM,WAAW,EAAEF,UAAU,CAACV,aAAa,CAACa,YAAY,CAAC;MACnDC,eAAe,EAAEJ,UAAU,CAACV,aAAa,CAACe,iBAAiB,CAAC;MAC5DC,MAAM,EAAEN,UAAU,CAACV,aAAa,CAACiB,MAAM,CAAC;MACxCC,WAAW,EAAER,UAAU,CAACV,aAAa,CAACmB,YAAY,CAAC;MACnDC,MAAM,EAAEV,UAAU,CAACV,aAAa,CAACqB,MAAM,CAAC;MACxCC,YAAY,EAAEZ,UAAU,CAACV,aAAa,CAACuB,aAAa,CAAC;MACrDC,qBAAqB,EAAEd,UAAU,CAACV,aAAa,CAACyB,uBAAuB;IACzE,CAAC;IAED,OAAOtB,kBAAkB,CAACG,YAAY;EACxC,CAAC,EACD,CAACF,MAAM,CAAC,CACT;AACH,CAAC"}