import * as React from 'react';
import { NavIdProps } from '../../lib/getNavId';
export interface ModalPageProps extends React.HTMLAttributes<HTMLDivElement>, NavIdProps {
    /**
     * Шапка модальной страницы, `<ModalPageHeader />`
     */
    header?: React.ReactNode;
    /**
     * Задаёт контенту максимальную ширину.
     *
     * > ⚠️ **Заметки:**
     * > - Для `viewWidth < SMALL_TABLET_SIZE` будет всегда `"s"`
     * > - Для `platform === VKCOM` максимальная ширина зашита, её не изменить.
     */
    size?: 's' | 'm' | 'l';
    /**
     * Будет вызвано при начале открытия модалки.
     */
    onOpen?: VoidFunction;
    /**
     * Будет вызвано при окончательном открытии модалки.
     */
    onOpened?: VoidFunction;
    /**
     * Будет вызвано при начале закрытия модалки.
     */
    onClose?: VoidFunction;
    /**
     * Будет вызвано при окончательном закрытии модалки.
     */
    onClosed?: VoidFunction;
    /**
     * Процент, на который изначально будет открыта модальная страница. При `settlingHeight={100}` модальная страница раскрывается на всю высоту.
     */
    settlingHeight?: number;
    /**
     * Если высота контента в модальной странице может поменяться, нужно установить это свойство
     */
    dynamicContentHeight?: boolean;
    getModalContentRef?: React.Ref<HTMLDivElement>;
    /**
     * Скрывает кнопку закрытия (актуально для iOS, т.к. можно отрисовать кнопку закрытия внутри модалки)
     */
    hideCloseButton?: boolean;
}
/**
 * @see https://vkcom.github.io/VKUI/#/ModalPage
 */
export declare const ModalPage: ({ children, header, size: sizeProp, onOpen, onOpened, onClose, onClosed, settlingHeight, dynamicContentHeight, getModalContentRef, nav, id, hideCloseButton, className, ...restProps }: ModalPageProps) => JSX.Element;
