{"version":3,"file":"ModalRootAdaptive.js","names":["React","ModalRootTouch","ModalRootDesktop","useScrollLock","useAdaptivityWithJSMediaQueries","ModalRoot","props","isDesktop","activeModal","RootComponent"],"sources":["../../../src/components/ModalRoot/ModalRootAdaptive.tsx"],"sourcesContent":["import * as React from 'react';\nimport { ModalRootTouch } from './ModalRoot';\nimport { ModalRootDesktop } from './ModalRootDesktop';\nimport { useScrollLock } from '../AppRoot/ScrollContext';\nimport { useAdaptivityWithJSMediaQueries } from '../../hooks/useAdaptivityWithJSMediaQueries';\n\nexport interface ModalRootProps {\n  activeModal?: string | null;\n\n  /**\n   * Будет вызвано при начале открытия активной модалки с её id\n   */\n  onOpen?(modalId: string): void;\n\n  /**\n   * Будет вызвано при окончательном открытии активной модалки с её id\n   */\n  onOpened?(modalId: string): void;\n\n  /**\n   * Будет вызвано при начале закрытия активной модалки с её id\n   */\n  onClose?(modalId: string): void;\n\n  /**\n   * Будет вызвано при окончательном закрытии активной модалки с её id\n   */\n  onClosed?(modalId: string): void;\n  children?: React.ReactNode;\n}\n\n/**\n * @see https://vkcom.github.io/VKUI/#/ModalRoot\n */\nexport const ModalRoot = (props: ModalRootProps) => {\n  const { isDesktop } = useAdaptivityWithJSMediaQueries();\n\n  useScrollLock(!!props.activeModal);\n\n  const RootComponent = isDesktop ? ModalRootDesktop : ModalRootTouch;\n\n  return <RootComponent {...props} />;\n};\n"],"mappings":"AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,SAASC,cAAc,QAAQ,aAAa;AAC5C,SAASC,gBAAgB,QAAQ,oBAAoB;AACrD,SAASC,aAAa,QAAQ,0BAA0B;AACxD,SAASC,+BAA+B,QAAQ,6CAA6C;AA2B7F;AACA;AACA;AACA,OAAO,IAAMC,SAAS,GAAG,SAAZA,SAAS,CAAIC,KAAqB,EAAK;EAClD,4BAAsBF,+BAA+B,EAAE;IAA/CG,SAAS,yBAATA,SAAS;EAEjBJ,aAAa,CAAC,CAAC,CAACG,KAAK,CAACE,WAAW,CAAC;EAElC,IAAMC,aAAa,GAAGF,SAAS,GAAGL,gBAAgB,GAAGD,cAAc;EAEnE,oBAAO,oBAAC,aAAa,EAAKK,KAAK,CAAI;AACrC,CAAC"}