{"version":3,"file":"types.js","names":[],"sources":["../../../src/components/BaseGallery/types.ts"],"sourcesContent":["import * as React from 'react';\nimport { HasAlign, HasRef, HasRootRef } from '../../types';\nimport { TouchEvent, TouchEventHandler } from '../Touch/Touch';\nimport { HorizontalScrollArrowProps } from '../HorizontalScroll/HorizontalScrollArrow';\n\nexport interface GallerySlidesState {\n  coordX: number;\n  width: number;\n}\n\nexport interface ShiftingState {\n  deltaX: number;\n  shiftX: number;\n  animation?: boolean;\n  dragging: boolean;\n}\n\nexport interface LayoutState {\n  containerWidth: number;\n  viewportOffsetWidth: number;\n  layerWidth: number;\n  min?: number;\n  max: number;\n  slides: GallerySlidesState[];\n  isFullyVisible: boolean;\n}\n\nexport interface BaseGalleryProps\n  extends Omit<React.HTMLAttributes<HTMLDivElement>, 'onChange' | 'onDragStart' | 'onDragEnd'>,\n    HasAlign,\n    HasRootRef<HTMLDivElement>,\n    HasRef<HTMLElement> {\n  slideWidth?: string | number;\n  slideIndex?: number;\n  onDragStart?: TouchEventHandler;\n  onDragEnd?(e: TouchEvent, targetIndex: number): void;\n  onChange?(current: number): void;\n  /**\n   * Будет вызвано при клике на кнопку-стрелку влево\n   */\n  onPrevClick?(event: React.MouseEvent): void;\n  /**\n   * Будет вызвано при клике на кнопку-стрелку вправо\n   */\n  onNextClick?(event: React.MouseEvent): void;\n  bullets?: 'dark' | 'light' | false;\n  isDraggable?: boolean;\n  showArrows?: boolean;\n  hasPointer?: boolean;\n  arrowSize?: HorizontalScrollArrowProps['size'];\n}\n"],"mappings":""}