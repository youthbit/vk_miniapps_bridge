import * as React from 'react';
export interface SnackbarProps extends React.HTMLAttributes<HTMLElement> {
    /**
     * Название кнопки действия в уведомлении
     * Не может использоваться одновременно с `subtitle`
     */
    action?: React.ReactNode;
    /**
     * Будет вызвано при клике на кнопку действия
     */
    onActionClick?: (e: React.MouseEvent) => void;
    /**
     * Цветная иконка 24x24 пикселя
     */
    before?: React.ReactNode;
    /**
     * Контент в правой части, может быть `<Avatar size={32} />`
     */
    after?: React.ReactNode;
    /**
     * Варианты расположения кнопки действия
     * Игнорируется на десктопах и при наличии элементов `after` или `subtitle`
     */
    layout?: 'vertical' | 'horizontal';
    /**
     * Время в миллисекундах, через которое плашка скроется
     */
    duration?: number;
    /**
     * Обработчик закрытия уведомления
     */
    onClose: () => void;
    /**
     * Задает стиль снекбара
     */
    mode?: 'default' | 'dark';
    /**
     * Дополнительная строка текста под `children`.
     * Не может использоваться одновременно с `action`
     */
    subtitle?: React.ReactNode;
}
/**
 * @see https://vkcom.github.io/VKUI/#/Snackbar
 */
export declare const Snackbar: ({ children, layout: layoutProps, action, before, after, duration, onActionClick, onClose, mode, className, subtitle, ...restProps }: SnackbarProps) => JSX.Element;
