/// <reference types="react" />
import { type ImageBaseProps, type ImageBaseOverlayProps } from '../ImageBase/ImageBase';
import { type AvatarBadgeProps } from './AvatarBadge/AvatarBadge';
import { type AvatarBadgeWithPresetProps } from './AvatarBadge/AvatarBadgeWithPreset';
export type { AvatarBadgeProps, AvatarBadgeWithPresetProps, ImageBaseOverlayProps as AvatarOverlayProps, };
export declare const AVATAR_DEFAULT_SIZE = 48;
declare const COLORS_NUMBER_TO_TEXT_MAP: {
    readonly 1: "red";
    readonly 2: "orange";
    readonly 3: "yellow";
    readonly 4: "green";
    readonly 5: "l-blue";
    readonly 6: "violet";
};
/**
 * Градиенты, которые можно использовать в алгоритме поиска градиентов по числовому идентификатору пользователя.
 * @example user.id % 6 + 1
 */
export declare type InitialsAvatarNumberGradients = keyof typeof COLORS_NUMBER_TO_TEXT_MAP;
export declare type InitialsAvatarTextGradients = (typeof COLORS_NUMBER_TO_TEXT_MAP)[InitialsAvatarNumberGradients] | 'blue';
export interface AvatarProps extends ImageBaseProps {
    /**
     * Инициалы пользователя.
     *
     * > Note: Если аватарка не прогрузится, то пользователь увидит инициалы.
     *
     * > ⚠️ Перебивает `fallbackIcon`.
     */
    initials?: string;
    /**
     * Задаёт градиент для фона.
     *
     * Если передано число, то оно будет сконвертировано в строчное представление цвета по следующей схеме:
     *
     * 1: 'red'
     * 2: 'orange'
     * 3: 'yellow'
     * 4: 'green'
     * 5: 'l-blue'
     * 6: 'violet'
     *
     * > Если необходимо задать свой градиент, то используйте значение `"custom"` и определите цвет градиента либо через
     * > свой класс в `className`, либо через `style={{ backgroundImage: "..." }}`.
     */
    gradientColor?: InitialsAvatarNumberGradients | InitialsAvatarTextGradients | 'custom';
}
/**
 * @see https://vkcom.github.io/VKUI/#/Avatar
 */
export declare const Avatar: {
    ({ size, className, gradientColor, initials, fallbackIcon, children, ...restProps }: AvatarProps): JSX.Element;
    Badge: ({ className, ...restProps }: import("../ImageBase/ImageBase").ImageBaseBadgeProps) => JSX.Element;
    BadgeWithPreset: ({ preset, ...restProps }: AvatarBadgeWithPresetProps) => JSX.Element;
    Overlay: ({ className, theme: themeProp, visibility: visibilityProp, children, onClick, ...restProps }: ImageBaseOverlayProps) => JSX.Element;
};
