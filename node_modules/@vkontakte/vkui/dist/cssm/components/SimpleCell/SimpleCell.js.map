{"version":3,"file":"SimpleCell.js","names":["React","classNames","hasReactNode","getPlatformClassName","Tappable","Icon24Chevron","Platform","usePlatform","useAdaptivity","Headline","Subhead","getSizeYClassName","SimpleCell","badgeBeforeTitle","badgeAfterTitle","badgeBeforeSubtitle","badgeAfterSubtitle","before","indicator","children","after","expandable","multiline","subhead","subtitle","extraSubtitle","className","restProps","platform","hasAfter","IOS","sizeY"],"sources":["../../../../src/components/SimpleCell/SimpleCell.tsx"],"sourcesContent":["import * as React from 'react';\nimport { HasComponent } from '../../types';\nimport { classNames, hasReactNode } from '@vkontakte/vkjs';\nimport { getPlatformClassName } from '../../helpers/getPlatformClassName';\nimport { TappableProps, Tappable } from '../Tappable/Tappable';\nimport { Icon24Chevron } from '@vkontakte/icons';\nimport { Platform } from '../../lib/platform';\nimport { usePlatform } from '../../hooks/usePlatform';\nimport { useAdaptivity } from '../../hooks/useAdaptivity';\nimport { Headline } from '../Typography/Headline/Headline';\nimport { Subhead } from '../Typography/Subhead/Subhead';\nimport { getSizeYClassName } from '../../helpers/getSizeYClassName';\nimport styles from './SimpleCell.module.css';\n\nexport interface SimpleCellOwnProps extends HasComponent {\n  /**\n   * Иконка 28 или `<Avatar size={28|32|40|48|72} />`\n   */\n  before?: React.ReactNode;\n  /**\n   * Иконка 12 или `<Badge />`. Добавится слева от текста `children`.\n   */\n  badgeBeforeTitle?: React.ReactNode;\n  /**\n   * Иконка 12 или `<Badge />`. Добавится справа от текста `children`.\n   */\n  badgeAfterTitle?: React.ReactNode;\n  /**\n   * Иконка 12. Добавится слева от текста `subtitle`.\n   */\n  badgeBeforeSubtitle?: React.ReactNode;\n  /**\n   * Иконка 12. Добавится справа от текста `subtitle`.\n   */\n  badgeAfterSubtitle?: React.ReactNode;\n  /**\n   * Контейнер для текста справа от `children`.\n   */\n  indicator?: React.ReactNode;\n  /**\n   * Дополнительная строка текста над `children`.\n   */\n  subhead?: React.ReactNode;\n  /**\n   * Дополнительная строка текста под `children`.\n   */\n  subtitle?: React.ReactNode;\n  /**\n   * Дополнительная строка текста под `children` и `subtitle`.\n   */\n  extraSubtitle?: React.ReactNode;\n  /**\n   * Иконка 24|28 или `<Switch />`. Располагается справа от `indicator`.\n   */\n  after?: React.ReactNode;\n  /**\n   * Убирает анимацию нажатия\n   */\n  disabled?: boolean;\n  /**\n   * В iOS добавляет chevron справа. Передавать `true`, если предполагается переход при клике по ячейке.\n   */\n  expandable?: boolean;\n  /**\n   * Включает многострочный режим для отображения текста\n   */\n  multiline?: boolean;\n}\n\nexport interface SimpleCellProps extends SimpleCellOwnProps, TappableProps {}\n\n/**\n * @see https://vkcom.github.io/VKUI/#/SimpleCell\n */\nexport const SimpleCell = ({\n  badgeBeforeTitle,\n  badgeAfterTitle,\n  badgeBeforeSubtitle,\n  badgeAfterSubtitle,\n  before,\n  indicator,\n  children,\n  after,\n  expandable,\n  multiline,\n  subhead,\n  subtitle,\n  extraSubtitle,\n  className,\n  ...restProps\n}: SimpleCellProps) => {\n  const platform = usePlatform();\n  const hasAfter = hasReactNode(after) || (expandable && platform === Platform.IOS);\n  const { sizeY } = useAdaptivity();\n\n  return (\n    <Tappable\n      {...restProps}\n      className={classNames(\n        styles['SimpleCell'],\n        getPlatformClassName(styles['SimpleCell'], platform),\n        getSizeYClassName(styles['SimpleCell'], sizeY),\n        expandable && styles['SimpleCell--exp'],\n        multiline && styles['SimpleCell--mult'],\n        className,\n      )}\n    >\n      {before}\n      <div className={styles['SimpleCell__main']}>\n        {subhead && (\n          <Subhead\n            Component=\"span\"\n            className={classNames(styles['SimpleCell__text'], styles['SimpleCell__subhead'])}\n          >\n            {subhead}\n          </Subhead>\n        )}\n        <div className={styles['SimpleCell__content']}>\n          {badgeBeforeTitle && (\n            <span className={styles['SimpleCell__badge']}>{badgeBeforeTitle}</span>\n          )}\n          <Headline Component=\"span\" className={styles['SimpleCell__children']} weight=\"3\">\n            {children}\n          </Headline>\n          {hasReactNode(badgeAfterTitle) && (\n            <span className={styles['SimpleCell__badge']}>{badgeAfterTitle}</span>\n          )}\n        </div>\n        {subtitle && (\n          <div className={styles['SimpleCell__content']}>\n            {badgeBeforeSubtitle && (\n              <span className={styles['SimpleCell__badge']}>{badgeBeforeSubtitle}</span>\n            )}\n            <span\n              className={classNames(\n                styles['SimpleCell__typography'],\n                styles['SimpleCell__text'],\n                styles['SimpleCell__subtitle'],\n              )}\n            >\n              {subtitle}\n            </span>\n            {badgeAfterSubtitle && (\n              <span className={styles['SimpleCell__badge']}>{badgeAfterSubtitle}</span>\n            )}\n          </div>\n        )}\n        {extraSubtitle && (\n          <span\n            className={classNames(\n              styles['SimpleCell__typography'],\n              styles['SimpleCell__text'],\n              styles['SimpleCell__extraSubtitle'],\n            )}\n          >\n            {extraSubtitle}\n          </span>\n        )}\n      </div>\n      {hasReactNode(indicator) && (\n        <Headline Component=\"span\" weight=\"3\" className={styles['SimpleCell__indicator']}>\n          {indicator}\n        </Headline>\n      )}\n      {hasAfter && (\n        <div className={styles['SimpleCell__after']}>\n          {after}\n          {expandable && platform === Platform.IOS && <Icon24Chevron />}\n        </div>\n      )}\n    </Tappable>\n  );\n};\n"],"mappings":";;;AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAE9B,SAASC,UAAU,EAAEC,YAAY,QAAQ,iBAAiB;AAC1D,SAASC,oBAAoB,QAAQ,oCAAoC;AACzE,SAAwBC,QAAQ,QAAQ,sBAAsB;AAC9D,SAASC,aAAa,QAAQ,kBAAkB;AAChD,SAASC,QAAQ,QAAQ,oBAAoB;AAC7C,SAASC,WAAW,QAAQ,yBAAyB;AACrD,SAASC,aAAa,QAAQ,2BAA2B;AACzD,SAASC,QAAQ,QAAQ,iCAAiC;AAC1D,SAASC,OAAO,QAAQ,+BAA+B;AACvD,SAASC,iBAAiB,QAAQ,iCAAiC;AAAC;AA4DpE;AACA;AACA;AACA,OAAO,IAAMC,UAAU,GAAG,SAAbA,UAAU,OAgBA;EAAA,IAfrBC,gBAAgB,QAAhBA,gBAAgB;IAChBC,eAAe,QAAfA,eAAe;IACfC,mBAAmB,QAAnBA,mBAAmB;IACnBC,kBAAkB,QAAlBA,kBAAkB;IAClBC,MAAM,QAANA,MAAM;IACNC,SAAS,QAATA,SAAS;IACTC,QAAQ,QAARA,QAAQ;IACRC,KAAK,QAALA,KAAK;IACLC,UAAU,QAAVA,UAAU;IACVC,SAAS,QAATA,SAAS;IACTC,OAAO,QAAPA,OAAO;IACPC,QAAQ,QAARA,QAAQ;IACRC,aAAa,QAAbA,aAAa;IACbC,SAAS,QAATA,SAAS;IACNC,SAAS;EAEZ,IAAMC,QAAQ,GAAGrB,WAAW,EAAE;EAC9B,IAAMsB,QAAQ,GAAG3B,YAAY,CAACkB,KAAK,CAAC,IAAKC,UAAU,IAAIO,QAAQ,KAAKtB,QAAQ,CAACwB,GAAI;EACjF,qBAAkBtB,aAAa,EAAE;IAAzBuB,KAAK,kBAALA,KAAK;EAEb,oBACE,oBAAC,QAAQ,eACHJ,SAAS;IACb,SAAS,EAAE1B,UAAU,mBAEnBE,oBAAoB,mBAAuByB,QAAQ,CAAC,EACpDjB,iBAAiB,mBAAuBoB,KAAK,CAAC,EAC9CV,UAAU,yBAA6B,EACvCC,SAAS,0BAA8B,EACvCI,SAAS;EACT,IAEDT,MAAM,eACP;IAAK,SAAS;EAA6B,GACxCM,OAAO,iBACN,oBAAC,OAAO;IACN,SAAS,EAAC,MAAM;IAChB,SAAS,EAAEtB,UAAU;EAA4D,GAEhFsB,OAAO,CAEX,eACD;IAAK,SAAS;EAAgC,GAC3CV,gBAAgB,iBACf;IAAM,SAAS;EAA8B,GAAEA,gBAAgB,CAChE,eACD,oBAAC,QAAQ;IAAC,SAAS,EAAC,MAAM;IAAC,SAAS,4BAAiC;IAAC,MAAM,EAAC;EAAG,GAC7EM,QAAQ,CACA,EACVjB,YAAY,CAACY,eAAe,CAAC,iBAC5B;IAAM,SAAS;EAA8B,GAAEA,eAAe,CAC/D,CACG,EACLU,QAAQ,iBACP;IAAK,SAAS;EAAgC,GAC3CT,mBAAmB,iBAClB;IAAM,SAAS;EAA8B,GAAEA,mBAAmB,CACnE,eACD;IACE,SAAS,EAAEd,UAAU;EAInB,GAEDuB,QAAQ,CACJ,EACNR,kBAAkB,iBACjB;IAAM,SAAS;EAA8B,GAAEA,kBAAkB,CAClE,CAEJ,EACAS,aAAa,iBACZ;IACE,SAAS,EAAExB,UAAU;EAInB,GAEDwB,aAAa,CAEjB,CACG,EACLvB,YAAY,CAACgB,SAAS,CAAC,iBACtB,oBAAC,QAAQ;IAAC,SAAS,EAAC,MAAM;IAAC,MAAM,EAAC,GAAG;IAAC,SAAS;EAAkC,GAC9EA,SAAS,CAEb,EACAW,QAAQ,iBACP;IAAK,SAAS;EAA8B,GACzCT,KAAK,EACLC,UAAU,IAAIO,QAAQ,KAAKtB,QAAQ,CAACwB,GAAG,iBAAI,oBAAC,aAAa,OAAG,CAEhE,CACQ;AAEf,CAAC"}