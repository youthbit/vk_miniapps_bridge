{"version":3,"file":"useAdaptivityHasPointer.js","names":["React","hasMouse","hasPointerLib","AdaptivityContext","useIsClient","useAdaptivityHasPointer","deferDetect","useContext","hasPointerContext","hasPointer","undefined","isClient"],"sources":["../../../src/hooks/useAdaptivityHasPointer.ts"],"sourcesContent":["import * as React from 'react';\nimport { hasMouse as hasPointerLib } from '@vkontakte/vkjs';\nimport { AdaptivityContext } from '../components/AdaptivityProvider/AdaptivityContext';\nimport { useIsClient } from './useIsClient';\n\n/**\n * Определение происходит с помощью `window.matchMedia`. Для того, чтобы не было ошибок при гидратации, по умолчанию\n * откладываем определение на второй рендер.\n *\n * [No SSR] Если передать `false`, то определение будет сразу.\n */\nexport function useAdaptivityHasPointer(deferDetect?: true): undefined | boolean; // prettier-ignore\nexport function useAdaptivityHasPointer(deferDetect?: false): boolean;\nexport function useAdaptivityHasPointer(deferDetect = true): undefined | boolean {\n  const { hasPointer: hasPointerContext } = React.useContext(AdaptivityContext);\n  const hasPointer = hasPointerContext === undefined ? hasPointerLib : hasPointerContext;\n\n  const isClient = useIsClient(!deferDetect);\n  if (!isClient) {\n    return undefined;\n  }\n\n  return hasPointer;\n}\n"],"mappings":"AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,SAASC,QAAQ,IAAIC,aAAa,QAAQ,iBAAiB;AAC3D,SAASC,iBAAiB,QAAQ,oDAAoD;AACtF,SAASC,WAAW,QAAQ,eAAe;;AAE3C;AACA;AACA;AACA;AACA;AACA;;AAGA,OAAO,SAASC,uBAAuB,GAA0C;EAAA,IAAzCC,WAAW,uEAAG,IAAI;EACxD,wBAA0CN,KAAK,CAACO,UAAU,CAACJ,iBAAiB,CAAC;IAAzDK,iBAAiB,qBAA7BC,UAAU;EAClB,IAAMA,UAAU,GAAGD,iBAAiB,KAAKE,SAAS,GAAGR,aAAa,GAAGM,iBAAiB;EAEtF,IAAMG,QAAQ,GAAGP,WAAW,CAAC,CAACE,WAAW,CAAC;EAC1C,IAAI,CAACK,QAAQ,EAAE;IACb,OAAOD,SAAS;EAClB;EAEA,OAAOD,UAAU;AACnB"}