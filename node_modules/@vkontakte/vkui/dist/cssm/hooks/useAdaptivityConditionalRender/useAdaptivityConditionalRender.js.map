{"version":3,"file":"useAdaptivityConditionalRender.js","names":["React","AdaptivityContext","usePlatform","sizeXCompactClassNames","sizeXRegularClassNames","sizeYCompactClassNames","sizeYRegularClassNames","viewWidthClassNames","deviceTypeClassNames","getAdaptiveSizeType","getAdaptiveViewWidth","getAdaptiveDeviceType","useAdaptivityConditionalRender","useContext","sizeXContext","sizeX","sizeYContext","sizeY","viewWidthContext","viewWidth","viewHeightContext","viewHeight","hasPointerContext","hasPointer","platform","useMemo","deviceType"],"sources":["../../../../src/hooks/useAdaptivityConditionalRender/useAdaptivityConditionalRender.tsx"],"sourcesContent":["import * as React from 'react';\nimport { AdaptivityContext } from '../../components/AdaptivityProvider/AdaptivityContext';\nimport { usePlatform } from '../usePlatform';\nimport type { UseAdaptivityConditionalRender } from './types';\nimport {\n  sizeXCompactClassNames,\n  sizeXRegularClassNames,\n  sizeYCompactClassNames,\n  sizeYRegularClassNames,\n  viewWidthClassNames,\n  deviceTypeClassNames,\n} from './constants';\nimport { getAdaptiveSizeType, getAdaptiveViewWidth, getAdaptiveDeviceType } from './helpers';\n\nexport const useAdaptivityConditionalRender = (): UseAdaptivityConditionalRender => {\n  const {\n    sizeX: sizeXContext,\n    sizeY: sizeYContext,\n    viewWidth: viewWidthContext,\n    viewHeight: viewHeightContext,\n    hasPointer: hasPointerContext,\n  } = React.useContext(AdaptivityContext);\n  const platform = usePlatform();\n\n  return React.useMemo(() => {\n    const sizeX = getAdaptiveSizeType(sizeXContext, sizeXCompactClassNames, sizeXRegularClassNames);\n    const sizeY = getAdaptiveSizeType(sizeYContext, sizeYCompactClassNames, sizeYRegularClassNames);\n    const viewWidth = getAdaptiveViewWidth(viewWidthContext, viewWidthClassNames);\n    const deviceType = getAdaptiveDeviceType(\n      viewWidthContext,\n      viewHeightContext,\n      hasPointerContext,\n      platform,\n      deviceTypeClassNames,\n    );\n    return {\n      sizeX,\n      sizeY,\n      viewWidth,\n      deviceType,\n    };\n  }, [\n    sizeXContext,\n    sizeYContext,\n    viewWidthContext,\n    viewHeightContext,\n    hasPointerContext,\n    platform,\n  ]);\n};\n"],"mappings":"AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,SAASC,iBAAiB,QAAQ,uDAAuD;AACzF,SAASC,WAAW,QAAQ,gBAAgB;AAE5C,SACEC,sBAAsB,EACtBC,sBAAsB,EACtBC,sBAAsB,EACtBC,sBAAsB,EACtBC,mBAAmB,EACnBC,oBAAoB,QACf,aAAa;AACpB,SAASC,mBAAmB,EAAEC,oBAAoB,EAAEC,qBAAqB,QAAQ,WAAW;AAE5F,OAAO,IAAMC,8BAA8B,GAAG,SAAjCA,8BAA8B,GAAyC;EAClF,wBAMIZ,KAAK,CAACa,UAAU,CAACZ,iBAAiB,CAAC;IAL9Ba,YAAY,qBAAnBC,KAAK;IACEC,YAAY,qBAAnBC,KAAK;IACMC,gBAAgB,qBAA3BC,SAAS;IACGC,iBAAiB,qBAA7BC,UAAU;IACEC,iBAAiB,qBAA7BC,UAAU;EAEZ,IAAMC,QAAQ,GAAGtB,WAAW,EAAE;EAE9B,OAAOF,KAAK,CAACyB,OAAO,CAAC,YAAM;IACzB,IAAMV,KAAK,GAAGN,mBAAmB,CAACK,YAAY,EAAEX,sBAAsB,EAAEC,sBAAsB,CAAC;IAC/F,IAAMa,KAAK,GAAGR,mBAAmB,CAACO,YAAY,EAAEX,sBAAsB,EAAEC,sBAAsB,CAAC;IAC/F,IAAMa,SAAS,GAAGT,oBAAoB,CAACQ,gBAAgB,EAAEX,mBAAmB,CAAC;IAC7E,IAAMmB,UAAU,GAAGf,qBAAqB,CACtCO,gBAAgB,EAChBE,iBAAiB,EACjBE,iBAAiB,EACjBE,QAAQ,EACRhB,oBAAoB,CACrB;IACD,OAAO;MACLO,KAAK,EAALA,KAAK;MACLE,KAAK,EAALA,KAAK;MACLE,SAAS,EAATA,SAAS;MACTO,UAAU,EAAVA;IACF,CAAC;EACH,CAAC,EAAE,CACDZ,YAAY,EACZE,YAAY,EACZE,gBAAgB,EAChBE,iBAAiB,EACjBE,iBAAiB,EACjBE,QAAQ,CACT,CAAC;AACJ,CAAC"}