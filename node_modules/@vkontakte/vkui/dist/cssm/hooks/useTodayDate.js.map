{"version":3,"file":"useTodayDate.js","names":["React","getMillisecondsToTomorrow","useTodayDate","listenDayChangesForUpdate","useState","Date","todayDate","setTodayDate","useEffect","timeToDayChange","timeout","setTimeout","clearTimeout"],"sources":["../../../src/hooks/useTodayDate.ts"],"sourcesContent":["import React from 'react';\n\nimport { getMillisecondsToTomorrow } from '../lib/date';\n\n/**\n * Опционально обновляемая дата сегодняшнего дня\n *\n * Дата - сегодня (в соответствии с системным временем)\n *\n * Часы, минуты, секунды, миллисекунды - произвольные\n *\n * @param listenDayChangesForUpdate - флаг по которому определяется, будет ли создаваться подписка на смену календарного дня\n */\nexport function useTodayDate(listenDayChangesForUpdate = false) {\n  const [todayDate, setTodayDate] = React.useState(() => new Date());\n\n  React.useEffect(() => {\n    if (!listenDayChangesForUpdate) {\n      return;\n    }\n\n    const timeToDayChange = getMillisecondsToTomorrow(todayDate);\n\n    const timeout = setTimeout(() => {\n      setTodayDate(new Date());\n    }, timeToDayChange);\n\n    return () => {\n      clearTimeout(timeout);\n    };\n  }, [listenDayChangesForUpdate, todayDate]);\n\n  return todayDate;\n}\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,SAASC,yBAAyB,QAAQ,aAAa;;AAEvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASC,YAAY,GAAoC;EAAA,IAAnCC,yBAAyB,uEAAG,KAAK;EAC5D,sBAAkCH,KAAK,CAACI,QAAQ,CAAC;MAAA,OAAM,IAAIC,IAAI,EAAE;IAAA,EAAC;IAAA;IAA3DC,SAAS;IAAEC,YAAY;EAE9BP,KAAK,CAACQ,SAAS,CAAC,YAAM;IACpB,IAAI,CAACL,yBAAyB,EAAE;MAC9B;IACF;IAEA,IAAMM,eAAe,GAAGR,yBAAyB,CAACK,SAAS,CAAC;IAE5D,IAAMI,OAAO,GAAGC,UAAU,CAAC,YAAM;MAC/BJ,YAAY,CAAC,IAAIF,IAAI,EAAE,CAAC;IAC1B,CAAC,EAAEI,eAAe,CAAC;IAEnB,OAAO,YAAM;MACXG,YAAY,CAACF,OAAO,CAAC;IACvB,CAAC;EACH,CAAC,EAAE,CAACP,yBAAyB,EAAEG,SAAS,CAAC,CAAC;EAE1C,OAAOA,SAAS;AAClB"}