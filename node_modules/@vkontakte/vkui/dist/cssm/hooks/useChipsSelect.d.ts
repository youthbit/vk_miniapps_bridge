import * as React from 'react';
import { ChipsSelectProps } from '../components/ChipsSelect/ChipsSelect';
import { ChipOption } from '../components/Chip/Chip';
export declare const useChipsSelect: <Option extends ChipOption>(props: Partial<ChipsSelectProps<Option>>) => {
    fieldValue: string | undefined;
    handleInputChange: (e: React.ChangeEvent<HTMLInputElement> | undefined) => void;
    opened: boolean;
    setOpened: React.Dispatch<React.SetStateAction<boolean>>;
    filteredOptions: Option[];
    focusedOptionIndex: number | null;
    setFocusedOptionIndex: React.Dispatch<React.SetStateAction<number | null>>;
    focusedOption: Option | null;
    setFocusedOption: React.Dispatch<React.SetStateAction<Option | null>>;
    selectedOptions: Option[];
    setFieldValue: React.Dispatch<React.SetStateAction<string | undefined>>;
    setSelectedOptions: React.Dispatch<React.SetStateAction<Option[]>>;
    clearInput: () => void;
    toggleOption: (newOption: Option, value?: boolean | undefined) => void;
    addOption: (newOption: Option) => void;
    addOptionFromInput: () => void;
    removeOption: (value: any) => void;
};
