{"version":3,"file":"useFocusVisible.js","names":["useContext","useState","useCallback","AppRootContext","useFocusVisible","isFocused","setIsFocused","keyboardInput","onFocus","event","stopPropagation","onBlur","focusVisible"],"sources":["../../../src/hooks/useFocusVisible.ts"],"sourcesContent":["import { useContext, useState, useCallback, FocusEvent } from 'react';\nimport { AppRootContext } from '../components/AppRoot/AppRootContext';\n\nexport function useFocusVisible() {\n  const [isFocused, setIsFocused] = useState(false);\n  const { keyboardInput } = useContext(AppRootContext);\n\n  const onFocus = useCallback(\n    (event: FocusEvent<HTMLElement>) => {\n      event.stopPropagation();\n      setIsFocused(true);\n    },\n    [setIsFocused],\n  );\n\n  const onBlur = useCallback(\n    (event: FocusEvent<HTMLElement>) => {\n      event.stopPropagation();\n      setIsFocused(false);\n    },\n    [setIsFocused],\n  );\n\n  const focusVisible = keyboardInput && isFocused;\n\n  return {\n    focusVisible,\n    onFocus,\n    onBlur,\n  };\n}\n"],"mappings":";AAAA,SAASA,UAAU,EAAEC,QAAQ,EAAEC,WAAW,QAAoB,OAAO;AACrE,SAASC,cAAc,QAAQ,sCAAsC;AAErE,OAAO,SAASC,eAAe,GAAG;EAChC,gBAAkCH,QAAQ,CAAC,KAAK,CAAC;IAAA;IAA1CI,SAAS;IAAEC,YAAY;EAC9B,kBAA0BN,UAAU,CAACG,cAAc,CAAC;IAA5CI,aAAa,eAAbA,aAAa;EAErB,IAAMC,OAAO,GAAGN,WAAW,CACzB,UAACO,KAA8B,EAAK;IAClCA,KAAK,CAACC,eAAe,EAAE;IACvBJ,YAAY,CAAC,IAAI,CAAC;EACpB,CAAC,EACD,CAACA,YAAY,CAAC,CACf;EAED,IAAMK,MAAM,GAAGT,WAAW,CACxB,UAACO,KAA8B,EAAK;IAClCA,KAAK,CAACC,eAAe,EAAE;IACvBJ,YAAY,CAAC,KAAK,CAAC;EACrB,CAAC,EACD,CAACA,YAAY,CAAC,CACf;EAED,IAAMM,YAAY,GAAGL,aAAa,IAAIF,SAAS;EAE/C,OAAO;IACLO,YAAY,EAAZA,YAAY;IACZJ,OAAO,EAAPA,OAAO;IACPG,MAAM,EAANA;EACF,CAAC;AACH"}