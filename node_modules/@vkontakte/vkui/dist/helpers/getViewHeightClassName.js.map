{"version":3,"file":"getViewHeightClassName.js","names":["ViewHeight","getViewHeightClassName","base","viewHeight","styles","className","String","EXTRA_SMALL","SMALL","MEDIUM"],"sources":["../../src/helpers/getViewHeightClassName.ts"],"sourcesContent":["import { ViewHeight } from '../lib/adaptivity';\n\nexport function getViewHeightClassName(base: string, viewHeight?: ViewHeight): string;\nexport function getViewHeightClassName<Styles extends Record<string, string>>(\n  base: keyof Styles,\n  viewHeight?: ViewHeight,\n  styles?: Styles,\n): string | undefined;\nexport function getViewHeightClassName<Styles extends Record<string, string>>(\n  base: keyof Styles,\n  viewHeight?: ViewHeight,\n  /**\n   * Note: ввиду того, что Typescript не поддерживает `typescript-plugin-css-modules` во время компиляции,\n   *  не удалось покрыть дженерик типом параметр `styles`. Поэтому может вернуться undefined.\n   */\n  styles?: Styles,\n): string | undefined {\n  let className = `${String(base)}--viewHeight-`;\n\n  switch (viewHeight) {\n    case ViewHeight.EXTRA_SMALL:\n      className += 'extraSmall';\n      break;\n    case ViewHeight.SMALL:\n      className += 'small';\n      break;\n    case ViewHeight.MEDIUM:\n      className += 'medium';\n      break;\n\n    default:\n      className += 'none';\n      break;\n  }\n\n  return styles ? styles[className] : className;\n}\n"],"mappings":"AAAA,SAASA,UAAU,QAAQ,mBAAmB;AAQ9C,OAAO,SAASC,sBAAsB,CACpCC,IAAkB,EAClBC,UAAuB;AACvB;AACF;AACA;AACA;AACEC,MAAe,EACK;EACpB,IAAIC,SAAS,aAAMC,MAAM,CAACJ,IAAI,CAAC,kBAAe;EAE9C,QAAQC,UAAU;IAChB,KAAKH,UAAU,CAACO,WAAW;MACzBF,SAAS,IAAI,YAAY;MACzB;IACF,KAAKL,UAAU,CAACQ,KAAK;MACnBH,SAAS,IAAI,OAAO;MACpB;IACF,KAAKL,UAAU,CAACS,MAAM;MACpBJ,SAAS,IAAI,QAAQ;MACrB;IAEF;MACEA,SAAS,IAAI,MAAM;MACnB;EAAM;EAGV,OAAOD,MAAM,GAAGA,MAAM,CAACC,SAAS,CAAC,GAAGA,SAAS;AAC/C"}