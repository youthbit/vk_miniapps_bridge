{"version":3,"file":"replacer.js","names":["Replacer","map","regexp","groups","Object","keys","escapeRegExp","sort","a","b","length","pattern","join","RegExp","string","build","replace","substring"],"sources":["../../src/lib/replacer.ts"],"sourcesContent":["import { escapeRegExp } from '../regexp';\n\nexport class Replacer {\n  private regexp: RegExp | undefined;\n  private map: Record<string, string>;\n\n  constructor(map: Record<string, string>) {\n    this.map = map;\n  }\n\n  private build() {\n    if (this.regexp) {\n      return;\n    }\n\n    const groups = Object.keys(this.map)\n      .map(escapeRegExp)\n      .sort((a, b) => b.length - a.length);\n    const pattern = `(?:${groups.join('|')})`;\n\n    this.regexp = new RegExp(pattern, 'g');\n  }\n\n  replace(string: string) {\n    if (!string) {\n      return '';\n    }\n\n    this.build();\n\n    return string.replace(this.regexp!, (substring) => this.map[substring]);\n  }\n}\n"],"mappings":";;;;;;;;;;AAAA;AAAyC,IAE5BA,QAAQ;EAInB,kBAAYC,GAA2B,EAAE;IAAA;IAAA;IAAA;IACvC,IAAI,CAACA,GAAG,GAAGA,GAAG;EAChB;EAAC;IAAA;IAAA,OAED,iBAAgB;MACd,IAAI,IAAI,CAACC,MAAM,EAAE;QACf;MACF;MAEA,IAAMC,MAAM,GAAGC,MAAM,CAACC,IAAI,CAAC,IAAI,CAACJ,GAAG,CAAC,CACjCA,GAAG,CAACK,oBAAY,CAAC,CACjBC,IAAI,CAAC,UAACC,CAAC,EAAEC,CAAC;QAAA,OAAKA,CAAC,CAACC,MAAM,GAAGF,CAAC,CAACE,MAAM;MAAA,EAAC;MACtC,IAAMC,OAAO,gBAASR,MAAM,CAACS,IAAI,CAAC,GAAG,CAAC,MAAG;MAEzC,IAAI,CAACV,MAAM,GAAG,IAAIW,MAAM,CAACF,OAAO,EAAE,GAAG,CAAC;IACxC;EAAC;IAAA;IAAA,OAED,iBAAQG,MAAc,EAAE;MAAA;MACtB,IAAI,CAACA,MAAM,EAAE;QACX,OAAO,EAAE;MACX;MAEA,IAAI,CAACC,KAAK,EAAE;MAEZ,OAAOD,MAAM,CAACE,OAAO,CAAC,IAAI,CAACd,MAAM,EAAG,UAACe,SAAS;QAAA,OAAK,KAAI,CAAChB,GAAG,CAACgB,SAAS,CAAC;MAAA,EAAC;IACzE;EAAC;EAAA;AAAA;AAAA"}