{"version":3,"file":"escape.js","names":["Replacer","fromCodePoint","getCodePointAt","numericUnicodeMap","buildFullNamedEntities","fullNamedEntities","escapeReplacer","unescapeReplacer","namedEntities","escape","input","replace","unescape","outOfBoundsChar","String","fromCharCode","ENCODE_REGEX","encodeHTMLEntities","entity","code","length","charCodeAt","DECODE_REGEX","decodeString","entities","secondChar","charAt","parseInt","substr","toLowerCase","slice","decodeHTMLEntitiesDeep","decodeHTMLEntities","correctType","Object","prototype","toString","apply","map","item","response","keys","forEach","decodeHTMLFullEntities"],"sources":["../../../src/html/escape.ts"],"sourcesContent":["/* eslint-disable @typescript-eslint/quotes */\nimport { Replacer } from '../lib/replacer';\nimport { fromCodePoint, getCodePointAt, numericUnicodeMap } from '../lib/codepoints';\nimport { Dictionary } from '../types';\nimport { buildFullNamedEntities, fullNamedEntities } from './entity';\n\nconst escapeReplacer = /*#__PURE__*/ new Replacer({\n  '&': '&amp;',\n  '<': '&lt;',\n  '>': '&gt;',\n  \"'\": '&#39;',\n  '\"': '&quot;',\n});\n\nconst unescapeReplacer = /*#__PURE__*/ new Replacer({\n  '&amp;': '&',\n  '&#38;': '&',\n  '&lt;': '<',\n  '&#60;': '<',\n  '&gt;': '>',\n  '&#62;': '>',\n  '&apos;': \"'\",\n  '&#39;': \"'\",\n  '&quot;': '\"',\n  '&#34;': '\"',\n});\n\nconst namedEntities: Record<string, string> = {\n  'amp;': '&',\n  'lt;': '<',\n  'gt;': '>',\n  'quot;': '\"',\n  'apos;': `'`,\n};\n\n/**\n * Safely escape HTML entities such as `&`, `<`, `>`, `\"`, and `'`\n * @param {string} input\n */\nexport function escape(input: string): string {\n  return escapeReplacer.replace(input);\n}\n\n/**\n * Unescape HTML entities such as `&`, `<`, `>`, `\"`, and `'`\n * @param {string} input\n */\nexport function unescape(input: string): string {\n  return unescapeReplacer.replace(input);\n}\n\nexport const outOfBoundsChar = /*#__PURE__*/ String.fromCharCode(65533);\n\nconst ENCODE_REGEX =\n  /(?:[<>'\"&\\x01-\\x08\\x11-\\x15\\x17-\\x1F\\x7f-\\uD7FF\\uE000-\\uFFFF]|[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]|[\\uD800-\\uDBFF](?![\\uDC00-\\uDFFF])|(?:[^\\uD800-\\uDBFF]|^)[\\uDC00-\\uDFFF])/g;\n\nexport function encodeHTMLEntities(input: string): string {\n  if (input == null) {\n    return '';\n  }\n\n  return input.replace(ENCODE_REGEX, (entity) => {\n    const code = entity.length > 1 ? getCodePointAt(entity, 0) : entity.charCodeAt(0);\n    return '&#' + String(code) + ';';\n  });\n}\n\nconst DECODE_REGEX = /&(?:#\\d+|#[xX][\\da-fA-F]+|[0-9a-zA-Z]+);?/g;\n\nfunction decodeString(input: string, entities: Record<string, string>): string {\n  if (typeof input !== 'string' || !input) {\n    return '';\n  }\n\n  return input.replace(DECODE_REGEX, (entity) => {\n    if (entity[1] === '#') {\n      // We need to have at least \"&#.\".\n      if (entity.length <= 3) {\n        return entity;\n      }\n\n      const secondChar = entity.charAt(2);\n      const code =\n        secondChar === 'x' || secondChar === 'X'\n          ? parseInt(entity.substr(3).toLowerCase(), 16)\n          : parseInt(entity.substr(2));\n\n      if (code >= 0x10ffff) {\n        return outOfBoundsChar;\n      }\n\n      if (code > 65535) {\n        return fromCodePoint(code);\n      }\n\n      return String.fromCharCode(numericUnicodeMap[code] || code);\n    }\n\n    return entities[entity.slice(1)] || entity;\n  });\n}\n\nexport function decodeHTMLEntitiesDeep<T>(input: T): T {\n  if (typeof input === 'string') {\n    return decodeHTMLEntities(input) as unknown as T;\n  }\n\n  if (typeof input === 'object') {\n    const correctType = Object.prototype.toString.apply(input);\n\n    if (correctType === '[object Array]') {\n      return (input as unknown[]).map((item) => {\n        return decodeHTMLEntitiesDeep(item);\n      }) as T;\n    }\n\n    if (correctType === '[object Object]') {\n      const response: Dictionary<unknown> = {};\n      Object.keys(input as Dictionary<unknown>).forEach((item) => {\n        response[decodeHTMLEntities(item)] = decodeHTMLEntitiesDeep(\n          (input as Dictionary<unknown>)[item],\n        );\n      });\n\n      return response as unknown as T;\n    }\n  }\n\n  return input;\n}\n\n/**\n * `decodeHTMLEntities` декодирует зарезервированные HTML-сущности.\n *\n * Если нужна возможность декодировать все сущности, используйте\n * {@link decodeHTMLFullEntities}\n *\n * @param input текст который необходимо декодировать\n * @param entities кастомный словарь сущностей `{'lt;': '<'}`\n */\nexport function decodeHTMLEntities(input: string, entities = namedEntities): string {\n  return decodeString(input, entities);\n}\n\n/**\n * `decodeHTMLFullEntities` декодирует все HTML-сущности.\n *\n * Если вам нужно декодировать не все сущности, используйте\n * {@link decodeHTMLEntities} и кастомный словарь.\n *\n * @param input текст который необходимо декодировать\n */\nexport function decodeHTMLFullEntities(input: string): string {\n  buildFullNamedEntities();\n\n  return decodeString(input, fullNamedEntities);\n}\n"],"mappings":"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"}