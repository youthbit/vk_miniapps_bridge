{"version":3,"file":"react_utils.test.js","names":["createElement","expect","test","describe","hasReactNode","isPrimitiveReactNode","undefined","toBeFalsy","toBeTruthy"],"sources":["../../../src/__tests__/react_utils.test.ts"],"sourcesContent":["import { createElement } from 'react';\nimport { expect, test, describe } from '@jest/globals';\nimport { hasReactNode, isPrimitiveReactNode } from '../react_utils';\n\ndescribe(hasReactNode, () => {\n  describe('return false cases', () => {\n    test('should be false for value is undefined', () => {\n      expect(hasReactNode(undefined)).toBeFalsy();\n    });\n\n    test('should be false for value is null', () => {\n      expect(hasReactNode(null)).toBeFalsy();\n    });\n\n    test('should be false for value is false', () => {\n      expect(hasReactNode(false)).toBeFalsy();\n    });\n\n    test('should be false for value is empty string', () => {\n      expect(hasReactNode('')).toBeFalsy();\n    });\n  });\n\n  describe('return true cases', () => {\n    test('should be true for value is zero', () => {\n      expect(hasReactNode(0)).toBeTruthy();\n    });\n\n    test('should be true for value is not empty string', () => {\n      expect(hasReactNode(' ')).toBeTruthy();\n    });\n\n    test('should be true for value is react element', () => {\n      expect(hasReactNode(createElement('div'))).toBeTruthy();\n    });\n  });\n});\n\ndescribe(isPrimitiveReactNode, () => {\n  describe('return false cases', () => {\n    test('should be false for value is boolean', () => {\n      expect(isPrimitiveReactNode(false)).toBeFalsy();\n    });\n\n    test('should be false for value is react element', () => {\n      expect(isPrimitiveReactNode(createElement('div'))).toBeFalsy();\n    });\n  });\n\n  describe('return true cases', () => {\n    test('should be false for value is undefined', () => {\n      expect(isPrimitiveReactNode('')).toBeTruthy();\n    });\n\n    test('should be false for value is null', () => {\n      expect(isPrimitiveReactNode(0)).toBeTruthy();\n    });\n  });\n});\n"],"mappings":"AAAA,SAASA,aAAa,QAAQ,OAAO;AACrC,SAASC,MAAM,EAAEC,IAAI,EAAEC,QAAQ,QAAQ,eAAe;AACtD,SAASC,YAAY,EAAEC,oBAAoB,QAAQ,gBAAgB;AAEnEF,QAAQ,CAACC,YAAY,EAAE,YAAM;EAC3BD,QAAQ,CAAC,oBAAoB,EAAE,YAAM;IACnCD,IAAI,CAAC,wCAAwC,EAAE,YAAM;MACnDD,MAAM,CAACG,YAAY,CAACE,SAAS,CAAC,CAAC,CAACC,SAAS,EAAE;IAC7C,CAAC,CAAC;IAEFL,IAAI,CAAC,mCAAmC,EAAE,YAAM;MAC9CD,MAAM,CAACG,YAAY,CAAC,IAAI,CAAC,CAAC,CAACG,SAAS,EAAE;IACxC,CAAC,CAAC;IAEFL,IAAI,CAAC,oCAAoC,EAAE,YAAM;MAC/CD,MAAM,CAACG,YAAY,CAAC,KAAK,CAAC,CAAC,CAACG,SAAS,EAAE;IACzC,CAAC,CAAC;IAEFL,IAAI,CAAC,2CAA2C,EAAE,YAAM;MACtDD,MAAM,CAACG,YAAY,CAAC,EAAE,CAAC,CAAC,CAACG,SAAS,EAAE;IACtC,CAAC,CAAC;EACJ,CAAC,CAAC;EAEFJ,QAAQ,CAAC,mBAAmB,EAAE,YAAM;IAClCD,IAAI,CAAC,kCAAkC,EAAE,YAAM;MAC7CD,MAAM,CAACG,YAAY,CAAC,CAAC,CAAC,CAAC,CAACI,UAAU,EAAE;IACtC,CAAC,CAAC;IAEFN,IAAI,CAAC,8CAA8C,EAAE,YAAM;MACzDD,MAAM,CAACG,YAAY,CAAC,GAAG,CAAC,CAAC,CAACI,UAAU,EAAE;IACxC,CAAC,CAAC;IAEFN,IAAI,CAAC,2CAA2C,EAAE,YAAM;MACtDD,MAAM,CAACG,YAAY,CAACJ,aAAa,CAAC,KAAK,CAAC,CAAC,CAAC,CAACQ,UAAU,EAAE;IACzD,CAAC,CAAC;EACJ,CAAC,CAAC;AACJ,CAAC,CAAC;AAEFL,QAAQ,CAACE,oBAAoB,EAAE,YAAM;EACnCF,QAAQ,CAAC,oBAAoB,EAAE,YAAM;IACnCD,IAAI,CAAC,sCAAsC,EAAE,YAAM;MACjDD,MAAM,CAACI,oBAAoB,CAAC,KAAK,CAAC,CAAC,CAACE,SAAS,EAAE;IACjD,CAAC,CAAC;IAEFL,IAAI,CAAC,4CAA4C,EAAE,YAAM;MACvDD,MAAM,CAACI,oBAAoB,CAACL,aAAa,CAAC,KAAK,CAAC,CAAC,CAAC,CAACO,SAAS,EAAE;IAChE,CAAC,CAAC;EACJ,CAAC,CAAC;EAEFJ,QAAQ,CAAC,mBAAmB,EAAE,YAAM;IAClCD,IAAI,CAAC,wCAAwC,EAAE,YAAM;MACnDD,MAAM,CAACI,oBAAoB,CAAC,EAAE,CAAC,CAAC,CAACG,UAAU,EAAE;IAC/C,CAAC,CAAC;IAEFN,IAAI,CAAC,mCAAmC,EAAE,YAAM;MAC9CD,MAAM,CAACI,oBAAoB,CAAC,CAAC,CAAC,CAAC,CAACG,UAAU,EAAE;IAC9C,CAAC,CAAC;EACJ,CAAC,CAAC;AACJ,CAAC,CAAC"}