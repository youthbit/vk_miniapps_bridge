{"version":3,"file":"arrays.test.js","names":["test","expect","describe","createArray","chunkArray","uniqueArray","uniqueArrayFallback","toEqual","undefined","array3","array4","entries","each","input","expected"],"sources":["../../../src/__tests__/arrays.test.ts"],"sourcesContent":["import { test, expect, describe } from '@jest/globals';\nimport { createArray, chunkArray, uniqueArray } from '../arrays';\nimport { uniqueArrayFallback } from '../internal/uniqueArray';\n\ntest('createArray', () => {\n  expect(createArray(0)).toEqual([]);\n  expect(createArray(2)).toEqual([0, 1]);\n  expect(createArray(4, 2)).toEqual([2, 3, 4, 5]);\n});\n\ntest('chunkArray', () => {\n  expect(chunkArray(null as any, 1)).toEqual([]);\n  expect(chunkArray(undefined as any, 1)).toEqual([]);\n  expect(chunkArray(0 as any, 1)).toEqual([]);\n\n  expect(chunkArray([], 0)).toEqual([]);\n  expect(chunkArray([1, 2], 0)).toEqual([[1, 2]]);\n\n  expect(chunkArray([], 1)).toEqual([]);\n\n  const array3 = [1, 1, 1];\n\n  expect(chunkArray(array3, 1)).toEqual([[1], [1], [1]]);\n  expect(chunkArray(array3, 2)).toEqual([[1, 1], [1]]);\n  expect(chunkArray(array3, 3)).toEqual([[1, 1, 1]]);\n  expect(chunkArray(array3, 4)).toEqual([[1, 1, 1]]);\n\n  const array4 = [1, 2, 3, 4];\n\n  expect(chunkArray(array4, 1)).toEqual([[1], [2], [3], [4]]);\n  expect(chunkArray(array4, 2)).toEqual([\n    [1, 2],\n    [3, 4],\n  ]);\n  expect(chunkArray(array4, 3)).toEqual([[1, 2, 3], [4]]);\n  expect(chunkArray(array4, 4)).toEqual([array4]);\n  expect(chunkArray(array4, 5)).toEqual([array4]);\n});\n\ndescribe('chunkArray', () => {\n  const entries = [\n    [null as any, []],\n    [undefined as any, []],\n    [0 as any, []],\n\n    [\n      [1, 1, 1, 2, 2, 2],\n      [1, 2],\n    ],\n\n    [\n      [1, 2, 2, 1, 1, 3],\n      [1, 2, 3],\n    ],\n\n    [\n      [1, 1, 2, 3, 5, 5, 7],\n      [1, 2, 3, 5, 7],\n    ],\n\n    [\n      ['a', 'a', 'b', 'a', 'c', 'a', 'd'],\n      ['a', 'b', 'c', 'd'],\n    ],\n\n    [\n      [0, '0', 0, 'false', false, false],\n      [0, '0', 'false', false],\n    ],\n  ];\n\n  test.each(entries)('uniqueArray(%j) should equal %j', (input, expected) => {\n    expect(uniqueArray(input)).toEqual(expected);\n  });\n\n  test.each(entries)('uniqueArray(%j) should equal %j with no Set available', (input, expected) => {\n    expect(uniqueArrayFallback(input)).toEqual(expected);\n  });\n});\n"],"mappings":"AAAA,SAASA,IAAI,EAAEC,MAAM,EAAEC,QAAQ,QAAQ,eAAe;AACtD,SAASC,WAAW,EAAEC,UAAU,EAAEC,WAAW,QAAQ,WAAW;AAChE,SAASC,mBAAmB,QAAQ,yBAAyB;AAE7DN,IAAI,CAAC,aAAa,EAAE,YAAM;EACxBC,MAAM,CAACE,WAAW,CAAC,CAAC,CAAC,CAAC,CAACI,OAAO,CAAC,EAAE,CAAC;EAClCN,MAAM,CAACE,WAAW,CAAC,CAAC,CAAC,CAAC,CAACI,OAAO,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;EACtCN,MAAM,CAACE,WAAW,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAACI,OAAO,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;AACjD,CAAC,CAAC;AAEFP,IAAI,CAAC,YAAY,EAAE,YAAM;EACvBC,MAAM,CAACG,UAAU,CAAC,IAAI,EAAS,CAAC,CAAC,CAAC,CAACG,OAAO,CAAC,EAAE,CAAC;EAC9CN,MAAM,CAACG,UAAU,CAACI,SAAS,EAAS,CAAC,CAAC,CAAC,CAACD,OAAO,CAAC,EAAE,CAAC;EACnDN,MAAM,CAACG,UAAU,CAAC,CAAC,EAAS,CAAC,CAAC,CAAC,CAACG,OAAO,CAAC,EAAE,CAAC;EAE3CN,MAAM,CAACG,UAAU,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAACG,OAAO,CAAC,EAAE,CAAC;EACrCN,MAAM,CAACG,UAAU,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAACG,OAAO,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;EAE/CN,MAAM,CAACG,UAAU,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAACG,OAAO,CAAC,EAAE,CAAC;EAErC,IAAME,MAAM,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;EAExBR,MAAM,CAACG,UAAU,CAACK,MAAM,EAAE,CAAC,CAAC,CAAC,CAACF,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;EACtDN,MAAM,CAACG,UAAU,CAACK,MAAM,EAAE,CAAC,CAAC,CAAC,CAACF,OAAO,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;EACpDN,MAAM,CAACG,UAAU,CAACK,MAAM,EAAE,CAAC,CAAC,CAAC,CAACF,OAAO,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;EAClDN,MAAM,CAACG,UAAU,CAACK,MAAM,EAAE,CAAC,CAAC,CAAC,CAACF,OAAO,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;EAElD,IAAMG,MAAM,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;EAE3BT,MAAM,CAACG,UAAU,CAACM,MAAM,EAAE,CAAC,CAAC,CAAC,CAACH,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;EAC3DN,MAAM,CAACG,UAAU,CAACM,MAAM,EAAE,CAAC,CAAC,CAAC,CAACH,OAAO,CAAC,CACpC,CAAC,CAAC,EAAE,CAAC,CAAC,EACN,CAAC,CAAC,EAAE,CAAC,CAAC,CACP,CAAC;EACFN,MAAM,CAACG,UAAU,CAACM,MAAM,EAAE,CAAC,CAAC,CAAC,CAACH,OAAO,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;EACvDN,MAAM,CAACG,UAAU,CAACM,MAAM,EAAE,CAAC,CAAC,CAAC,CAACH,OAAO,CAAC,CAACG,MAAM,CAAC,CAAC;EAC/CT,MAAM,CAACG,UAAU,CAACM,MAAM,EAAE,CAAC,CAAC,CAAC,CAACH,OAAO,CAAC,CAACG,MAAM,CAAC,CAAC;AACjD,CAAC,CAAC;AAEFR,QAAQ,CAAC,YAAY,EAAE,YAAM;EAC3B,IAAMS,OAAO,GAAG,CACd,CAAC,IAAI,EAAS,EAAE,CAAC,EACjB,CAACH,SAAS,EAAS,EAAE,CAAC,EACtB,CAAC,CAAC,EAAS,EAAE,CAAC,EAEd,CACE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAClB,CAAC,CAAC,EAAE,CAAC,CAAC,CACP,EAED,CACE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAClB,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CACV,EAED,CACE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EACrB,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAChB,EAED,CACE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,EACnC,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,CACrB,EAED,CACE,CAAC,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,OAAO,EAAE,KAAK,EAAE,KAAK,CAAC,EAClC,CAAC,CAAC,EAAE,GAAG,EAAE,OAAO,EAAE,KAAK,CAAC,CACzB,CACF;EAEDR,IAAI,CAACY,IAAI,CAACD,OAAO,CAAC,CAAC,iCAAiC,EAAE,UAACE,KAAK,EAAEC,QAAQ,EAAK;IACzEb,MAAM,CAACI,WAAW,CAACQ,KAAK,CAAC,CAAC,CAACN,OAAO,CAACO,QAAQ,CAAC;EAC9C,CAAC,CAAC;EAEFd,IAAI,CAACY,IAAI,CAACD,OAAO,CAAC,CAAC,uDAAuD,EAAE,UAACE,KAAK,EAAEC,QAAQ,EAAK;IAC/Fb,MAAM,CAACK,mBAAmB,CAACO,KAAK,CAAC,CAAC,CAACN,OAAO,CAACO,QAAQ,CAAC;EACtD,CAAC,CAAC;AACJ,CAAC,CAAC"}