{"version":3,"file":"getPhotoSize.test.js","names":["describe","it","expect","getPhotoSize","toBeNull","url","sizes","width","height","src","toEqual","photoSizes","Infinity"],"sources":["../../../src/__tests__/getPhotoSize.test.ts"],"sourcesContent":["import { describe, it, expect } from '@jest/globals';\nimport { getPhotoSize, PhotoSizeLike } from '../getPhotoSize';\n\ndescribe('getPhotoSize', () => {\n  it('recognizes an invalid or empty array', () => {\n    expect(getPhotoSize(1 as any, 1)).toBeNull();\n    expect(getPhotoSize(null as any, 1)).toBeNull();\n    expect(getPhotoSize({} as any, 1)).toBeNull();\n    expect(getPhotoSize([], 1)).toBeNull();\n  });\n\n  it('handles src/url differences', () => {\n    const url = 'https://vk.com';\n\n    const sizes: PhotoSizeLike[] = [\n      { width: 200, height: 200, src: url },\n      { width: 400, height: 400, url: url },\n      { width: 600, height: 600 },\n    ];\n\n    expect(getPhotoSize(sizes, 200)).toEqual({ width: 200, height: 200, url });\n    expect(getPhotoSize(sizes, 400)).toEqual({ width: 400, height: 400, url });\n    expect(getPhotoSize(sizes, 600)).toEqual({ width: 600, height: 600, url: '' });\n  });\n\n  it('returns the minimum achievable image width', () => {\n    const photoSizes: PhotoSizeLike[] = [\n      {\n        width: 550,\n        height: 550,\n      },\n      {\n        width: 750,\n        height: 750,\n      },\n      {\n        width: 50,\n        height: 50,\n      },\n    ];\n\n    expect(getPhotoSize(photoSizes, 500)).toEqual({\n      width: 550,\n      height: 550,\n      url: '',\n    });\n  });\n\n  it('returns the maximum achievable image width', () => {\n    const photoSizes: PhotoSizeLike[] = [\n      {\n        width: 450,\n        height: 550,\n      },\n      {\n        width: 350,\n        height: 750,\n      },\n      {\n        width: 50,\n        height: 50,\n      },\n      {\n        width: 240,\n        height: 360,\n      },\n    ];\n\n    expect(getPhotoSize(photoSizes, 500)).toEqual({\n      width: 450,\n      height: 550,\n      url: '',\n    });\n  });\n\n  it('returns the minimum achievable image by width and height', () => {\n    const photoSizes: PhotoSizeLike[] = [\n      {\n        width: 550,\n        height: 550,\n      },\n      {\n        width: 750,\n        height: 750,\n      },\n      {\n        width: 50,\n        height: 50,\n      },\n    ];\n\n    expect(getPhotoSize(photoSizes, 500, 600)).toEqual({\n      width: 750,\n      height: 750,\n      url: '',\n    });\n  });\n\n  it('returns the maximum achievable image by width and height', () => {\n    const photoSizes: PhotoSizeLike[] = [\n      {\n        width: 350,\n        height: 250,\n      },\n      {\n        width: 450,\n        height: 550,\n      },\n      {\n        width: 50,\n        height: 50,\n      },\n    ];\n\n    expect(getPhotoSize(photoSizes, 500, 600)).toEqual({\n      width: 450,\n      height: 550,\n      url: '',\n    });\n  });\n\n  it('returns the maximum achievable image in height among the same width', () => {\n    const photoSizes: PhotoSizeLike[] = [\n      {\n        width: 350,\n        height: 250,\n      },\n      {\n        width: 350,\n        height: 550,\n      },\n      {\n        width: 350,\n        height: 300,\n      },\n    ];\n\n    expect(getPhotoSize(photoSizes, 500, 600)).toEqual({\n      width: 350,\n      height: 550,\n      url: '',\n    });\n  });\n\n  it('returns the maximum size (Infinity hack)', () => {\n    const photoSizes: PhotoSizeLike[] = [\n      {\n        width: 550,\n        height: 550,\n      },\n      {\n        width: 750,\n        height: 750,\n      },\n    ];\n\n    expect(getPhotoSize(photoSizes, Infinity)).toEqual({\n      width: 750,\n      height: 750,\n      url: '',\n    });\n  });\n});\n"],"mappings":"AAAA,SAASA,QAAQ,EAAEC,EAAE,EAAEC,MAAM,QAAQ,eAAe;AACpD,SAASC,YAAY,QAAuB,iBAAiB;AAE7DH,QAAQ,CAAC,cAAc,EAAE,YAAM;EAC7BC,EAAE,CAAC,sCAAsC,EAAE,YAAM;IAC/CC,MAAM,CAACC,YAAY,CAAC,CAAC,EAAS,CAAC,CAAC,CAAC,CAACC,QAAQ,EAAE;IAC5CF,MAAM,CAACC,YAAY,CAAC,IAAI,EAAS,CAAC,CAAC,CAAC,CAACC,QAAQ,EAAE;IAC/CF,MAAM,CAACC,YAAY,CAAC,CAAC,CAAC,EAAS,CAAC,CAAC,CAAC,CAACC,QAAQ,EAAE;IAC7CF,MAAM,CAACC,YAAY,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAACC,QAAQ,EAAE;EACxC,CAAC,CAAC;EAEFH,EAAE,CAAC,6BAA6B,EAAE,YAAM;IACtC,IAAMI,GAAG,GAAG,gBAAgB;IAE5B,IAAMC,KAAsB,GAAG,CAC7B;MAAEC,KAAK,EAAE,GAAG;MAAEC,MAAM,EAAE,GAAG;MAAEC,GAAG,EAAEJ;IAAI,CAAC,EACrC;MAAEE,KAAK,EAAE,GAAG;MAAEC,MAAM,EAAE,GAAG;MAAEH,GAAG,EAAEA;IAAI,CAAC,EACrC;MAAEE,KAAK,EAAE,GAAG;MAAEC,MAAM,EAAE;IAAI,CAAC,CAC5B;IAEDN,MAAM,CAACC,YAAY,CAACG,KAAK,EAAE,GAAG,CAAC,CAAC,CAACI,OAAO,CAAC;MAAEH,KAAK,EAAE,GAAG;MAAEC,MAAM,EAAE,GAAG;MAAEH,GAAG,EAAHA;IAAI,CAAC,CAAC;IAC1EH,MAAM,CAACC,YAAY,CAACG,KAAK,EAAE,GAAG,CAAC,CAAC,CAACI,OAAO,CAAC;MAAEH,KAAK,EAAE,GAAG;MAAEC,MAAM,EAAE,GAAG;MAAEH,GAAG,EAAHA;IAAI,CAAC,CAAC;IAC1EH,MAAM,CAACC,YAAY,CAACG,KAAK,EAAE,GAAG,CAAC,CAAC,CAACI,OAAO,CAAC;MAAEH,KAAK,EAAE,GAAG;MAAEC,MAAM,EAAE,GAAG;MAAEH,GAAG,EAAE;IAAG,CAAC,CAAC;EAChF,CAAC,CAAC;EAEFJ,EAAE,CAAC,4CAA4C,EAAE,YAAM;IACrD,IAAMU,UAA2B,GAAG,CAClC;MACEJ,KAAK,EAAE,GAAG;MACVC,MAAM,EAAE;IACV,CAAC,EACD;MACED,KAAK,EAAE,GAAG;MACVC,MAAM,EAAE;IACV,CAAC,EACD;MACED,KAAK,EAAE,EAAE;MACTC,MAAM,EAAE;IACV,CAAC,CACF;IAEDN,MAAM,CAACC,YAAY,CAACQ,UAAU,EAAE,GAAG,CAAC,CAAC,CAACD,OAAO,CAAC;MAC5CH,KAAK,EAAE,GAAG;MACVC,MAAM,EAAE,GAAG;MACXH,GAAG,EAAE;IACP,CAAC,CAAC;EACJ,CAAC,CAAC;EAEFJ,EAAE,CAAC,4CAA4C,EAAE,YAAM;IACrD,IAAMU,UAA2B,GAAG,CAClC;MACEJ,KAAK,EAAE,GAAG;MACVC,MAAM,EAAE;IACV,CAAC,EACD;MACED,KAAK,EAAE,GAAG;MACVC,MAAM,EAAE;IACV,CAAC,EACD;MACED,KAAK,EAAE,EAAE;MACTC,MAAM,EAAE;IACV,CAAC,EACD;MACED,KAAK,EAAE,GAAG;MACVC,MAAM,EAAE;IACV,CAAC,CACF;IAEDN,MAAM,CAACC,YAAY,CAACQ,UAAU,EAAE,GAAG,CAAC,CAAC,CAACD,OAAO,CAAC;MAC5CH,KAAK,EAAE,GAAG;MACVC,MAAM,EAAE,GAAG;MACXH,GAAG,EAAE;IACP,CAAC,CAAC;EACJ,CAAC,CAAC;EAEFJ,EAAE,CAAC,0DAA0D,EAAE,YAAM;IACnE,IAAMU,UAA2B,GAAG,CAClC;MACEJ,KAAK,EAAE,GAAG;MACVC,MAAM,EAAE;IACV,CAAC,EACD;MACED,KAAK,EAAE,GAAG;MACVC,MAAM,EAAE;IACV,CAAC,EACD;MACED,KAAK,EAAE,EAAE;MACTC,MAAM,EAAE;IACV,CAAC,CACF;IAEDN,MAAM,CAACC,YAAY,CAACQ,UAAU,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC,CAACD,OAAO,CAAC;MACjDH,KAAK,EAAE,GAAG;MACVC,MAAM,EAAE,GAAG;MACXH,GAAG,EAAE;IACP,CAAC,CAAC;EACJ,CAAC,CAAC;EAEFJ,EAAE,CAAC,0DAA0D,EAAE,YAAM;IACnE,IAAMU,UAA2B,GAAG,CAClC;MACEJ,KAAK,EAAE,GAAG;MACVC,MAAM,EAAE;IACV,CAAC,EACD;MACED,KAAK,EAAE,GAAG;MACVC,MAAM,EAAE;IACV,CAAC,EACD;MACED,KAAK,EAAE,EAAE;MACTC,MAAM,EAAE;IACV,CAAC,CACF;IAEDN,MAAM,CAACC,YAAY,CAACQ,UAAU,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC,CAACD,OAAO,CAAC;MACjDH,KAAK,EAAE,GAAG;MACVC,MAAM,EAAE,GAAG;MACXH,GAAG,EAAE;IACP,CAAC,CAAC;EACJ,CAAC,CAAC;EAEFJ,EAAE,CAAC,qEAAqE,EAAE,YAAM;IAC9E,IAAMU,UAA2B,GAAG,CAClC;MACEJ,KAAK,EAAE,GAAG;MACVC,MAAM,EAAE;IACV,CAAC,EACD;MACED,KAAK,EAAE,GAAG;MACVC,MAAM,EAAE;IACV,CAAC,EACD;MACED,KAAK,EAAE,GAAG;MACVC,MAAM,EAAE;IACV,CAAC,CACF;IAEDN,MAAM,CAACC,YAAY,CAACQ,UAAU,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC,CAACD,OAAO,CAAC;MACjDH,KAAK,EAAE,GAAG;MACVC,MAAM,EAAE,GAAG;MACXH,GAAG,EAAE;IACP,CAAC,CAAC;EACJ,CAAC,CAAC;EAEFJ,EAAE,CAAC,0CAA0C,EAAE,YAAM;IACnD,IAAMU,UAA2B,GAAG,CAClC;MACEJ,KAAK,EAAE,GAAG;MACVC,MAAM,EAAE;IACV,CAAC,EACD;MACED,KAAK,EAAE,GAAG;MACVC,MAAM,EAAE;IACV,CAAC,CACF;IAEDN,MAAM,CAACC,YAAY,CAACQ,UAAU,EAAEC,QAAQ,CAAC,CAAC,CAACF,OAAO,CAAC;MACjDH,KAAK,EAAE,GAAG;MACVC,MAAM,EAAE,GAAG;MACXH,GAAG,EAAE;IACP,CAAC,CAAC;EACJ,CAAC,CAAC;AACJ,CAAC,CAAC"}