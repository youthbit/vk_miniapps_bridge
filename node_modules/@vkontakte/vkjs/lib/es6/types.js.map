{"version":3,"file":"types.js","names":[],"sources":["../../src/types.ts"],"sourcesContent":["export type Dictionary<T> = { [key: string]: T };\n\nexport type AnyFunction = (...args: any[]) => any;\n\nexport type SupportEvent<T extends keyof GlobalEventHandlersEventMap> = {\n  supported: boolean;\n  name: T;\n};\n\nexport type TimeoutHandle = number | undefined;\n\nexport type Writeable<T> = { -readonly [P in keyof T]: T[P] };\n"],"mappings":""}