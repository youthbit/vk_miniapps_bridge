{"version":3,"file":"numbers.js","names":["leadingZero","number","String","formatNumber","separator","decimalSeparator","numberParts","toString","split","result","i","length","unshift","slice","join"],"sources":["../../src/numbers.ts"],"sourcesContent":["/**\n * Добавляет к числу 0 в начале, если число меньше 10\n */\nexport function leadingZero(number: number): string {\n  if (number >= 10) {\n    return String(number);\n  } else {\n    return '0' + String(number);\n  }\n}\n\n/**\n * Форматирует число, разбивая его на разряды\n */\nexport function formatNumber(number: number, separator = ' ', decimalSeparator = ','): string {\n  const numberParts = number.toString().split('.');\n  const result = [];\n\n  for (let i = numberParts[0].length - 3; i > -3; i -= 3) {\n    result.unshift(numberParts[0].slice(i > 0 ? i : 0, i + 3));\n  }\n\n  numberParts[0] = result.join(separator);\n  return numberParts.join(decimalSeparator);\n}\n"],"mappings":"AAAA;AACA;AACA;AACA,OAAO,SAASA,WAAW,CAACC,MAAc,EAAU;EAClD,IAAIA,MAAM,IAAI,EAAE,EAAE;IAChB,OAAOC,MAAM,CAACD,MAAM,CAAC;EACvB,CAAC,MAAM;IACL,OAAO,GAAG,GAAGC,MAAM,CAACD,MAAM,CAAC;EAC7B;AACF;;AAEA;AACA;AACA;AACA,OAAO,SAASE,YAAY,CAACF,MAAc,EAAmD;EAAA,IAAjDG,SAAS,uEAAG,GAAG;EAAA,IAAEC,gBAAgB,uEAAG,GAAG;EAClF,IAAMC,WAAW,GAAGL,MAAM,CAACM,QAAQ,EAAE,CAACC,KAAK,CAAC,GAAG,CAAC;EAChD,IAAMC,MAAM,GAAG,EAAE;EAEjB,KAAK,IAAIC,CAAC,GAAGJ,WAAW,CAAC,CAAC,CAAC,CAACK,MAAM,GAAG,CAAC,EAAED,CAAC,GAAG,CAAC,CAAC,EAAEA,CAAC,IAAI,CAAC,EAAE;IACtDD,MAAM,CAACG,OAAO,CAACN,WAAW,CAAC,CAAC,CAAC,CAACO,KAAK,CAACH,CAAC,GAAG,CAAC,GAAGA,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,CAAC,CAAC,CAAC;EAC5D;EAEAJ,WAAW,CAAC,CAAC,CAAC,GAAGG,MAAM,CAACK,IAAI,CAACV,SAAS,CAAC;EACvC,OAAOE,WAAW,CAACQ,IAAI,CAACT,gBAAgB,CAAC;AAC3C"}