"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.debounce = debounce;
exports.noop = void 0;
exports.once = once;
exports.throttle = throttle;
var noop = function noop() {}; // eslint-disable-line @typescript-eslint/no-empty-function
exports.noop = noop;
function throttle(fn) {
  var threshold = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 50;
  var scope = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : window;
  var prevDate = Date.now() - threshold;
  var timeoutId;
  var throttledFn = function throttledFn() {
    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }
    var timeLeft = prevDate + threshold - Date.now();
    clearTimeout(timeoutId);
    if (timeLeft > 0) {
      timeoutId = setTimeout(function () {
        prevDate = Date.now();
        fn.apply(scope, args);
      }, timeLeft);
      return;
    }
    prevDate = Date.now();
    fn.apply(scope, args);
  };
  throttledFn.cancel = function () {
    clearTimeout(timeoutId);
  };
  return throttledFn;
}
function debounce(fn, delay) {
  var context = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : window;
  var timeoutId;
  var args;
  var later = function later() {
    return fn.apply(context, args);
  };
  var debouncedFn = function debouncedFn() {
    for (var _len2 = arguments.length, a = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
      a[_key2] = arguments[_key2];
    }
    args = a;
    clearTimeout(timeoutId);
    timeoutId = setTimeout(later, delay);
  };
  debouncedFn.cancel = function () {
    clearTimeout(timeoutId);
  };
  return debouncedFn;
}
function once(fn) {
  var called = false;
  return function () {
    if (called) {
      return;
    }
    called = true;
    for (var _len3 = arguments.length, args = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {
      args[_key3] = arguments[_key3];
    }
    return fn.apply(this, args);
  };
}
//# sourceMappingURL=functions.js.map