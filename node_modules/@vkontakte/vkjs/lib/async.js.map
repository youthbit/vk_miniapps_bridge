{"version":3,"file":"async.js","names":["asyncImportLoader","asyncImport","attempts","Promise","resolve","reject","then","error","setTimeout"],"sources":["../src/async.ts"],"sourcesContent":["/**\n * Loads async import with retries. It can be useful for bad internet connection\n *\n * @example\n * const HeaderLazyComponent = React.lazy(() => asyncImportLoader(() => import('../components/Header/Header')));\n *\n * @example\n * asyncImportLoader(() => import('some-module'), 20).then((someModule) => {\n *   someModule.init();\n * });\n */\nexport const asyncImportLoader = <T>(asyncImport: () => Promise<T>, attempts = 10): Promise<T> => {\n  return new Promise((resolve, reject) => {\n    asyncImport()\n      .then(resolve)\n      .catch((error) => {\n        setTimeout(() => {\n          if (attempts === 0) {\n            reject(error);\n            return;\n          }\n          asyncImportLoader(asyncImport, attempts - 1).then(resolve, reject);\n        }, 1000);\n      });\n  });\n};\n"],"mappings":";;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,IAAMA,iBAAiB,GAAG,SAApBA,iBAAiB,CAAOC,WAA6B,EAAgC;EAAA,IAA9BC,QAAQ,uEAAG,EAAE;EAC/E,OAAO,IAAIC,OAAO,CAAC,UAACC,OAAO,EAAEC,MAAM,EAAK;IACtCJ,WAAW,EAAE,CACVK,IAAI,CAACF,OAAO,CAAC,SACR,CAAC,UAACG,KAAK,EAAK;MAChBC,UAAU,CAAC,YAAM;QACf,IAAIN,QAAQ,KAAK,CAAC,EAAE;UAClBG,MAAM,CAACE,KAAK,CAAC;UACb;QACF;QACAP,iBAAiB,CAACC,WAAW,EAAEC,QAAQ,GAAG,CAAC,CAAC,CAACI,IAAI,CAACF,OAAO,EAAEC,MAAM,CAAC;MACpE,CAAC,EAAE,IAAI,CAAC;IACV,CAAC,CAAC;EACN,CAAC,CAAC;AACJ,CAAC;AAAC"}