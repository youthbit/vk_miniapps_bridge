"use strict";

var _react = require("react");
var _globals = require("@jest/globals");
var _react_utils = require("../react_utils");
(0, _globals.describe)(_react_utils.hasReactNode, function () {
  (0, _globals.describe)('return false cases', function () {
    (0, _globals.test)('should be false for value is undefined', function () {
      (0, _globals.expect)((0, _react_utils.hasReactNode)(undefined)).toBeFalsy();
    });
    (0, _globals.test)('should be false for value is null', function () {
      (0, _globals.expect)((0, _react_utils.hasReactNode)(null)).toBeFalsy();
    });
    (0, _globals.test)('should be false for value is false', function () {
      (0, _globals.expect)((0, _react_utils.hasReactNode)(false)).toBeFalsy();
    });
    (0, _globals.test)('should be false for value is empty string', function () {
      (0, _globals.expect)((0, _react_utils.hasReactNode)('')).toBeFalsy();
    });
  });
  (0, _globals.describe)('return true cases', function () {
    (0, _globals.test)('should be true for value is zero', function () {
      (0, _globals.expect)((0, _react_utils.hasReactNode)(0)).toBeTruthy();
    });
    (0, _globals.test)('should be true for value is not empty string', function () {
      (0, _globals.expect)((0, _react_utils.hasReactNode)(' ')).toBeTruthy();
    });
    (0, _globals.test)('should be true for value is react element', function () {
      (0, _globals.expect)((0, _react_utils.hasReactNode)((0, _react.createElement)('div'))).toBeTruthy();
    });
  });
});
(0, _globals.describe)(_react_utils.isPrimitiveReactNode, function () {
  (0, _globals.describe)('return false cases', function () {
    (0, _globals.test)('should be false for value is boolean', function () {
      (0, _globals.expect)((0, _react_utils.isPrimitiveReactNode)(false)).toBeFalsy();
    });
    (0, _globals.test)('should be false for value is react element', function () {
      (0, _globals.expect)((0, _react_utils.isPrimitiveReactNode)((0, _react.createElement)('div'))).toBeFalsy();
    });
  });
  (0, _globals.describe)('return true cases', function () {
    (0, _globals.test)('should be false for value is undefined', function () {
      (0, _globals.expect)((0, _react_utils.isPrimitiveReactNode)('')).toBeTruthy();
    });
    (0, _globals.test)('should be false for value is null', function () {
      (0, _globals.expect)((0, _react_utils.isPrimitiveReactNode)(0)).toBeTruthy();
    });
  });
});
//# sourceMappingURL=react_utils.test.js.map